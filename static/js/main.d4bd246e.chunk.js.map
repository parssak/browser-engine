{"version":3,"sources":["engine/core/EngineContext.ts","engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","engine/core/MaterialManager.ts","utils/script.utils.ts","engine/core/GeometryManager.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/core/ControlsManager.ts","engine/core/CameraManager.ts","engine/core/Component.ts","utils/entity.utils.ts","utils/ScriptCompiler.ts","state/editor/EditorContext.tsx","state/scene/SceneContext.tsx","state/scripts/ScriptContext.tsx","state/scene/useScene.tsx","ui/panels/Panel.tsx","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/inspector/entity/ComponentFieldValue.tsx","ui/panels/inspector/entity/ComponentNode.tsx","ui/panels/inspector/EntityInspector.tsx","ui/panels/inspector/MaterialInspector.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","time","THREE","_renderElement","isInitialized","this","SceneManager","CameraManager","ComponentManager","MaterialManager","GeometryManager","ControlsManager","renderElement","payload","console","log","updateScenePayload","runEditMode","elapsedTime","start","runPlayScene","setup","getScene","stop","runEditScene","setScenePayload","entityID","entityProps","updateEntityPayload","entity","buildEntity","isPlaying","mouseX","mouseY","handleClick","selectByID","getSelectedEntity","getSelectedEntityPayload","Entity","props","name","mesh","id","components","init","initMesh","initComponents","mat","instance","getMaterial","material","geometry","getGeometry","uuid","Object","entries","forEach","type","setComponent","child","_startComponents","deltaTime","_updateComponents","uniforms","value","componentName","values","component","update","_scene","_entities","_scenePayload","_selectedEntityID","_axes","_gridHelper","_selectionHelper","add","load","texture","rt","image","height","fromEquirectangularTexture","renderer","background","_compileMaterials","debug","sceneConfig","entities","find","e","updateIndex","findIndex","setFromObject","_resetScene","remove","_buildEntities","_startEntities","error","select","undefined","object","push","destroy","input","JSON","parse","stringify","materials","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","Transform","position","rotation","scale","applyMatrix","setX","x","setY","y","setZ","z","setRotationFromEuler","applyPosition","applyRotation","applyScale","Component","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","length","componentInstance","normal","basic","phong","lambert","wireframe","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","key","join","generateNewMaterial","geometries","box","sphere","cylinder","torus","plane","tetrahedron","octahedron","dodecahedron","icosahedron","_changeEvent","FlyControls","domElement","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","translateY","translateZ","set","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","window","innerWidth","innerHeight","dispose","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","addEventListener","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","updateProjectionMatrix","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","lookAt","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","pointer","passive","controls","camera","_setFlyControls","_setOrbitControls","antialias","alpha","raycaster","near","far","currentControls","clock","_setCamera","handleResize","scene","setSize","appendChild","_setControls","_setRaycaster","_runSceneLoop","setFromCamera","intersects","intersectObjects","children","filter","setAnimationLoop","setControls","dimensions","getBoundingClientRect","aspect","width","setPixelRatio","devicePixelRatio","render","getDelta","getElapsedTime","updateScene","updateControls","generateNewEntity","ScriptCompiler","CompileComponentScript","err","three","Instantiate","CreateEntity","Time","scriptCopy","removePrefix","substring","indexOf","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","initialValue","EditorContext","createContext","EditorProvider","contextValue","useRef","Provider","selectedEntityID","selectedMaterialID","setEntities","setSelectedEntityID","setSelectedMaterialID","materialID","setCameraProps","cameraProps","setMaterials","SceneContext","SceneProvider","useState","useMemo","useEffect","updateSpecificEntity","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","ScriptProvider","CompileScripts","useScene","useContext","selectedEntity","selectedMaterial","createEntity","newEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","newParent","createMaterial","materialName","updatedMaterialsObject","newMaterial","selectMaterial","Panel","label","bodyClass","className","useScripts","loadScript","scriptName","foundScript","method","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","useEditor","isRunning","setIsRunning","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","ComponentFieldValue","field","updateField","onChange","Number","ComponentNode","updateComponent","onClick","fieldName","fieldValue","minWidth","EntityInspector","materialType","setMaterialType","geometryType","setGeometryType","propFields","updateComponentFields","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","geometryOptions","componentScriptID","getComponentProps","addComponent","option","newGeometry","MaterialInspector","InspectorPanel","Nav","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","defaultValue","theme","newValue","defaultPath","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4bd246e.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport CameraManager from \"./CameraManager\"\nimport ComponentManager from \"./ComponentManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport SceneManager from \"./SceneManager\"\n\nclass EngineContext {\n  sceneManager: SceneManager\n  cameraManager: CameraManager\n  componentManager: ComponentManager\n  materialManager: MaterialManager\n  geometryManager: GeometryManager\n  controlsManager: ControlsManager\n  time = new THREE.Clock()\n  private _renderElement!: HTMLElement\n  private isInitialized = false\n\n  constructor() {\n    this.sceneManager = new SceneManager()\n    this.cameraManager = new CameraManager()\n    this.componentManager = new ComponentManager()\n    this.materialManager = new MaterialManager()\n    this.geometryManager = new GeometryManager()\n    this.controlsManager = new ControlsManager()\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return\n    console.log('called init')\n    this._renderElement = renderElement\n    if (payload) this.updateScenePayload(payload)\n    this.runEditMode()\n    this.isInitialized = true\n  }\n\n  runPlayMode() {\n    this.time.elapsedTime = 0\n    this.time.start()\n    this.sceneManager.runPlayScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  runEditMode() {\n    this.time.stop()\n    this.sceneManager.runEditScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload) {\n    console.log('updating scene payload')\n    this.sceneManager.setScenePayload(payload)\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps)\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity)\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY)\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID)\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity()\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload()\n  }\n}\n\nconst context = new EngineContext()\n\nexport default context\n","import * as THREE from 'three';\nimport Component from './Component';\nimport ComponentManager from './ComponentManager';\nimport MaterialManager from './MaterialManager';\nimport GeometryManager from './GeometryManager';\nimport SceneManager from './SceneManager';\n\nexport default class Entity {\n  public name: string = \"\";\n  public mesh!: THREE.Mesh;\n  public readonly id: Engine.EntityID;\n  public components: Record<Engine.ComponentType, Component> = {};\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id;\n    this.name = props.name;\n    this.init(props);\n  }\n\n  init(props: Engine.EntityProps) {\n    this.initMesh(props);\n    this.initComponents(props.components);\n  }\n\n  initMesh(props: Engine.EntityProps) {\n    const mat = MaterialManager.instance.getMaterial(props.material);\n    const geometry = GeometryManager.instance.getGeometry(props.geometry);\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat);\n    }\n    else {\n      this.mesh.geometry = geometry;\n      this.mesh.material = mat;\n    }\n    this.mesh.uuid = this.id;\n    this.mesh.name = this.name;\n  }\n\n  initComponents(components: Record<Engine.ComponentType, Engine.ComponentProps>) {\n    this.components = {};\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props);\n    })\n  }\n\n  // TODO: Implement\n  addChild(child: Entity) { }\n\n  // TODO: Implement\n  destroy() { }\n\n  start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents();\n    }\n  }\n\n  update(deltaTime: number, elapsedTime: number) {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents();\n    }\n    const mat = this.mesh.material as any;\n    if (mat.uniforms) {\n      mat.uniforms.time.value = elapsedTime;\n    }\n  }\n\n  getComponent(componentName: string): Component | undefined {\n    return this.components[componentName];\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n}","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\nimport equal from \"deep-equal\"\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(60, 6)\n  private _selectionHelper: THREE.BoxHelper | undefined\n\n  constructor() {\n    if (SceneManager.instance) {\n      return\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    this._scene.add(new THREE.DirectionalLight(0xffffff, 0.6))\n    this._scene.add(new THREE.AmbientLight(0x555555))\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload) {\n    let shouldRecompileMaterials = true\n    // TODO: Optimize this so materials aren't over-compiled\n    this._scenePayload = payload\n    if (shouldRecompileMaterials) {\n      this._compileMaterials()\n      console.debug(\"recompiling mats\")\n    }\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    this._selectionHelper?.setFromObject(this._entities[updateIndex].mesh)\n  }\n\n  updateScene(deltaTime: number, elapsedTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update(deltaTime, elapsedTime)\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._scene.remove(this._axes)\n    this._scene.remove(this._gridHelper)\n    // this._scene.background = new THREE.Color(\"rgb(0,0,0)\")\n    if (this._selectionHelper) this._scene.remove(this._selectionHelper)\n    try {\n      this._buildEntities()\n      this._startEntities()\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    // this._scene.background = new THREE.Color(\"rgb(0,2,60)\")\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    if (this._selectionHelper) this._scene.add(this._selectionHelper)\n    this._buildEntities()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    this.select(this._entities.find((e) => e.id === entityID)?.mesh ?? undefined)\n  }\n\n  /** Sets Entity with corresponding object as selected,\n   *  if no object is passed, deselects any selected entity\n   * @param object THREE.Object3D\n   */\n  select(object?: THREE.Object3D) {\n    if (this.isPlaying) return\n    if (!object && this._selectionHelper && this._selectedEntityID) {\n      this._scene.remove(this._selectionHelper)\n      this._selectedEntityID = undefined\n      return\n    }\n\n    if (object) {\n      this._selectedEntityID = object.uuid\n      if (!this._selectionHelper) {\n        this._selectionHelper = new THREE.BoxHelper(object, 0xffff00)\n        this._scene.add(this._selectionHelper)\n        return\n      }\n\n      this._selectionHelper?.setFromObject(object)\n      this._scene.add(this._selectionHelper)\n    }\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    this._scene.add(entity.mesh)\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      this._scene.remove(entity.mesh)\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildEntities() {\n    if (!this._scenePayload) return\n    // This prevents all of the strange object mutation\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    localPayloadCopy.sceneConfig.entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n\n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.Material = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}","import * as THREE from 'three';\nimport Component from './Component';\nimport Entity from './Entity';\ninterface ITransformProps {\n  position?: THREE.Vector3;\n  rotation?: THREE.Euler;\n  scale?: THREE.Vector3;\n}\n\nexport default class Transform extends Component {\n  entity: Entity;\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, 'XYZ');\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1);\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.entity = entity;\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position;\n    this.rotation = props?.rotation ?? this.rotation;\n    this.scale = props?.scale ?? this.scale;\n    this.applyMatrix();\n  }\n\n  start() {\n    this.applyMatrix();\n  }\n\n  private applyPosition() {\n    this.entity.mesh.position.setX(this.position.x);\n    this.entity.mesh.position.setY(this.position.y);\n    this.entity.mesh.position.setZ(this.position.z);\n  }\n\n  private applyRotation() {\n    this.entity.mesh.setRotationFromEuler(new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z));\n  }\n\n  private applyScale() {\n    this.entity.mesh.scale.setX(this.scale.x);\n    this.entity.mesh.scale.setY(this.scale.y);\n    this.entity.mesh.scale.setZ(this.scale.z);\n  }\n\n  private applyMatrix() {\n    if (!this.entity) { return; }\n    this.applyPosition();\n    this.applyRotation();\n    this.applyScale();\n  }\n\n  update() {\n    this.applyMatrix();\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import * as THREE from \"three\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.Material): void {\n    const mat = materialPayload.material\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: { ...mat.uniforms, time: { value: 0.0 } },\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.MaterialProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","import * as THREE from \"three\"\n\nexport default class GeometryManager {\n  public static instance: GeometryManager\n  geometries: Record<Engine.GeometryType, THREE.BufferGeometry> = {\n    box: new THREE.BoxBufferGeometry(),\n    sphere: new THREE.SphereBufferGeometry(1, 16, 16),\n    cylinder: new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1),\n    torus: new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3),\n    plane: new THREE.PlaneBufferGeometry(1, 1),\n    tetrahedron: new THREE.TetrahedronBufferGeometry(),\n    octahedron: new THREE.OctahedronBufferGeometry(),\n    dodecahedron: new THREE.DodecahedronBufferGeometry(),\n    icosahedron: new THREE.IcosahedronBufferGeometry(),\n  }\n\n  constructor() {\n    if (GeometryManager.instance) return\n    GeometryManager.instance = this\n  }\n\n  getGeometry(type: Engine.GeometryType): THREE.BufferGeometry {\n    return this.geometries[type] ?? this.geometries.box\n  }\n}\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      )\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n        switch (event.code) {\n          case \"KeyW\":\n            dollyIn(0.3)\n            needsUpdate = true\n            break\n            case \"KeyS\":\n            dollyOut(0.3)\n            needsUpdate = true\n            break\n          case scope.keys.UP:\n          case \"Space\":\n            pan(0, scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.LEFT:\n          case \"KeyA\":\n            pan(scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n\n          case scope.keys.RIGHT || \"d\":\n          case \"KeyD\":\n            pan(-scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n          default:\n            break\n        }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(\n    type: Engine.ControlType,\n    camera: THREE.Camera,\n    domElement: HTMLElement\n  ) {\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n  }\n\n  _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false;\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this._setCamera()\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderer.setSize(renderElement.clientWidth, renderElement.clientHeight)\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    \n    this.handleResize()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster\n      .intersectObjects(SceneManager.instance.getScene().children, true)\n      .filter((e) => e.object.type === \"Mesh\")\n\n    if (intersects.length > 0) {\n      SceneManager.instance.select(intersects[0].object)\n    } else {\n      SceneManager.instance.select()\n    }\n  }\n\n  private _setCamera() {\n    if (!this.renderElement) {\n      this.camera = new THREE.PerspectiveCamera(\n        this.fov,\n        window.innerWidth / window.innerHeight,\n        this.near,\n        this.far\n      )\n      this.camera.position.y = 10\n      this.camera.rotation.x = -0.1\n      this.camera.position.z = 50\n    }\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    this.camera.aspect = dimensions.width / dimensions.height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(dimensions.width, dimensions.height)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    const deltaTime = this.clock.getDelta()\n    const elapsedTime = this.clock.getElapsedTime()\n    SceneManager.instance.updateScene(deltaTime, elapsedTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    geometry: 'box',\n    material: 'normal',\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      }\n    },\n  };\n}","/* eslint-disable no-eval */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as three from \"three\"\nimport Component from \"../engine/core/Component\"\nimport ComponentManager from \"../engine/core/ComponentManager\"\nimport context from \"../engine/core/EngineContext\"\nimport SceneManager from \"../engine/core/SceneManager\"\nimport { generateNewEntity } from \"./entity.utils\"\nimport { formatScriptString, injectInitSection } from \"./script.utils\"\n// Helper for script compilation\n\nexport default class ScriptCompiler {\n  public static CompileScripts(scripts: Engine.Script[]) {\n    \n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          ScriptCompiler.CompileComponentScript(script)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  private static CompileComponentScript(script: Engine.Script) {\n    // References to be used when running eval\n    const THREE = three\n    const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n    const CreateEntity = generateNewEntity\n    const Time = context.time;\n\n    const scriptCopy = `${script.content}`\n    const removePrefix = scriptCopy.substring(scriptCopy.indexOf(\"// <public>\") + 11)\n    let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n    pureProps = pureProps.replaceAll(\";\", \",\")\n    pureProps = pureProps.replaceAll(\"=\", \":\")\n    let props: Record<string, Engine.ComponentType> = {}\n    if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n      pureProps = `{${pureProps}}`\n      props = eval(`(${pureProps})`) // ! <-- Eval\n    }\n    let formattedScript = formatScriptString(script)\n    formattedScript = injectInitSection(formattedScript, props)\n    const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n    Object.setPrototypeOf(NewComponent, Component)\n    ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n  }\n}\n","import { ReactElement, useEffect, useRef } from 'react';\nimport { createContext } from 'react';\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>;\n};\n\nconst initialValue: IEditorContext = {}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue);\n\nexport const EditorProvider = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  const contextValue = { renderElement };\n\n\n  return (\n    <EditorContext.Provider value={contextValue}>\n      {children}\n    </EditorContext.Provider>\n  );\n};","import * as THREE from \"three\"\nimport { ReactElement, useEffect, useMemo } from \"react\"\nimport { createContext } from \"react\"\nimport { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport context from \"../../engine/core/EngineContext\"\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig\n  setEntities: (props: Engine.EntityProps[]) => void\n  selectedEntityID: string | null\n  setSelectedEntityID: (entityID: string | null) => void\n  selectedMaterialID: string | null\n  setSelectedMaterialID: (materialID: string | null) => void\n  setCameraProps: (cameraProps: Engine.CameraProps) => void\n  materials: Record<string, Engine.MaterialProps>\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => void\n}\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType,\n    },\n    materials: [],\n  },\n  selectedEntityID: null,\n  selectedMaterialID: null,\n  setEntities: (entities: Engine.EntityProps[]) => {},\n  setSelectedEntityID: (entityID: string | null) => {},\n  setSelectedMaterialID: (materialID: string | null) => {},\n  setCameraProps: (cameraProps: Engine.CameraProps) => {},\n  materials: {},\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => {},\n}\n\nexport const SceneContext = createContext<ISceneContext>(initialValue)\n\nexport const SceneProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [cameraProps, setCameraProps] = useState<Engine.CameraProps>({\n    position: new THREE.Vector3(),\n    fov: 70,\n    near: 0.1,\n    far: 1000,\n    controls: \"orbit\" as Engine.ControlType,\n  })\n\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Entity A\",\n      material: \"normal\",\n      geometry: \"box\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null)\n\n  const [selectedMaterialID, setSelectedMaterialID] = useState<string | null>(null)\n  const [materials, setMaterials] = useState<Record<string, Engine.MaterialProps>>(\n    {} as Record<string, Engine.MaterialProps>\n  )\n  const sceneConfig: Engine.SceneConfig = useMemo(\n    () => ({\n      entities,\n      camera: cameraProps,\n      materials: Object.values(materials),\n    }),\n    [entities, cameraProps, materials]\n  )\n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find((e) => e.id === selectedEntityID)\n      if (!entityProps) return\n      context.updateSpecificEntity(selectedEntityID, entityProps)\n    }\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    selectedMaterialID,\n    setEntities,\n    setCameraProps,\n    setSelectedEntityID,\n    setSelectedMaterialID,\n    materials,\n    setMaterials,\n  }\n  return (\n    <SceneContext.Provider value={contextValue}>{children}</SceneContext.Provider>\n  )\n}\n","import {  ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\n\ninterface IScriptContext {\n  scripts: Record<string, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<string, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<string, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<string, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n  const [scriptBody, setScriptBody] = useState(selectedScript?.content ?? \"\")\n\n  const compileScripts = () => {\n    ScriptCompiler.CompileScripts(Object.values(scripts));\n  }\n\n  useEffect(() => {\n    compileScripts()\n    console.log('SHOULD COMPILE SCRIPTS')\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport { generateNewEntity } from \"../../utils/entity.utils\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\nimport useScripts from \"../scripts/useScripts\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n    selectedMaterialID,\n    setSelectedMaterialID,\n  } = useContext(SceneContext)\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedEntityID(id)\n    setSelectedMaterialID(\"\")\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const selectedMaterial: Engine.MaterialProps | null = useMemo(() => {\n    return sceneConfig.materials.find((e) => e.id === selectedMaterialID) ?? null\n  }, [sceneConfig, selectedMaterialID])\n\n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    setEntities([...sceneConfig.entities, newEntity])\n    context.addNewEntity(newEntity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID\n  ) => {\n    const updatedMaterialsObject = materials;\n    const newMaterial = generateNewMaterial(\n      materialName,\n      vertexShaderID,\n      fragmentShaderID\n    )\n    updatedMaterialsObject[materialName] = newMaterial;\n    setMaterials({...updatedMaterialsObject})\n  }\n\n  const selectMaterial = (materialID: Engine.MaterialID) => {\n    if (materialID === selectedMaterialID) {\n      setSelectedMaterialID(\"\")\n      return\n    }\n    setSelectedMaterialID(materialID)\n    setSelectedEntityID(\"\")\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    selectedMaterial,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n    selectMaterial,\n  }\n}\n\nexport default useScene\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","import { useContext } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { ScriptContext } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n    scriptBody,\n    setScriptBody,\n  } = useContext(ScriptContext)\n\n  const loadScript = (\n    scriptName: string | Engine.ScriptID,\n    method: 'name' | 'id' = 'name'\n  ) => {\n    let foundScript\n    if (method === 'name') {\n      foundScript = scripts[scriptName]\n    } else if (method === 'id') {\n      foundScript = Object.values(scripts).find(script => script.id === scriptName)\n    }\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = []\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(\n        scriptPayload.name,\n        scriptPayload.language,\n        scriptPayload.type\n      )\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.name] = newScript\n    })\n\n    setScripts({...updatedScriptsObject})\n    return newScripts\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    // setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = () => {\n  const { scripts } = useScripts()\n  const { sceneConfig, selectEntity } = useScene()\n  const { renderElement } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts }),\n    [sceneConfig, scripts]\n  )\n\n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload) {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n  }, [renderElement])\n\n  useEffect(() => {\n    console.log(\"scene config change\")\n  }, [sceneConfig])\n  \n  useEffect(() => {\n    console.log(\"scripts change\")\n  }, [scripts])\n\n  useEffect(() => {\n    context.updateScenePayload(scenePayload)\n  }, [scenePayload])\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus()\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n  }\n}\n\nexport default useEditor\n","interface Props {\n  field: Engine.ComponentPropType\n  updateField: (field: Engine.ComponentPropType) => void\n}\n\nconst ComponentFieldValue = ({ field, updateField }: Props): React.ReactElement => {\n  const handleUpdateField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof field === \"number\") {\n      updateField(Number(e.target.value))\n      return\n    }\n\n    if (typeof field === \"string\") {\n      updateField(e.target.value)\n    }\n  }\n\n  if (typeof field === \"number\" || typeof field === \"string\")\n    return (\n      <div className=\"bg-gray-700 text-white px-1  w-max\">\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={typeof field === \"number\" ? field : field}\n          onChange={handleUpdateField}\n          className=\"bg-gray-700 w-16 font-mono text-xs\"\n        />\n      </div>\n    )\n\n  if (Array.isArray(field)) return <div>array field</div>\n\n  return (\n    <div className=\"bg-gray-700 text-white px-2 grid grid-cols-3 gap-1\">\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">x:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.x}\n          onChange={(e) =>\n            updateField({\n              x: Number(e.target.value),\n              y: field?.y ?? 0,\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">y:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.y}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: Number(e.target.value),\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">z:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.z}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: field?.y ?? 0,\n              z: Number(e.target.value),\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n    </div>\n  )\n}\n\nexport default ComponentFieldValue\n","import useScripts from \"../../../../state/scripts/useScripts\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  componentScriptID: Engine.ScriptID\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n  const { loadScript } = useScripts()\n  return (\n    <div className=\"bg-gray-800 text-white pb-4\">\n      <div className=\"flex w-full justify-between items-center mb-2\">\n        <h3>{componentType}</h3>\n        {componentType !== \"Transform\" && (\n          <small\n            className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n            onClick={() => {\n              loadScript(componentType)\n            }}\n          >\n            Open in editor\n          </small>\n        )}\n      </div>\n      <div className=\"space-y-2\">\n        {Object.entries(componentProps).map(([fieldName, fieldValue]) => (\n          <div key={fieldName} className=\"flex space-x-2\">\n            <p\n              className=\"text-xs capitalize text-gray-200\"\n              style={{ minWidth: \"10ch\" }}\n            >\n              {fieldName}\n            </p>\n            <ComponentFieldValue\n              field={fieldValue}\n              updateField={(e) => updateComponent(componentType, fieldName, e)}\n            />\n          </div>\n        ))}\n      </div>\n      <hr className=\"mt-4\" />\n    </div>\n  )\n}\n\nexport default ComponentNode\n","import React, { ReactElement, useEffect, useState } from 'react'\nimport ComponentManager from '../../../engine/core/ComponentManager'\nimport GeometryManager from '../../../engine/core/GeometryManager'\nimport MaterialManager from '../../../engine/core/MaterialManager'\nimport useEditor from '../../../state/editor/useEditor'\nimport useScene from '../../../state/scene/useScene'\nimport Panel from '../Panel'\nimport ComponentNode from './entity/ComponentNode'\n\ninterface Props {\n  selectedEntity: Engine.EntityProps\n}\n\ninterface SelectOption {\n  label: string\n  value: string\n}\n\nexport default function EntityInspector({\n  selectedEntity\n}: Props): ReactElement {\n  const { updateEntity, sceneConfig } = useScene()\n  const { isRunning } = useEditor()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n    >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material)\n    setGeometryType(selectedEntity.geometry)\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): SelectOption[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getMaterialOptions = (): SelectOption[] => {\n    return Object.keys(MaterialManager.instance.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n\n  const materialOptions: SelectOption[] = getMaterialOptions()\n\n  const getGeometryOptions = (): SelectOption[] => {\n    return Object.keys(GeometryManager.instance.geometries).map((geometry) => ({\n      label: geometry,\n      value: geometry,\n    }))\n  }\n\n  const geometryOptions: SelectOption[] = getGeometryOptions()\n\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedEntity?.name}</h1>\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={type}\n            componentScriptID={\"\"}\n            updateComponent={updateComponent}\n          />\n        ))}\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      <section>\n        <div className=\"bg-gray-800 text-white\">\n          <h3>Mesh</h3>\n          <div className=\"space-y-2\">\n            <div className=\"flex space-x-2 items-center\">\n              <p\n                className=\"text-xs font-mono text-gray-200\"\n                style={{ minWidth: \"10ch\" }}\n              >\n                Material\n              </p>\n              <select\n                onChange={(e) => updateMaterial(e.target.value)}\n                value={materialType}\n              >\n                {materialOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"flex space-x-2 items-center\">\n              <p\n                className=\"text-xs font-mono text-gray-200\"\n                style={{ minWidth: \"10ch\" }}\n              >\n                Geometry\n              </p>\n              <select\n                onChange={(e) => updateGeometry(e.target.value)}\n                value={geometryType}\n              >\n                {geometryOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Panel>\n  )\n}\n","import { ReactElement } from 'react'\nimport useScripts from '../../../state/scripts/useScripts'\nimport Panel from '../Panel'\n\ninterface Props {\n  selectedMaterial: Engine.MaterialProps\n}\n\nexport default function MaterialInspector({ selectedMaterial }: Props): ReactElement {\n  const { loadScript } = useScripts()\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedMaterial.name}</h1>\n      <section>\n        Fragment shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.fragmentShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n      <section>\n        Vertex shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.vertexShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n    </Panel>\n  )\n}\n","import useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport EntityInspector from \"./EntityInspector\"\nimport MaterialInspector from \"./MaterialInspector\"\n\nexport default function InspectorPanel() {\n  const { selectedEntity, selectedMaterial } = useScene()\n  \n  if (selectedMaterial) return (\n    <MaterialInspector selectedMaterial={selectedMaterial} />\n  )\n  else if (selectedEntity) return (\n    <EntityInspector selectedEntity={selectedEntity} />\n  )\n  else return <Panel label=\"Inspector\" />\n\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity, createMaterial } = useScene()\n  const { toggleRun, isRunning } = useEditor()\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n  return (\n    <div>\n      <header className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`} />\n      <nav className=\"bg-gray-900 p-2 flex w-full\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={createEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n              defaultPath=\"/src/modal\"\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onClick={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n    `}\n      onClick={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig, selectedMaterial, selectMaterial } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.name)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {sceneConfig.materials.map((material) => (\n          <div\n            key={material.id}\n            className={`project-node ${\n              selectedMaterial?.id === material.id && \"bg-gray-500\"\n            }\n          ${\n            selectedMaterial?.id === material.id\n              ? \"hover:bg-gray-600\"\n              : \"hover:bg-gray-500\"\n              }`}\n            onClick={() => selectMaterial(material.id)}\n          >\n            {material.name}\n          </div>\n        ))}\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import  { ReactElement } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\n\nexport default function BrowserEngine(): ReactElement {\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"1fr 14rem 14rem\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n        </div>\n        <aside className=\"grid grid-rows-5\">\n          <div className=\"row-span-3\">\n            <HierarchyPanel />\n          </div>\n          <div className=\"row-span-2\">\n            <ProjectPanel />\n          </div>\n        </aside>\n        <aside className=\"grid\">\n          <InspectorPanel />\n        </aside>\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}