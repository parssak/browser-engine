{"version":3,"sources":["engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/EngineContext.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/controls/TransformControls.js","engine/core/ControlsManager.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","engine/core/MaterialManager.ts","engine/core/CameraManager.ts","utils/script.utils.ts","engine/core/utils.ts","engine/core/GeometryManager.ts","utils/entity.utils.ts","engine/core/Component.ts","utils/ScriptCompiler.ts","state/editor/EditorContext.tsx","state/scene/SceneContext.tsx","state/scripts/ScriptContext.tsx","state/scene/useScene.tsx","utils/ProjectExporter.ts","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/Panel.tsx","ui/panels/inspector/entity/useControlPanel.tsx","ui/panels/inspector/entity/CameraNode.tsx","ui/panels/inspector/entity/ComponentNode.tsx","ui/panels/inspector/entity/LightNode.tsx","ui/panels/inspector/EntityInspector.tsx","ui/panels/inspector/MaterialInspector.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["Entity","props","id","name","type","components","mesh","light","camera","this","init","_initObject","_appendIdentifiers","_initComponents","SceneManager","isPlaying","_startComponents","deltaTime","elapsedTime","_updateComponents","mat","material","uniforms","time","value","componentName","Object","values","forEach","component","start","update","entries","ComponentManager","instance","setComponent","geometry","_initMesh","lightProps","_initLight","cameraProps","_initCamera","obj","getObject","visible","castShadow","receiveShadow","materialType","geometryType","MaterialManager","getMaterial","GeometryManager","getGeometry","THREE","cam","fov","aspect","CameraManager","getAspect","near","far","color","intensity","color2","createLight","downcastedLight","Color","groundColor","skyColor","object","uuid","_scene","_entities","_scenePayload","_scenePayloadInitialized","_selectedEntityID","_axes","_gridHelper","_cameraHelper","_selectionHelper","_lightHelpers","recursiveSetHelper","add","load","texture","rt","image","height","fromEquirectangularTexture","renderer","background","transformControls","payload","forInit","_compileMaterials","sceneConfig","materials","entities","find","e","entityID","entityProps","updateIndex","findIndex","setFromObject","helper","entity","_resetScene","_hideHelpers","_buildScene","_startEntities","error","console","_showHelpers","undefined","ControlsManager","lookAt","position","select","addObjectControls","removeObjectControls","push","entityObject","target","some","pointLightHelper","remove","destroy","input","localPayloadCopy","JSON","parse","stringify","_buildEntities","buildEntity","log","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","dispose","context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","_renderElement","isInitialized","renderElement","updateScenePayload","runEditMode","runPlayScene","sceneCam","getScene","getObjectByName","useSceneCamera","setup","stop","runEditScene","useEditCamera","forInitialization","setScenePayload","setSceneMaterials","updateEntityPayload","mouseX","mouseY","handleClick","selectByID","deselect","getSelectedEntity","getSelectedEntityPayload","_changeEvent","FlyControls","domElement","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","x","translateY","y","translateZ","z","set","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","window","innerWidth","innerHeight","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","addEventListener","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","enabled","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","updateProjectionMatrix","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","setFromSpherical","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","clientHeight","matrix","isOrthographicCamera","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","pointer","passive","_raycaster","Raycaster","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","_mouseDownEvent","_mouseUpEvent","mode","_objectChangeEvent","TransformControls","_gizmo","TransformControlsGizmo","_plane","TransformControlsPlane","defineProperty","propName","defaultValue","propValue","get","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","_onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","_onPointerUp","updateMatrixWorld","parent","matrixWorld","decompose","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","planeIntersect","space","snap","rotationSnap","rotation","round","point","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","scaleSnap","ROTATION_SPEED","rotationAngle","angleTo","cross","setFromAxisAngle","traverse","child","Object3D","ownerDocument","pointerLockElement","rect","getBoundingClientRect","width","pointerHover","pointerDown","pointerMove","pointerUp","raycaster","includeInvisible","allIntersections","intersectObject","prototype","isTransformControls","_tempEuler","Euler","_alignVector","_zeroVector","_lookAtMatrix","Matrix4","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","LineBasicMaterial","matInvisible","opacity","matHelper","matRed","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matGray","arrowGeometry","CylinderGeometry","translate","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","lineGeometry2","CircleGeometry","arc","TorusGeometry","rotateY","rotateX","gizmoTranslate","Mesh","XYZ","OctahedronGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","Line","TranslateHelperGeometry","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","SphereGeometry","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","renderOrder","force","handles","concat","children","handle","factor","setFromEuler","abs","setFromRotationMatrix","AXIS_HIDE_TRESHOLD","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","a","isTransformControlsGizmo","PlaneGeometry","wireframe","side","DoubleSide","isTransformControlsPlane","controls","_setFlyControls","_setOrbitControls","_initTransformControls","addTransformControlsToScene","objectID","updatedTransformComponent","Transform","tControls","key","toLowerCase","setMode","setTranslationSnap","setRotationSnap","degToRad","setScaleSnap","attach","detach","_object","applyMatrix","setRotationFromEuler","applyPosition","applyRotation","applyScale","Component","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","componentInstance","normal","basic","phong","lambert","antialias","alpha","editCamera","sceneCamera","currentControls","clock","_setCamera","handleResize","scene","appendChild","_setRenderer","_setControls","_setRaycaster","_runSceneLoop","intersects","intersectObjects","withoutHelpers","filter","objectSelect","setAnimationLoop","setControls","setSize","toneMapping","toneMappingExposure","shadowMap","dimensions","w","offsetParent","h","setPixelRatio","devicePixelRatio","render","getDelta","getElapsedTime","updateScene","updateControls","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","join","generateNewMaterial","planeBufferGeometry","geometries","box","sphere","cylinder","torus","plane","tetrahedron","octahedron","dodecahedron","icosahedron","generateNewEntity","generateNewLight","ScriptCompiler","CompileComponentScript","err","three","Instantiate","CreateEntity","Time","scriptCopy","removePrefix","substring","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","initialValue","localScenePayload","EditorContext","createContext","EditorProvider","contextValue","useRef","useMemo","fromLocalStorage","localStorage","getItem","Provider","selectedEntityID","selectedMaterialID","setEntities","setSelectedEntityID","setSelectedMaterialID","materialID","setCameraProps","setMaterials","SceneContext","SceneProvider","useState","useEffect","deselectEntity","updateSpecificEntity","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","val","ScriptProvider","CompileScripts","useScene","useContext","selectedEntity","selectedMaterial","createEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","newParent","createMaterial","materialName","updatedMaterialsObject","newMaterial","selectMaterial","_setEntities","_setMaterials","ProjectExporter","project","zip","JSZip","folder","file","generateHtmlFile","generateJsFile","generateAsync","then","saveAs","useScripts","_setScripts","loadScript","scriptName","foundScript","method","debug","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","_compileScripts","useEditor","rootHook","isRunning","setIsRunning","fromEntries","materialsPayload","m","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","saveScene","setItem","exportScene","Export","Panel","label","bodyClass","className","changingField","useControlPanel","folderName","changeProps","useControls","asEntries","fieldName","fieldValue","onEditStart","onChange","onEditEnd","actualControls","CameraNode","updateCameraProps","updatedCameraProps","ComponentNode","updateComponent","LightNode","updateLightProps","updatedLightProps","EntityInspector","setMaterialType","setGeometryType","propFields","updateComponentFields","field","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","geometryOptions","onBlur","newName","disabled","blur","checked","updatedProps","componentScriptID","fill","flat","titleBar","onClick","getComponentProps","addComponent","option","newGeometry","MaterialInspector","InspectorPanel","Nav","newEntity","newLight","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","theme","newValue","defaultPath","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","isHidden","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","selectedSomething","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd563841.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport ComponentManager from \"./ComponentManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport SceneManager from \"./SceneManager\"\nimport { Color } from \"three\"\nimport CameraManager from \"./CameraManager\"\n\nexport default class Entity {\n  public readonly id: Engine.EntityID\n  public name: string = \"\"\n  public type: Engine.EntityType | undefined\n  public components: Record<Engine.ComponentType, Component> = {}\n  \n  // Based on \"type\", an entity either has a mesh, light, or camera.\n  private mesh: THREE.Mesh | undefined\n  private light: THREE.Light | undefined\n  private camera: THREE.Camera | undefined\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id\n    this.name = props.name\n    this.type = props.type\n    this.init(props)\n  }\n\n  public init(props: Engine.EntityProps) {\n    this._initObject(props)\n    this._appendIdentifiers(props.id, props.name)\n    this._initComponents(props.components)\n  }\n\n  public start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents()\n    }\n  }\n\n  public update(deltaTime: number, elapsedTime: number) {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents()\n    }\n\n    const mat = this?.mesh?.material as any\n    if (mat?.uniforms) {\n      mat.uniforms.time.value = elapsedTime\n    }\n  }\n\n  public destroy() {\n    // TODO: Implement\n  }\n\n  public getComponent(componentName: string): Component | undefined {\n    return this.components[componentName]\n  }\n\n  public getObject(): THREE.Object3D | undefined {\n    return this.mesh || this.light || this.camera\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n\n  private _initComponents(\n    components: Record<Engine.ComponentType, Engine.ComponentProps>\n  ) {\n    this.components = {}\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props)\n    })\n  }\n\n  private _initObject(props: Engine.EntityProps) {\n    if (props.type === \"basic\" && props.geometry && props.material) {\n      this._initMesh(props.material, props.geometry)\n    } else if (props.type === \"light\" && props.lightProps) {\n      this._initLight(props.lightProps)\n    } else if (props.type === \"camera\" && props.cameraProps) {\n      this._initCamera(props.cameraProps)\n    }\n    \n    const obj = this.getObject();\n    if (obj) {\n      obj.visible = props.visible;\n      obj.castShadow = props.castShadow;\n      obj.receiveShadow = props.receiveShadow;\n    }\n  }\n\n  private _initMesh(materialType: string, geometryType: string) {\n    const mat = MaterialManager.instance.getMaterial(materialType)\n    const geometry = GeometryManager.instance.getGeometry(geometryType)\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat)\n    } else {\n      this.mesh.geometry = geometry\n      this.mesh.material = mat\n    }\n  }\n\n  private _initCamera(cameraProps: Engine.CameraProps) {\n    if (!this.camera) {\n      this.camera = new THREE.PerspectiveCamera(\n        cameraProps.fov,\n        CameraManager.instance.getAspect(),\n        cameraProps.near,\n        cameraProps.far\n      )\n    } else {\n      const cam = this.camera as THREE.PerspectiveCamera;\n      cam.fov = cameraProps.fov\n      cam.aspect = CameraManager.instance.getAspect()\n      cam.near = cameraProps.near\n      cam.far = cameraProps.far\n    }\n  }\n\n  private _initLight(lightProps: Engine.LightProps) {\n    const createLight = (props: Engine.LightProps): THREE.Light => {\n      switch (props.type) {\n        case \"ambient\":\n          return new THREE.AmbientLight(props.color, props.intensity)\n        case \"directional\":\n          return new THREE.DirectionalLight(props.color, props.intensity)\n        case \"hemisphere\":\n          return new THREE.HemisphereLight(props.color, props.color2, props.intensity)\n        case \"point\":\n          return new THREE.PointLight(props.color, props.intensity)\n        default:\n          return new THREE.AmbientLight(props.color, props.intensity)\n      }\n    }\n    \n    if (!this.light) {\n      this.light = createLight(lightProps)\n    }\n    \n    this.light.intensity = lightProps.intensity\n    const downcastedLight = this.light as any\n\n    if (downcastedLight.color) {\n      downcastedLight.color = new Color(lightProps.color)\n    }\n    \n    else if (downcastedLight.groundColor) {\n      downcastedLight.groundColor = new Color(lightProps.color)\n    }\n\n    if (downcastedLight.skyColor && lightProps.color2) {\n      downcastedLight.skyColor = new Color(lightProps.color2)\n    }\n  }\n\n  private _appendIdentifiers(id: string, name: string) {\n    const object: THREE.Object3D | undefined = this.getObject()\n    if (!object) return\n    object.uuid = id\n    object.name = name\n  }\n}\n","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\nimport { recursiveSetHelper } from \"./utils\"\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n  private _scenePayloadInitialized = false\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(1000, 200)\n  private _cameraHelper = new THREE.CameraHelper(new THREE.PerspectiveCamera())\n  private _selectionHelper!: THREE.BoxHelper\n  private _lightHelpers: THREE.PointLightHelper[] = []\n\n  constructor() {\n    if (SceneManager.instance) {\n      return SceneManager.instance\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    \n    recursiveSetHelper(this._axes)\n    this._scene.add(this._axes)\n\n    recursiveSetHelper(this._gridHelper)\n    this._scene.add(this._gridHelper)\n    \n    recursiveSetHelper(this._selectionHelper)\n    this._selectionHelper = new THREE.BoxHelper(this._gridHelper, 0xffff00)\n    this._selectionHelper.visible = false\n    this._scene.add(this._selectionHelper)\n\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  // ! Only to be used for adding transform controls from ControlsManager\n  addTransformControlsToScene(transformControls: any) {\n    this._scene.add(transformControls);\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload, forInit?: boolean) {\n    if (forInit && this._scenePayloadInitialized) return\n    this._scenePayload = payload\n    this._compileMaterials()\n    if (forInit) {\n      this._scenePayloadInitialized = true\n    }\n  }\n\n  setSceneMaterials(payload: Engine.MaterialProps[]) {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials = payload;\n    this._compileMaterials()\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    const object = this._entities[updateIndex].getObject()\n    if (object) {\n      if (object.type === \"Mesh\") {\n        this._selectionHelper?.setFromObject(object)\n      } else {\n        this._lightHelpers.forEach((helper) => {\n          helper.update()\n        })\n      }\n    }\n  }\n\n  updateScene(deltaTime: number, elapsedTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update(deltaTime, elapsedTime)\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._hideHelpers()\n    try {\n      this._buildScene()\n      this._startEntities()\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    this._showHelpers()\n    this._buildScene()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    const object = this._entities.find((e) => e.id === entityID)?.getObject() ?? undefined\n    if (object) {\n      ControlsManager.instance.lookAt(object.position)\n      this.select(object)\n    } \n  }\n\n  /** Sets Entity with corresponding object as selected\n   * @param object THREE.Object3D\n   */\n  select(object: THREE.Object3D) {\n    if (this.isPlaying) return\n    \n    if (object) {\n      ControlsManager.instance.addObjectControls(object);\n      this._selectedEntityID = object.uuid\n      this._selectionHelper.setFromObject(object)\n      if (object.type === \"Mesh\") {\n        this._selectionHelper.visible = true\n      } else if (object.type === \"PerspectiveCamera\") {\n        this._cameraHelper.visible = true\n      }\n      return\n    }\n    this._cameraHelper.visible = false\n  }\n\n  deselect() {\n     this._selectionHelper.visible = false\n     this._selectedEntityID = undefined\n     ControlsManager.instance.removeObjectControls()\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    const entityObject = entity.getObject()\n    if (entityObject) {\n      this._scene.add(entityObject)\n      if (entityObject.type === \"PointLight\" && !this.isPlaying) {\n        const previouslyMadeHelper = this._lightHelpers.some(\n          (helper) => helper.uuid === props.id\n        )\n        if (!previouslyMadeHelper) {\n          const sphereSize = 1\n          const pointLightHelper = new THREE.PointLightHelper(\n            entityObject as THREE.PointLight,\n            sphereSize\n          )\n          pointLightHelper.uuid = entityObject.uuid\n          this._scene.add(pointLightHelper)\n          this._lightHelpers.push(pointLightHelper)\n        }\n      } else if (entityObject.type === \"DirectionalLight\") {\n        const light = entityObject as any\n        this._scene.add(light.target)\n      } else if (entityObject.type === \"PerspectiveCamera\") {\n        this._cameraHelper = new THREE.CameraHelper(entityObject as THREE.Camera)\n        recursiveSetHelper(this._cameraHelper)\n        this._cameraHelper.uuid = entityObject.uuid\n        this._cameraHelper.visible = false\n        this._scene.add(this._cameraHelper)\n      }\n    }\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      const object = entity.getObject()\n      if (object) {\n        this._scene.remove(object)\n      }\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildScene() {\n    if (!this._scenePayload) return\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    this._buildEntities(localPayloadCopy.sceneConfig.entities)\n  }\n\n  private _buildEntities(entities: Engine.EntityProps[]) {\n    entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    console.log(\"Compiling materials\", this._scenePayload.sceneConfig.materials)\n\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n      \n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.Material = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n\n  private _hideHelpers() {\n    this._axes.visible = false\n    this._gridHelper.visible = false\n    this._cameraHelper.visible = false\n    ControlsManager.instance.removeObjectControls();\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = false\n    }\n\n    this._lightHelpers.forEach((helper) => {\n      helper.dispose()\n      this._scene.remove(helper)\n    })\n    this._lightHelpers = []\n  }\n\n  private _showHelpers() {\n    this._axes.visible = true\n    this._gridHelper.visible = true\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = true\n      if (this._selectedEntityID) {\n        const object =\n          this._entities.find((e) => e.id === this._selectedEntityID)?.getObject() ??\n          undefined\n        console.log(\"adding\", object)\n        if (object) {\n          ControlsManager.instance.addObjectControls(object)\n        }\n      }\n    }\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}\n\nconst numberToHexadecimal = (value: number): Engine.Hexadecimal => {\n  return parseInt(`${value}`, 16);\n}\n\nexport const rgbToHexa = (r: number, g: number, b: number): Engine.Hexadecimal => {\n  const hexaR = numberToHexadecimal(r)\n  const hexaG = numberToHexadecimal(g)\n  const hexaB = numberToHexadecimal(b)\n  return parseInt(`0x${hexaR}${hexaG}${hexaB}`, 16)\n}","import * as THREE from \"three\"\nimport CameraManager from \"./CameraManager\"\nimport ComponentManager from \"./ComponentManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport SceneManager from \"./SceneManager\"\n\nclass EngineContext {\n  sceneManager: SceneManager\n  cameraManager: CameraManager\n  componentManager: ComponentManager\n  materialManager: MaterialManager\n  geometryManager: GeometryManager\n  controlsManager: ControlsManager\n  time = new THREE.Clock()\n  private _renderElement!: HTMLElement\n  private isInitialized = false\n\n  constructor() {\n    this.sceneManager = new SceneManager()\n    this.cameraManager = new CameraManager()\n    this.componentManager = new ComponentManager()\n    this.materialManager = new MaterialManager()\n    this.geometryManager = new GeometryManager()\n    this.controlsManager = new ControlsManager()\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return\n    this._renderElement = renderElement\n    if (payload) this.updateScenePayload(payload, true)\n    this.runEditMode()\n    this.isInitialized = true\n  }\n\n  runPlayMode() {\n    this.time.elapsedTime = 0\n    this.time.start()\n    this.sceneManager.runPlayScene()\n    const sceneCam = this.sceneManager.getScene().getObjectByName(\"Main Camera\")\n    this.cameraManager.useSceneCamera(sceneCam as THREE.PerspectiveCamera)\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  runEditMode() {\n    this.time.stop()\n    this.sceneManager.runEditScene()\n    this.cameraManager.useEditCamera()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload, forInitialization = false) {\n    this.sceneManager.setScenePayload(payload, forInitialization)\n  }\n\n  updateSceneMaterials(materials: Engine.MaterialProps[]) {\n    this.sceneManager.setSceneMaterials(materials)\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps)\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity)\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY)\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID)\n  }\n\n  deselectEntity() {\n    this.sceneManager.deselect()\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity()\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload()\n  }\n}\n\nconst context = new EngineContext()\n\nexport default context\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0))\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp((2 * deltaY * targetDistance) / element.clientHeight, scope.object.matrix)\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n      switch (event.code) {\n        // case \"KeyW\":\n        //   dollyIn(0.3)\n        //   needsUpdate = true\n        //   break\n        case \"KeyS\":\n          dollyOut(0.3)\n          needsUpdate = true\n          break\n        case scope.keys.UP:\n        case \"Space\":\n          pan(0, scope.keyPanSpeed)\n          needsUpdate = true\n          break\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.LEFT:\n        case \"KeyA\":\n          pan(scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n\n        case scope.keys.RIGHT || \"d\":\n        case \"KeyD\":\n          pan(-scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n        default:\n          break\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  CylinderGeometry,\n  DoubleSide,\n  Euler,\n  Float32BufferAttribute,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  OctahedronGeometry,\n  PlaneGeometry,\n  Quaternion,\n  Raycaster,\n  SphereGeometry,\n  TorusGeometry,\n  Vector3,\n} from \"three\"\n\nconst _raycaster = new Raycaster()\n\nconst _tempVector = new Vector3()\nconst _tempVector2 = new Vector3()\nconst _tempQuaternion = new Quaternion()\nconst _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1),\n}\n\nconst _changeEvent = { type: \"change\" }\nconst _mouseDownEvent = { type: \"mouseDown\" }\nconst _mouseUpEvent = { type: \"mouseUp\", mode: null }\nconst _objectChangeEvent = { type: \"objectChange\" }\n\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super()\n    console.log('made transform controls')\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.visible = false\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    const _gizmo = new TransformControlsGizmo()\n    this._gizmo = _gizmo\n    this.add(_gizmo)\n\n    const _plane = new TransformControlsPlane()\n    this._plane = _plane\n    this.add(_plane)\n\n    const scope = this\n\n    // Defined getter, setter and store for a property\n    function defineProperty(propName, defaultValue) {\n      let propValue = defaultValue\n\n      Object.defineProperty(scope, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue\n        },\n\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value\n            _plane[propName] = value\n            _gizmo[propName] = value\n\n            scope.dispatchEvent({ type: propName + \"-changed\", value: value })\n            scope.dispatchEvent(_changeEvent)\n          }\n        },\n      })\n\n      scope[propName] = defaultValue\n      _plane[propName] = defaultValue\n      _gizmo[propName] = defaultValue\n    }\n\n    // Define properties with getters/setter\n    // Setting the defined property will automatically trigger change event\n    // Defined properties are passed down to gizmo and plane\n\n    defineProperty(\"camera\", camera)\n    defineProperty(\"object\", undefined)\n    defineProperty(\"enabled\", true)\n    defineProperty(\"axis\", null)\n    defineProperty(\"mode\", \"translate\")\n    defineProperty(\"translationSnap\", null)\n    defineProperty(\"rotationSnap\", null)\n    defineProperty(\"scaleSnap\", null)\n    defineProperty(\"space\", \"world\")\n    defineProperty(\"size\", 1)\n    defineProperty(\"dragging\", false)\n    defineProperty(\"showX\", true)\n    defineProperty(\"showY\", true)\n    defineProperty(\"showZ\", true)\n\n    // Reusable utility variables\n\n    const worldPosition = new Vector3()\n    const worldPositionStart = new Vector3()\n    const worldQuaternion = new Quaternion()\n    const worldQuaternionStart = new Quaternion()\n    const cameraPosition = new Vector3()\n    const cameraQuaternion = new Quaternion()\n    const pointStart = new Vector3()\n    const pointEnd = new Vector3()\n    const rotationAxis = new Vector3()\n    const rotationAngle = 0\n    const eye = new Vector3()\n\n    // TODO: remove properties unused in plane and gizmo\n\n    defineProperty(\"worldPosition\", worldPosition)\n    defineProperty(\"worldPositionStart\", worldPositionStart)\n    defineProperty(\"worldQuaternion\", worldQuaternion)\n    defineProperty(\"worldQuaternionStart\", worldQuaternionStart)\n    defineProperty(\"cameraPosition\", cameraPosition)\n    defineProperty(\"cameraQuaternion\", cameraQuaternion)\n    defineProperty(\"pointStart\", pointStart)\n    defineProperty(\"pointEnd\", pointEnd)\n    defineProperty(\"rotationAxis\", rotationAxis)\n    defineProperty(\"rotationAngle\", rotationAngle)\n    defineProperty(\"eye\", eye)\n\n    this._offset = new Vector3()\n    this._startNorm = new Vector3()\n    this._endNorm = new Vector3()\n    this._cameraScale = new Vector3()\n\n    this._parentPosition = new Vector3()\n    this._parentQuaternion = new Quaternion()\n    this._parentQuaternionInv = new Quaternion()\n    this._parentScale = new Vector3()\n\n    this._worldScaleStart = new Vector3()\n    this._worldQuaternionInv = new Quaternion()\n    this._worldScale = new Vector3()\n\n    this._positionStart = new Vector3()\n    this._quaternionStart = new Quaternion()\n    this._scaleStart = new Vector3()\n\n    this._getPointer = getPointer.bind(this)\n    this._onPointerDown = onPointerDown.bind(this)\n    this._onPointerHover = onPointerHover.bind(this)\n    this._onPointerMove = onPointerMove.bind(this)\n    this._onPointerUp = onPointerUp.bind(this)\n\n    this.domElement.addEventListener(\"pointerdown\", this._onPointerDown)\n    this.domElement.addEventListener(\"pointermove\", this._onPointerHover)\n    this.domElement.addEventListener(\"pointerup\", this._onPointerUp)\n  }\n\n  // updateMatrixWorld  updates key transformation variables\n  updateMatrixWorld() {\n    if (this.object !== undefined) {\n      this.object.updateMatrixWorld()\n\n      if (this.object.parent === null) {\n        console.error(\n          \"TransformControls: The attached 3D object must be a part of the scene graph.\"\n        )\n      } else {\n        this.object.parent.matrixWorld.decompose(\n          this._parentPosition,\n          this._parentQuaternion,\n          this._parentScale\n        )\n      }\n\n      this.object.matrixWorld.decompose(\n        this.worldPosition,\n        this.worldQuaternion,\n        this._worldScale\n      )\n\n      this._parentQuaternionInv.copy(this._parentQuaternion).invert()\n      this._worldQuaternionInv.copy(this.worldQuaternion).invert()\n    }\n\n    this.camera.updateMatrixWorld()\n    this.camera.matrixWorld.decompose(\n      this.cameraPosition,\n      this.cameraQuaternion,\n      this._cameraScale\n    )\n\n    this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize()\n\n    super.updateMatrixWorld(this)\n  }\n\n  pointerHover(pointer) {\n    if (this.object === undefined || this.dragging === true) return\n\n    _raycaster.setFromCamera(pointer, this.camera)\n\n    const intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster)\n\n    if (intersect) {\n      this.axis = intersect.object.name\n    } else {\n      this.axis = null\n    }\n  }\n\n  pointerDown(pointer) {\n    if (this.object === undefined || this.dragging === true || pointer.button !== 0)\n      return\n\n    if (this.axis !== null) {\n      _raycaster.setFromCamera(pointer, this.camera)\n\n      const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true)\n\n      if (planeIntersect) {\n        let space = this.space\n\n        if (this.mode === \"scale\") {\n          space = \"local\"\n        } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n          space = \"world\"\n        }\n\n        if (space === \"local\" && this.mode === \"rotate\") {\n          const snap = this.rotationSnap\n\n          if (this.axis === \"X\" && snap)\n            this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap\n          if (this.axis === \"Y\" && snap)\n            this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap\n          if (this.axis === \"Z\" && snap)\n            this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap\n        }\n\n        this.object.updateMatrixWorld()\n        this.object.parent.updateMatrixWorld()\n\n        this._positionStart.copy(this.object.position)\n        this._quaternionStart.copy(this.object.quaternion)\n        this._scaleStart.copy(this.object.scale)\n\n        this.object.matrixWorld.decompose(\n          this.worldPositionStart,\n          this.worldQuaternionStart,\n          this._worldScaleStart\n        )\n\n        this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart)\n      }\n\n      this.dragging = true\n      _mouseDownEvent.mode = this.mode\n      this.dispatchEvent(_mouseDownEvent)\n    }\n  }\n\n  pointerMove(pointer) {\n    const axis = this.axis\n    const mode = this.mode\n    const object = this.object\n    let space = this.space\n\n    if (mode === \"scale\") {\n      space = \"local\"\n    } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n      space = \"world\"\n    }\n\n    if (\n      object === undefined ||\n      axis === null ||\n      this.dragging === false ||\n      pointer.button !== -1\n    )\n      return\n\n    _raycaster.setFromCamera(pointer, this.camera)\n\n    const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true)\n\n    if (!planeIntersect) return\n\n    this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart)\n\n    if (mode === \"translate\") {\n      // Apply translate\n\n      this._offset.copy(this.pointEnd).sub(this.pointStart)\n\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._worldQuaternionInv)\n      }\n\n      if (axis.indexOf(\"X\") === -1) this._offset.x = 0\n      if (axis.indexOf(\"Y\") === -1) this._offset.y = 0\n      if (axis.indexOf(\"Z\") === -1) this._offset.z = 0\n\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale)\n      } else {\n        this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale)\n      }\n\n      object.position.copy(this._offset).add(this._positionStart)\n\n      // Apply translation snap\n\n      if (this.translationSnap) {\n        if (space === \"local\") {\n          object.position.applyQuaternion(\n            _tempQuaternion.copy(this._quaternionStart).invert()\n          )\n\n          if (axis.search(\"X\") !== -1) {\n            object.position.x =\n              Math.round(object.position.x / this.translationSnap) * this.translationSnap\n          }\n\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y =\n              Math.round(object.position.y / this.translationSnap) * this.translationSnap\n          }\n\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z =\n              Math.round(object.position.z / this.translationSnap) * this.translationSnap\n          }\n\n          object.position.applyQuaternion(this._quaternionStart)\n        }\n\n        if (space === \"world\") {\n          if (object.parent) {\n            object.position.add(\n              _tempVector.setFromMatrixPosition(object.parent.matrixWorld)\n            )\n          }\n\n          if (axis.search(\"X\") !== -1) {\n            object.position.x =\n              Math.round(object.position.x / this.translationSnap) * this.translationSnap\n          }\n\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y =\n              Math.round(object.position.y / this.translationSnap) * this.translationSnap\n          }\n\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z =\n              Math.round(object.position.z / this.translationSnap) * this.translationSnap\n          }\n\n          if (object.parent) {\n            object.position.sub(\n              _tempVector.setFromMatrixPosition(object.parent.matrixWorld)\n            )\n          }\n        }\n      }\n    } else if (mode === \"scale\") {\n      if (axis.search(\"XYZ\") !== -1) {\n        let d = this.pointEnd.length() / this.pointStart.length()\n\n        if (this.pointEnd.dot(this.pointStart) < 0) d *= -1\n\n        _tempVector2.set(d, d, d)\n      } else {\n        _tempVector.copy(this.pointStart)\n        _tempVector2.copy(this.pointEnd)\n\n        _tempVector.applyQuaternion(this._worldQuaternionInv)\n        _tempVector2.applyQuaternion(this._worldQuaternionInv)\n\n        _tempVector2.divide(_tempVector)\n\n        if (axis.search(\"X\") === -1) {\n          _tempVector2.x = 1\n        }\n\n        if (axis.search(\"Y\") === -1) {\n          _tempVector2.y = 1\n        }\n\n        if (axis.search(\"Z\") === -1) {\n          _tempVector2.z = 1\n        }\n      }\n\n      // Apply scale\n\n      object.scale.copy(this._scaleStart).multiply(_tempVector2)\n\n      if (this.scaleSnap) {\n        if (axis.search(\"X\") !== -1) {\n          object.scale.x =\n            Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap\n        }\n\n        if (axis.search(\"Y\") !== -1) {\n          object.scale.y =\n            Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap\n        }\n\n        if (axis.search(\"Z\") !== -1) {\n          object.scale.z =\n            Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap\n        }\n      }\n    } else if (mode === \"rotate\") {\n      this._offset.copy(this.pointEnd).sub(this.pointStart)\n\n      const ROTATION_SPEED =\n        20 /\n        this.worldPosition.distanceTo(\n          _tempVector.setFromMatrixPosition(this.camera.matrixWorld)\n        )\n\n      if (axis === \"E\") {\n        this.rotationAxis.copy(this.eye)\n        this.rotationAngle = this.pointEnd.angleTo(this.pointStart)\n\n        this._startNorm.copy(this.pointStart).normalize()\n        this._endNorm.copy(this.pointEnd).normalize()\n\n        this.rotationAngle *=\n          this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1\n      } else if (axis === \"XYZE\") {\n        this.rotationAxis.copy(this._offset).cross(this.eye).normalize()\n        this.rotationAngle =\n          this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) *\n          ROTATION_SPEED\n      } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n        this.rotationAxis.copy(_unit[axis])\n\n        _tempVector.copy(_unit[axis])\n\n        if (space === \"local\") {\n          _tempVector.applyQuaternion(this.worldQuaternion)\n        }\n\n        this.rotationAngle =\n          this._offset.dot(_tempVector.cross(this.eye).normalize()) * ROTATION_SPEED\n      }\n\n      // Apply rotation snap\n\n      if (this.rotationSnap)\n        this.rotationAngle =\n          Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap\n\n      // Apply rotate\n      if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n        object.quaternion.copy(this._quaternionStart)\n        object.quaternion\n          .multiply(\n            _tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)\n          )\n          .normalize()\n      } else {\n        this.rotationAxis.applyQuaternion(this._parentQuaternionInv)\n        object.quaternion.copy(\n          _tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)\n        )\n        object.quaternion.multiply(this._quaternionStart).normalize()\n      }\n    }\n\n    this.dispatchEvent(_changeEvent)\n    this.dispatchEvent(_objectChangeEvent)\n  }\n\n  pointerUp(pointer) {\n    if (pointer.button !== 0) return\n\n    if (this.dragging && this.axis !== null) {\n      _mouseUpEvent.mode = this.mode\n      this.dispatchEvent(_mouseUpEvent)\n    }\n\n    this.dragging = false\n    this.axis = null\n  }\n\n  dispose() {\n    this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown)\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerHover)\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerMove)\n    this.domElement.removeEventListener(\"pointerup\", this._onPointerUp)\n\n    this.traverse(function (child) {\n      if (child.geometry) child.geometry.dispose()\n      if (child.material) child.material.dispose()\n    })\n  }\n\n  // Set current object\n  attach(object) {\n    this.object = object\n    this.visible = true\n\n    return this\n  }\n\n  // Detatch from object\n  detach() {\n    this.object = undefined\n    this.visible = false\n    this.axis = null\n\n    return this\n  }\n\n  getRaycaster() {\n    return _raycaster\n  }\n\n  // TODO: deprecate\n\n  getMode() {\n    return this.mode\n  }\n\n  setMode(mode) {\n    this.mode = mode\n  }\n\n  setTranslationSnap(translationSnap) {\n    this.translationSnap = translationSnap\n  }\n\n  setRotationSnap(rotationSnap) {\n    this.rotationSnap = rotationSnap\n  }\n\n  setScaleSnap(scaleSnap) {\n    this.scaleSnap = scaleSnap\n  }\n\n  setSize(size) {\n    this.size = size\n  }\n\n  setSpace(space) {\n    this.space = space\n  }\n\n  update() {\n    console.warn(\n      \"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\"\n    )\n  }\n}\n\nTransformControls.prototype.isTransformControls = true\n\n// mouse / touch event handlers\n\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button,\n    }\n  } else {\n    const rect = this.domElement.getBoundingClientRect()\n\n    return {\n      x: ((event.clientX - rect.left) / rect.width) * 2 - 1,\n      y: (-(event.clientY - rect.top) / rect.height) * 2 + 1,\n      button: event.button,\n    }\n  }\n}\n\nfunction onPointerHover(event) {\n  if (!this.enabled) return\n\n  switch (event.pointerType) {\n    case \"mouse\":\n    case \"pen\":\n      this.pointerHover(this._getPointer(event))\n      break\n  }\n}\n\nfunction onPointerDown(event) {\n  if (!this.enabled) return\n\n  this.domElement.setPointerCapture(event.pointerId)\n\n  this.domElement.addEventListener(\"pointermove\", this._onPointerMove)\n\n  this.pointerHover(this._getPointer(event))\n  this.pointerDown(this._getPointer(event))\n}\n\nfunction onPointerMove(event) {\n  if (!this.enabled) return\n\n  this.pointerMove(this._getPointer(event))\n}\n\nfunction onPointerUp(event) {\n  if (!this.enabled) return\n\n  this.domElement.releasePointerCapture(event.pointerId)\n\n  this.domElement.removeEventListener(\"pointermove\", this._onPointerMove)\n\n  this.pointerUp(this._getPointer(event))\n}\n\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  const allIntersections = raycaster.intersectObject(object, true)\n\n  for (let i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i]\n    }\n  }\n\n  return false\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler()\nconst _alignVector = new Vector3(0, 1, 0)\nconst _zeroVector = new Vector3(0, 0, 0)\nconst _lookAtMatrix = new Matrix4()\nconst _tempQuaternion2 = new Quaternion()\nconst _identityQuaternion = new Quaternion()\nconst _dirVector = new Vector3()\nconst _tempMatrix = new Matrix4()\n\nconst _unitX = new Vector3(1, 0, 0)\nconst _unitY = new Vector3(0, 1, 0)\nconst _unitZ = new Vector3(0, 0, 1)\n\nconst _v1 = new Vector3()\nconst _v2 = new Vector3()\nconst _v3 = new Vector3()\n\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super()\n\n    this.type = \"TransformControlsGizmo\"\n\n    // shared materials\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true,\n    })\n\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true,\n    })\n\n    // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone()\n    matInvisible.opacity = 0.15\n\n    const matHelper = gizmoLineMaterial.clone()\n    matHelper.opacity = 0.5\n\n    const matRed = gizmoMaterial.clone()\n    matRed.color.setHex(0xff0000)\n\n    const matGreen = gizmoMaterial.clone()\n    matGreen.color.setHex(0x00ff00)\n\n    const matBlue = gizmoMaterial.clone()\n    matBlue.color.setHex(0x0000ff)\n\n    const matRedTransparent = gizmoMaterial.clone()\n    matRedTransparent.color.setHex(0xff0000)\n    matRedTransparent.opacity = 0.5\n\n    const matGreenTransparent = gizmoMaterial.clone()\n    matGreenTransparent.color.setHex(0x00ff00)\n    matGreenTransparent.opacity = 0.5\n\n    const matBlueTransparent = gizmoMaterial.clone()\n    matBlueTransparent.color.setHex(0x0000ff)\n    matBlueTransparent.opacity = 0.5\n\n    const matWhiteTransparent = gizmoMaterial.clone()\n    matWhiteTransparent.opacity = 0.25\n\n    const matYellowTransparent = gizmoMaterial.clone()\n    matYellowTransparent.color.setHex(0xffff00)\n    matYellowTransparent.opacity = 0.25\n\n    const matYellow = gizmoMaterial.clone()\n    matYellow.color.setHex(0xffff00)\n\n    const matGray = gizmoMaterial.clone()\n    matGray.color.setHex(0x787878)\n\n    // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12)\n    arrowGeometry.translate(0, 0.05, 0)\n\n    const scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08)\n    scaleHandleGeometry.translate(0, 0.04, 0)\n\n    const lineGeometry = new BufferGeometry()\n    lineGeometry.setAttribute(\n      \"position\",\n      new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3)\n    )\n\n    const lineGeometry2 = new CylinderGeometry(0.0075, 0.0075, 0.5, 3)\n    lineGeometry2.translate(0, 0.25, 0)\n\n    function CircleGeometry(radius, arc) {\n      const geometry = new TorusGeometry(radius, 0.0075, 3, 64, arc * Math.PI * 2)\n      geometry.rotateY(Math.PI / 2)\n      geometry.rotateX(Math.PI / 2)\n      return geometry\n    }\n\n    // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n    function TranslateHelperGeometry() {\n      const geometry = new BufferGeometry()\n\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3))\n\n      return geometry\n    }\n\n    // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n    const gizmoTranslate = {\n      X: [\n        [new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]],\n      ],\n      Y: [\n        [new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]],\n        [new Mesh(lineGeometry2, matGreen)],\n      ],\n      Z: [\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]],\n      ],\n      XYZ: [\n        [\n          new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()),\n          [0, 0, 0],\n        ],\n      ],\n      XY: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()),\n          [0.15, 0.15, 0],\n        ],\n      ],\n      YZ: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()),\n          [0, 0.15, 0.15],\n          [0, Math.PI / 2, 0],\n        ],\n      ],\n      XZ: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n    }\n\n    const pickerTranslate = {\n      X: [\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0.3, 0, 0],\n          [0, 0, -Math.PI / 2],\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [-0.3, 0, 0],\n          [0, 0, Math.PI / 2],\n        ],\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, -0.3, 0],\n          [0, 0, Math.PI],\n        ],\n      ],\n      Z: [\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, 0, 0.3],\n          [Math.PI / 2, 0, 0],\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, 0, -0.3],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [\n        [\n          new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible),\n          [0, 0.15, 0.15],\n          [0, Math.PI / 2, 0],\n        ],\n      ],\n      XZ: [\n        [\n          new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n    }\n\n    const helperTranslate = {\n      START: [\n        [\n          new Mesh(new OctahedronGeometry(0.01, 2), matHelper),\n          null,\n          null,\n          null,\n          \"helper\",\n        ],\n      ],\n      END: [\n        [\n          new Mesh(new OctahedronGeometry(0.01, 2), matHelper),\n          null,\n          null,\n          null,\n          \"helper\",\n        ],\n      ],\n      DELTA: [\n        [new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"],\n      ],\n      X: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [-1e3, 0, 0],\n          null,\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n      Y: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [0, -1e3, 0],\n          [0, 0, Math.PI / 2],\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n      Z: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [0, 0, -1e3],\n          [0, -Math.PI / 2, 0],\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n    }\n\n    const gizmoRotate = {\n      XYZE: [[new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]],\n      X: [[new Mesh(CircleGeometry(0.5, 0.5), matRed)]],\n      Y: [[new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]],\n      Z: [[new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]],\n      E: [\n        [\n          new Mesh(CircleGeometry(0.75, 1), matYellowTransparent),\n          null,\n          [0, Math.PI / 2, 0],\n        ],\n      ],\n    }\n\n    const helperRotate = {\n      AXIS: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [-1e3, 0, 0],\n          null,\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n    }\n\n    const pickerRotate = {\n      XYZE: [[new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]],\n      X: [\n        [\n          new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible),\n          [0, 0, 0],\n          [0, -Math.PI / 2, -Math.PI / 2],\n        ],\n      ],\n      Y: [\n        [\n          new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible),\n          [0, 0, 0],\n          [Math.PI / 2, 0, 0],\n        ],\n      ],\n      Z: [\n        [\n          new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible),\n          [0, 0, 0],\n          [0, 0, -Math.PI / 2],\n        ],\n      ],\n      E: [[new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]],\n    }\n\n    const gizmoScale = {\n      X: [\n        [new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]],\n      ],\n      Y: [\n        [new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(lineGeometry2, matGreen)],\n        [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]],\n      ],\n      Z: [\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]],\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]],\n      ],\n      XY: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent),\n          [0.15, 0.15, 0],\n        ],\n      ],\n      YZ: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent),\n          [0, 0.15, 0.15],\n          [0, Math.PI / 2, 0],\n        ],\n      ],\n      XZ: [\n        [\n          new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n      XYZ: [[new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]],\n    }\n\n    const pickerScale = {\n      X: [\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0.3, 0, 0],\n          [0, 0, -Math.PI / 2],\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [-0.3, 0, 0],\n          [0, 0, Math.PI / 2],\n        ],\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, -0.3, 0],\n          [0, 0, Math.PI],\n        ],\n      ],\n      Z: [\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, 0, 0.3],\n          [Math.PI / 2, 0, 0],\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible),\n          [0, 0, -0.3],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [\n        [\n          new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible),\n          [0, 0.15, 0.15],\n          [0, Math.PI / 2, 0],\n        ],\n      ],\n      XZ: [\n        [\n          new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0],\n        ],\n      ],\n      XYZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]],\n    }\n\n    const helperScale = {\n      X: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [-1e3, 0, 0],\n          null,\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n      Y: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [0, -1e3, 0],\n          [0, 0, Math.PI / 2],\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n      Z: [\n        [\n          new Line(lineGeometry, matHelper.clone()),\n          [0, 0, -1e3],\n          [0, -Math.PI / 2, 0],\n          [1e6, 1, 1],\n          \"helper\",\n        ],\n      ],\n    }\n\n    // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n    function setupGizmo(gizmoMap) {\n      const gizmo = new Object3D()\n\n      for (const name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone()\n          const position = gizmoMap[name][i][1]\n          const rotation = gizmoMap[name][i][2]\n          const scale = gizmoMap[name][i][3]\n          const tag = gizmoMap[name][i][4]\n\n          // name and tag properties are essential for picking and updating logic.\n          object.name = name\n          object.tag = tag\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2])\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2])\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2])\n          }\n\n          object.updateMatrix()\n\n          const tempGeometry = object.geometry.clone()\n          tempGeometry.applyMatrix4(object.matrix)\n          object.geometry = tempGeometry\n          object.renderOrder = Infinity\n\n          object.position.set(0, 0, 0)\n          object.rotation.set(0, 0, 0)\n          object.scale.set(1, 1, 1)\n\n          gizmo.add(object)\n        }\n      }\n\n      return gizmo\n    }\n\n    // Gizmo creation\n\n    this.gizmo = {}\n    this.picker = {}\n    this.helper = {}\n\n    this.add((this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate)))\n    this.add((this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate)))\n    this.add((this.gizmo[\"scale\"] = setupGizmo(gizmoScale)))\n    this.add((this.picker[\"translate\"] = setupGizmo(pickerTranslate)))\n    this.add((this.picker[\"rotate\"] = setupGizmo(pickerRotate)))\n    this.add((this.picker[\"scale\"] = setupGizmo(pickerScale)))\n    this.add((this.helper[\"translate\"] = setupGizmo(helperTranslate)))\n    this.add((this.helper[\"rotate\"] = setupGizmo(helperRotate)))\n    this.add((this.helper[\"scale\"] = setupGizmo(helperScale)))\n\n    // Pickers should be hidden always\n\n    this.picker[\"translate\"].visible = false\n    this.picker[\"rotate\"].visible = false\n    this.picker[\"scale\"].visible = false\n  }\n\n  // updateMatrixWorld will update transformations and appearance of individual handles\n\n  updateMatrixWorld(force) {\n    const space = this.mode === \"scale\" ? \"local\" : this.space // scale always oriented to local rotation\n\n    const quaternion = space === \"local\" ? this.worldQuaternion : _identityQuaternion\n\n    // Show only gizmos for current transform mode\n\n    this.gizmo[\"translate\"].visible = this.mode === \"translate\"\n    this.gizmo[\"rotate\"].visible = this.mode === \"rotate\"\n    this.gizmo[\"scale\"].visible = this.mode === \"scale\"\n\n    this.helper[\"translate\"].visible = this.mode === \"translate\"\n    this.helper[\"rotate\"].visible = this.mode === \"rotate\"\n    this.helper[\"scale\"].visible = this.mode === \"scale\"\n\n    let handles = []\n    handles = handles.concat(this.picker[this.mode].children)\n    handles = handles.concat(this.gizmo[this.mode].children)\n    handles = handles.concat(this.helper[this.mode].children)\n\n    for (let i = 0; i < handles.length; i++) {\n      const handle = handles[i]\n\n      // hide aligned to camera\n\n      handle.visible = true\n      handle.rotation.set(0, 0, 0)\n      handle.position.copy(this.worldPosition)\n\n      let factor\n\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom\n      } else {\n        factor =\n          this.worldPosition.distanceTo(this.cameraPosition) *\n          Math.min(\n            (1.9 * Math.tan((Math.PI * this.camera.fov) / 360)) / this.camera.zoom,\n            7\n          )\n      }\n\n      handle.scale.set(1, 1, 1).multiplyScalar((factor * this.size) / 4)\n\n      // TODO: simplify helpers and consider decoupling from gizmo\n\n      if (handle.tag === \"helper\") {\n        handle.visible = false\n\n        if (handle.name === \"AXIS\") {\n          handle.position.copy(this.worldPositionStart)\n          handle.visible = !!this.axis\n\n          if (this.axis === \"X\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0))\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion)\n\n            if (\n              Math.abs(\n                _alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)\n              ) > 0.9\n            ) {\n              handle.visible = false\n            }\n          }\n\n          if (this.axis === \"Y\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2))\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion)\n\n            if (\n              Math.abs(\n                _alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)\n              ) > 0.9\n            ) {\n              handle.visible = false\n            }\n          }\n\n          if (this.axis === \"Z\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0))\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion)\n\n            if (\n              Math.abs(\n                _alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)\n              ) > 0.9\n            ) {\n              handle.visible = false\n            }\n          }\n\n          if (this.axis === \"XYZE\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0))\n            _alignVector.copy(this.rotationAxis)\n            handle.quaternion.setFromRotationMatrix(\n              _lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY)\n            )\n            handle.quaternion.multiply(_tempQuaternion)\n            handle.visible = this.dragging\n          }\n\n          if (this.axis === \"E\") {\n            handle.visible = false\n          }\n        } else if (handle.name === \"START\") {\n          handle.position.copy(this.worldPositionStart)\n          handle.visible = this.dragging\n        } else if (handle.name === \"END\") {\n          handle.position.copy(this.worldPosition)\n          handle.visible = this.dragging\n        } else if (handle.name === \"DELTA\") {\n          handle.position.copy(this.worldPositionStart)\n          handle.quaternion.copy(this.worldQuaternionStart)\n          _tempVector\n            .set(1e-10, 1e-10, 1e-10)\n            .add(this.worldPositionStart)\n            .sub(this.worldPosition)\n            .multiplyScalar(-1)\n          _tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert())\n          handle.scale.copy(_tempVector)\n          handle.visible = this.dragging\n        } else {\n          handle.quaternion.copy(quaternion)\n\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart)\n          } else {\n            handle.position.copy(this.worldPosition)\n          }\n\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1\n          }\n        }\n\n        // If updating helper, skip rest of the loop\n        continue\n      }\n\n      // Align handles to current local or world rotation\n\n      handle.quaternion.copy(quaternion)\n\n      if (this.mode === \"translate\" || this.mode === \"scale\") {\n        // Hide translate and scale axis facing the camera\n\n        const AXIS_HIDE_TRESHOLD = 0.99\n        const PLANE_HIDE_TRESHOLD = 0.2\n\n        if (handle.name === \"X\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)\n            ) > AXIS_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n\n        if (handle.name === \"Y\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)\n            ) > AXIS_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n\n        if (handle.name === \"Z\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)\n            ) > AXIS_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n\n        if (handle.name === \"XY\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)\n            ) < PLANE_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n\n        if (handle.name === \"YZ\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)\n            ) < PLANE_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n\n        if (handle.name === \"XZ\") {\n          if (\n            Math.abs(\n              _alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)\n            ) < PLANE_HIDE_TRESHOLD\n          ) {\n            handle.scale.set(1e-10, 1e-10, 1e-10)\n            handle.visible = false\n          }\n        }\n      } else if (this.mode === \"rotate\") {\n        // Align handles to current local or world rotation\n\n        _tempQuaternion2.copy(quaternion)\n        _alignVector\n          .copy(this.eye)\n          .applyQuaternion(_tempQuaternion.copy(quaternion).invert())\n\n        if (handle.name.search(\"E\") !== -1) {\n          handle.quaternion.setFromRotationMatrix(\n            _lookAtMatrix.lookAt(this.eye, _zeroVector, _unitY)\n          )\n        }\n\n        if (handle.name === \"X\") {\n          _tempQuaternion.setFromAxisAngle(\n            _unitX,\n            Math.atan2(-_alignVector.y, _alignVector.z)\n          )\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion)\n          handle.quaternion.copy(_tempQuaternion)\n        }\n\n        if (handle.name === \"Y\") {\n          _tempQuaternion.setFromAxisAngle(\n            _unitY,\n            Math.atan2(_alignVector.x, _alignVector.z)\n          )\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion)\n          handle.quaternion.copy(_tempQuaternion)\n        }\n\n        if (handle.name === \"Z\") {\n          _tempQuaternion.setFromAxisAngle(\n            _unitZ,\n            Math.atan2(_alignVector.y, _alignVector.x)\n          )\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion)\n          handle.quaternion.copy(_tempQuaternion)\n        }\n      }\n\n      // Hide disabled axes\n      handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX)\n      handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY)\n      handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ)\n      handle.visible =\n        handle.visible &&\n        (handle.name.indexOf(\"E\") === -1 || (this.showX && this.showY && this.showZ))\n\n      // highlight selected axis\n\n      handle.material._color = handle.material._color || handle.material.color.clone()\n      handle.material._opacity = handle.material._opacity || handle.material.opacity\n\n      handle.material.color.copy(handle.material._color)\n      handle.material.opacity = handle.material._opacity\n\n      if (this.enabled && this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.color.setHex(0xffff00)\n          handle.material.opacity = 1.0\n        } else if (\n          this.axis.split(\"\").some(function (a) {\n            return handle.name === a\n          })\n        ) {\n          handle.material.color.setHex(0xffff00)\n          handle.material.opacity = 1.0\n        }\n      }\n    }\n\n    super.updateMatrixWorld(force)\n  }\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true\n\n//\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(\n      new PlaneGeometry(100000, 100000, 2, 2),\n      new MeshBasicMaterial({\n        visible: false,\n        wireframe: true,\n        side: DoubleSide,\n        transparent: true,\n        opacity: 0.1,\n        toneMapped: false,\n      })\n    )\n\n    this.type = \"TransformControlsPlane\"\n  }\n\n  updateMatrixWorld(force) {\n    let space = this.space\n\n    this.position.copy(this.worldPosition)\n\n    if (this.mode === \"scale\") space = \"local\" // scale always oriented to local rotation\n\n    _v1\n      .copy(_unitX)\n      .applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion)\n    _v2\n      .copy(_unitY)\n      .applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion)\n    _v3\n      .copy(_unitZ)\n      .applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion)\n\n    // Align the plane for current transform mode, axis and space.\n\n    _alignVector.copy(_v2)\n\n    switch (this.mode) {\n      case \"translate\":\n      case \"scale\":\n        switch (this.axis) {\n          case \"X\":\n            _alignVector.copy(this.eye).cross(_v1)\n            _dirVector.copy(_v1).cross(_alignVector)\n            break\n          case \"Y\":\n            _alignVector.copy(this.eye).cross(_v2)\n            _dirVector.copy(_v2).cross(_alignVector)\n            break\n          case \"Z\":\n            _alignVector.copy(this.eye).cross(_v3)\n            _dirVector.copy(_v3).cross(_alignVector)\n            break\n          case \"XY\":\n            _dirVector.copy(_v3)\n            break\n          case \"YZ\":\n            _dirVector.copy(_v1)\n            break\n          case \"XZ\":\n            _alignVector.copy(_v3)\n            _dirVector.copy(_v2)\n            break\n          case \"XYZ\":\n          case \"E\":\n            _dirVector.set(0, 0, 0)\n            break\n        }\n\n        break\n      case \"rotate\":\n      default:\n        // special case for rotate\n        _dirVector.set(0, 0, 0)\n    }\n\n    if (_dirVector.length() === 0) {\n      // If in rotate mode, make the plane parallel to camera\n      this.quaternion.copy(this.cameraQuaternion)\n    } else {\n      _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector)\n\n      this.quaternion.setFromRotationMatrix(_tempMatrix)\n    }\n\n    super.updateMatrixWorld(force)\n  }\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane }\n","import * as THREE from \"three\"\nimport { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\nimport { TransformControls } from \"../controls/TransformControls\"\nimport SceneManager from \"./SceneManager\"\nimport { recursiveSetHelper } from \"./utils\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n  private transformControls!: THREE.Object3D\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(type: Engine.ControlType, camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) {\n      return\n    }\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n    this._initTransformControls(camera, domElement)\n  }\n\n  lookAt(target: THREE.Vector3) {}\n\n  enableControls() {\n    if (this.controls) this.controls.enabled = true\n  }\n\n  disableControls() {\n    if (this.controls) this.controls.enabled = false\n  }\n\n  private _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  private _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) {\n      // this.controls.enabled = false;\n      return\n    }\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  private _initTransformControls(camera: THREE.Camera, domElement: HTMLElement) {\n    this.transformControls = new TransformControls(camera, domElement) as THREE.Object3D\n    recursiveSetHelper(this.transformControls, \"helper-block\")\n\n    SceneManager.instance.addTransformControlsToScene(this.transformControls)\n\n    //  - Event listeners -\n\n    // Updates position transform of object\n    this.transformControls.addEventListener(\"change\", (e: any) => {\n      const object = e.target.object\n      if (!object) return\n      const objectID = object.uuid\n      const updatedTransformComponent: Engine.ComponentProps = {\n        position: { x: object.position.x, y: object.position.y, z: object.position.z },\n        rotation: { x: object.rotation.x, y: object.rotation.y, z: object.rotation.z },\n        scale: { x: object.scale.x, y: object.scale.y, z: object.scale.z },\n      }\n      const entityProps = SceneManager.instance.getSelectedEntityPayload()\n      if (entityProps && entityProps.id === object.uuid) {\n        entityProps.components.Transform = updatedTransformComponent\n        SceneManager.instance.updateEntityPayload(objectID, entityProps)\n      }\n    })\n\n    // Disabled external controls when using transform controls\n    this.transformControls.addEventListener(\"dragging-changed\", (e: any) => {\n      this.controls.enabled = !e.value\n    })\n\n    // Key controls\n    window.addEventListener(\"keydown\", (event) => {\n      const tControls = this.transformControls as any\n      switch (event.key.toLowerCase()) {\n        case \"w\":\n          tControls.setMode(\"translate\")\n          break\n        case \"e\":\n          tControls.setMode(\"rotate\")\n          break\n        case \"r\":\n          tControls.setMode(\"scale\")\n          break\n        case \"shift\":\n          tControls.setTranslationSnap(1)\n          tControls.setRotationSnap(THREE.MathUtils.degToRad(15))\n          tControls.setScaleSnap(0.25)\n          break\n        default:\n          break\n      }\n    })\n\n    window.addEventListener(\"keyup\", (event) => {\n      const tControls = this.transformControls as any\n      switch (event.key.toLowerCase()) {\n        case \"shift\":\n          tControls.setTranslationSnap(null)\n          tControls.setRotationSnap(null)\n          tControls.setScaleSnap(null)\n          break\n        default:\n          break\n      }\n    })\n  }\n\n  addObjectControls(object: THREE.Object3D) {\n    if (this.transformControls) {\n      this.transformControls.attach(object)\n    }\n  }\n\n  removeObjectControls() {\n    if (this.transformControls) {\n      // @ts-ignore\n      this.transformControls.detach()\n    }\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport Entity from \"./Entity\"\ninterface ITransformProps {\n  position?: THREE.Vector3\n  rotation?: THREE.Euler\n  scale?: THREE.Vector3\n}\n\nexport default class Transform extends Component {\n  entity: Entity\n  _object: THREE.Object3D\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0)\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, \"XYZ\")\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1)\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity)\n    this.entity = entity\n    this._object = this.entity.getObject() as THREE.Object3D\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position\n    this.rotation = props?.rotation ?? this.rotation\n    this.scale = props?.scale ?? this.scale\n    this.applyMatrix()\n  }\n\n  start() {\n    this.applyMatrix()\n  }\n\n  private applyPosition() {\n    this._object.position.set(this.position.x, this.position.y, this.position.z)\n  }\n\n  private applyRotation() {\n    this._object.setRotationFromEuler(\n      new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z)\n    )\n  }\n\n  private applyScale() {\n    this._object.scale.set(this.scale.x, this.scale.y, this.scale.z)\n  }\n\n  private applyMatrix() {\n    if (!this.entity) {\n      return\n    }\n    this.applyPosition()\n    this.applyRotation()\n    this.applyScale()\n  }\n\n  update() {\n    this.applyMatrix()\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import * as THREE from \"three\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.Material): void {\n    console.log('adding custom material', materialPayload)\n    const mat = materialPayload.material\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: { ...mat.uniforms, time: { value: 0.0 } },\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private editCamera!: THREE.PerspectiveCamera\n  private sceneCamera: THREE.PerspectiveCamera | undefined\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this.editCamera = new THREE.PerspectiveCamera(\n      this.fov,\n      window.innerWidth / window.innerHeight,\n      this.near,\n      this.far\n    )\n    this._setCamera(this.editCamera)\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    this._setRenderer()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n    this.handleResize()\n  }\n\n  useSceneCamera(sceneCamera: THREE.PerspectiveCamera) {\n    this.sceneCamera = sceneCamera\n    this._setCamera(this.sceneCamera)\n  }\n\n  useEditCamera() {\n    this._setCamera(this.editCamera)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster.intersectObjects(\n      SceneManager.instance.getScene().children,\n      true\n    )\n\n    const withoutHelpers = intersects.filter((e) => e.object.type !== \"helper\")\n    if (withoutHelpers.length > 0) {\n      if (withoutHelpers[0].object.type === \"helper-block\") {\n        if (withoutHelpers.length === 1) {\n          SceneManager.instance.deselect()\n          return;\n        } else if (SceneManager.instance.getSelectedEntity()) {\n          return;\n        }\n      }\n\n      const objectSelect = intersects.find(\n        (e) => e.object.type === \"Mesh\" || e.object.type === \"PointLightHelper\"\n      )\n\n      if (!objectSelect) {\n        return\n      }\n\n      if (objectSelect.object.type === \"Mesh\") {\n        SceneManager.instance.select(objectSelect.object)\n      } else if (objectSelect.object.type === \"PointLightHelper\") {\n        SceneManager.instance.selectByID(objectSelect.object.uuid)\n      }\n    }\n\n    if (intersects.length === 0) {\n      SceneManager.instance.deselect()\n    }\n  }\n\n  private _setCamera(cam: THREE.PerspectiveCamera) {\n    this.camera = cam\n    this.camera.position.y = 10\n    this.camera.rotation.x = -0.1\n    this.camera.position.z = 50\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  private _setRenderer() {\n    if (!this.renderElement) return\n    this.renderer.setSize(this.renderElement.clientWidth, this.renderElement.clientHeight)\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.renderer.toneMappingExposure = 2\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.BasicShadowMap\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n  }\n\n  getAspect() {\n    return this.camera.aspect\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    const w = this.renderElement?.offsetParent?.clientWidth ?? dimensions.width\n    const h = this.renderElement?.offsetParent?.clientHeight ?? dimensions.height\n    this.camera.aspect = w / h\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(w, h)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    const deltaTime = this.clock.getDelta()\n    const elapsedTime = this.clock.getElapsedTime()\n    SceneManager.instance.updateScene(deltaTime, elapsedTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import * as THREE from 'three';\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `uniform float time;\nuniform mat4 modelMatrix; // object.matrixWorld\nuniform mat4 modelViewMatrix; // camera.matrixWorld * object.matrixWorld\nuniform mat4 projectionMatrix; // camera.projectionMatrix\nuniform mat4 viewMatrix; // camera.matrixWorld\nuniform mat3 normalMatrix; // camera.matrixWorldInverse.transpose()\nuniform vec3 cameraPosition; // camera.position\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `uniform float time;\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\nvoid main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.MaterialProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","export const recursiveSetHelper = (object: THREE.Object3D, type: 'helper' | 'helper-block' = 'helper') => {\n  if (!object) return;\n  object.type = type\n  object.children.forEach(child => recursiveSetHelper(child, type))\n}\n","import * as THREE from \"three\"\n\nconst planeBufferGeometry = new THREE.PlaneBufferGeometry(5, 5)\nplaneBufferGeometry.rotateX(-Math.PI / 2)\nplaneBufferGeometry.scale(5, 1, 5);\nexport default class GeometryManager {\n  public static instance: GeometryManager\n  geometries: Record<Engine.GeometryType, THREE.BufferGeometry> = {\n    box: new THREE.BoxBufferGeometry(),\n    sphere: new THREE.SphereBufferGeometry(1, 16, 16),\n    cylinder: new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1),\n    torus: new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3),\n    plane: planeBufferGeometry,\n    tetrahedron: new THREE.TetrahedronBufferGeometry(),\n    octahedron: new THREE.OctahedronBufferGeometry(),\n    dodecahedron: new THREE.DodecahedronBufferGeometry(),\n    icosahedron: new THREE.IcosahedronBufferGeometry(),\n  }\n\n  constructor() {\n    if (GeometryManager.instance) return\n    GeometryManager.instance = this\n  }\n\n  getGeometry(type: Engine.GeometryType): THREE.BufferGeometry {\n    return this.geometries[type] ?? this.geometries.box\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    type: \"basic\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    geometry: \"box\",\n    material: \"phong\",\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      },\n    },\n  }\n}\n\nexport const generateNewLight = (): Engine.EntityProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name: \"New Light\",\n    type: \"light\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 1, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 0.5, y: 0.5, z: 0.5 },\n      },\n    },\n    lightProps: {\n      intensity: 0.7,\n      type: \"point\",\n      color: \"rgb(255,255,0)\",\n    },\n  }\n}","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","/* eslint-disable no-eval */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as three from \"three\"\nimport Component from \"../engine/core/Component\"\nimport ComponentManager from \"../engine/core/ComponentManager\"\nimport context from \"../engine/core/EngineContext\"\nimport SceneManager from \"../engine/core/SceneManager\"\nimport { generateNewEntity } from \"./entity.utils\"\nimport { formatScriptString, injectInitSection } from \"./script.utils\"\n// Helper for script compilation\n\nexport default class ScriptCompiler {\n  public static CompileScripts(scripts: Engine.Script[]) {\n    \n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          ScriptCompiler.CompileComponentScript(script)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  private static CompileComponentScript(script: Engine.Script) {\n    // References to be used when running eval\n    const THREE = three\n    const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n    const CreateEntity = generateNewEntity\n    const Time = context.time;\n\n    const scriptCopy = `${script.content}`\n    const removePrefix = scriptCopy.substring(scriptCopy.indexOf(\"// <public>\") + 11)\n    let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n    pureProps = pureProps.replaceAll(\";\", \",\")\n    pureProps = pureProps.replaceAll(\"=\", \":\")\n    let props: Record<string, Engine.ComponentType> = {}\n    if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n      pureProps = `{${pureProps}}`\n      props = eval(`(${pureProps})`) // ! <-- Eval\n    }\n    let formattedScript = formatScriptString(script)\n    formattedScript = injectInitSection(formattedScript, props)\n    const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n    Object.setPrototypeOf(NewComponent, Component)\n    ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n  }\n}\n","import { ReactElement, useEffect, useMemo, useRef } from \"react\"\nimport { createContext } from \"react\"\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>\n  localScenePayload: Engine.ScenePayload | null\n}\n\nconst initialValue: IEditorContext = {\n  localScenePayload: null,\n}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue)\n\nexport const EditorProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  \n  const localScenePayload: Engine.ScenePayload | null = useMemo(() => {\n    const fromLocalStorage = localStorage.getItem(\"scenePayload\")\n    if (!fromLocalStorage) return null\n    return JSON.parse(fromLocalStorage)\n  }, [])\n\n  const contextValue = { renderElement, localScenePayload }\n\n  return <EditorContext.Provider value={contextValue}>{children}</EditorContext.Provider>\n}\n","import * as THREE from \"three\"\nimport { ReactElement, useEffect, useMemo } from \"react\"\nimport { createContext } from \"react\"\nimport { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport context from \"../../engine/core/EngineContext\"\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig\n  setEntities: (entities: Engine.EntityProps[]) => void\n  selectedEntityID: string | null\n  setSelectedEntityID: (entityID: Engine.EntityID | null) => void\n  selectedMaterialID: string | null\n  setSelectedMaterialID: (materialID: Engine.MaterialID | null) => void\n  materials: Record<string, Engine.MaterialProps>\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => void\n}\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType,\n    },\n    materials: [],\n  },\n  selectedEntityID: null,\n  selectedMaterialID: null,\n  setEntities: (entities: Engine.EntityProps[]) => {},\n  setSelectedEntityID: (entityID: string | null) => {},\n  setSelectedMaterialID: (materialID: string | null) => {},\n  setCameraProps: (cameraProps: Engine.CameraProps) => {},\n  materials: {},\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => {},\n}\n\nexport const SceneContext = createContext<ISceneContext>(initialValue)\n\nexport const SceneProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  // entities\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Main Camera\",\n      type: \"camera\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 5, z: -5 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      cameraProps: {\n        fov: 70,\n        near: 0.1,\n        far: 1000,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Ambient Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 6, y: 6, z: 6 },\n        },\n      },\n      lightProps: {\n        type: \"ambient\",\n        color: \"#ffffff\",\n        intensity: 0.4,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Directional Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 10, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      lightProps: {\n        type: \"directional\",\n        color: \"#ffffff\",\n        intensity: 0.1,\n      },\n    },\n\n    {\n      id: uuidv4(),\n      name: \"Plane\",\n      type: \"basic\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      material: \"phong\",\n      geometry: \"plane\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null)\n\n  // materials\n  const [selectedMaterialID, setSelectedMaterialID] = useState<string | null>(null)\n  const [materials, setMaterials] = useState<Record<string, Engine.MaterialProps>>(\n    {} as Record<string, Engine.MaterialProps>\n  )\n\n  const sceneConfig: Engine.SceneConfig = useMemo(\n    () => ({\n      entities,\n      materials: Object.values(materials),\n    }),\n    [entities, materials]\n  )\n\n  // use effect on mount that listens for escape key press\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setSelectedEntityID(null)\n        setSelectedMaterialID(null)\n        context.deselectEntity();\n      }\n    }\n    document.addEventListener(\"keydown\", handleKeyDown)\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find((e) => e.id === selectedEntityID)\n      if (!entityProps) return\n      context.updateSpecificEntity(selectedEntityID, entityProps)\n    } \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    selectedMaterialID,\n    setEntities,\n    setSelectedEntityID,\n    setSelectedMaterialID,\n    materials,\n    setMaterials,\n  }\n  return <SceneContext.Provider value={contextValue}>{children}</SceneContext.Provider>\n}\n","import {  ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\n\ninterface IScriptContext {\n  scripts: Record<Engine.ScriptID, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<Engine.ScriptID, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<Engine.ScriptID, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport let scriptBody = \"\"\nexport const setScriptBody = (val: string) => {\n  scriptBody = val\n}\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<Engine.ScriptID, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n\n  const compileScripts = () => {\n    ScriptCompiler.CompileScripts(Object.values(scripts));\n  }\n\n  useEffect(() => {\n    compileScripts()\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport {  generateNewMaterial } from \"../../utils/script.utils\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n    selectedMaterialID,\n    setSelectedMaterialID,\n  } = useContext(SceneContext)\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedMaterialID(\"\")\n    setSelectedEntityID(id)\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const selectedMaterial: Engine.MaterialProps | null = useMemo(() => {\n    return sceneConfig.materials.find((e) => e.id === selectedMaterialID) ?? null\n  }, [sceneConfig, selectedMaterialID])\n  \n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = (entity: Engine.EntityProps) => {\n    setEntities([...sceneConfig.entities, entity])\n    context.addNewEntity(entity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID\n  ) => {\n    const updatedMaterialsObject = materials;\n    const newMaterial = generateNewMaterial(\n      materialName,\n      vertexShaderID,\n      fragmentShaderID\n    )\n    updatedMaterialsObject[materialName] = newMaterial;\n    setMaterials({...updatedMaterialsObject})\n  }\n\n  const selectMaterial = (materialID: Engine.MaterialID) => {\n    if (materialID === selectedMaterialID) {\n      setSelectedMaterialID(\"\")\n      return\n    }\n    setSelectedMaterialID(materialID)\n    setSelectedEntityID(\"\")\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    selectedMaterial,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n    selectMaterial,\n    _setEntities: setEntities,\n    _setMaterials: setMaterials,\n  }\n}\n\nexport default useScene\n","import JSZip from \"jszip\"\nimport { saveAs } from \"file-saver\"\n\nconst baseIndexHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"index.js\"></script>\n</body>\n</html>`\n\nconst baseIndexJS = `// import threejs from cdn\n//import * as THREE from 'three'\n\n`\n\nexport default class ProjectExporter {\n  static Export(project: Engine.ScenePayload) {\n    const zip = new JSZip()\n    const folder = zip.folder(\"project\")\n    folder?.file(\"scene.json\", JSON.stringify(project))\n    folder?.file(\"index.html\", ProjectExporter.generateHtmlFile(project))\n    folder?.file(\"index.js\", ProjectExporter.generateJsFile(project))\n    zip.generateAsync({ type: \"blob\" }).then((content) => {\n      saveAs(content, \"example.zip\")\n    })\n  }\n\n  private static generateHtmlFile(project: Engine.ScenePayload) {\n    const html = baseIndexHTML\n    return html\n  }\n\n  private static generateJsFile(project: Engine.ScenePayload) {\n    const js = baseIndexJS\n    return js\n  }\n}\n","import { useContext } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { scriptBody, ScriptContext, setScriptBody } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  } = useContext(ScriptContext)\n\n  const loadScript = (\n    scriptName: Engine.ScriptID | string,\n    method: \"name\" | \"id\" = \"id\"\n  ) => {\n    console.debug('loading script', scriptName, method, scripts)\n    let foundScript\n    if (method === \"id\") {\n      foundScript = scripts[scriptName]\n    } else if (method === \"name\") {\n      foundScript = Object.values(scripts).find((script) => script.name === scriptName)\n    }\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = []\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(\n        scriptPayload.name,\n        scriptPayload.language,\n        scriptPayload.type\n      )\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.id] = newScript\n    })\n\n    setScripts({ ...updatedScriptsObject })\n    return newScripts\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    _setScripts: setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n    _compileScripts :compileScripts,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport ProjectExporter from \"../../utils/ProjectExporter\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = (rootHook?: boolean) => {\n  const { scripts, _setScripts } = useScripts()\n  const { sceneConfig, selectEntity, _setEntities, _setMaterials } =\n    useScene()\n  const { renderElement, localScenePayload } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n  useEffect(() => {\n    if (!localScenePayload || !rootHook) return\n\n    const scriptsPayload = Object.fromEntries(\n      localScenePayload.scripts.map((s) => [s.id, s])\n    )\n\n    _setScripts(scriptsPayload)\n    ScriptCompiler.CompileScripts(localScenePayload.scripts)\n\n    _setEntities(localScenePayload.sceneConfig.entities)\n\n    const materialsPayload = Object.fromEntries(\n      localScenePayload.sceneConfig.materials.map((m) => [m.id, m])\n    )\n    _setMaterials(materialsPayload)\n\n    context.updateScenePayload(localScenePayload, true)\n  }, [_setEntities, _setMaterials, _setScripts, localScenePayload, rootHook])\n\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts }),\n    [sceneConfig, scripts]\n  )\n  \n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload || !rootHook)  {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderElement, rootHook])\n\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.updateScenePayload(scenePayload)\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus()\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  const exportScene = () => {\n    ProjectExporter.Export(scenePayload)\n  }\n\n  const saveScene = () => {\n    localStorage.setItem(\"scenePayload\", JSON.stringify(scenePayload))\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n    saveScene,\n    exportScene,\n  }\n}\n\nexport default useEditor\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","import { folder, useControls } from \"leva\";\nimport { v4 as uuidv4 } from \"uuid\"\n\nlet changingField = \"\";\n\nconst useControlPanel = (folderName: string, props: Record<string, unknown>, changeProps: (value: any, fieldName: string) => void) => {\n  useControls(() => {\n    const asEntries = Object.entries(props).map(([fieldName, fieldValue]) => {\n      const key = uuidv4()\n      return [\n        key,\n        {\n          value: fieldValue,\n          label: fieldName,\n          onEditStart: () => {\n            changingField = key\n          },\n          onChange: (value: any) => {\n            if (changingField === key) {\n              changeProps(value, fieldName)\n            }\n          },\n          onEditEnd: () => {\n            changingField = \"\"\n          },\n        },\n      ]\n    })\n    const actualControls = Object.fromEntries(asEntries)\n    return { [folderName]: folder(actualControls) }\n  });\n}\n\nexport default useControlPanel;","import { ReactElement } from \"react\"\nimport useControlPanel from \"./useControlPanel\"\ninterface Props {\n  cameraProps: Engine.CameraProps\n  updateCameraProps: (updated: Engine.CameraProps) => void\n}\n\nexport default function CameraNode({\n  cameraProps,\n  updateCameraProps,\n}: Props): ReactElement {\n\n  const setCameraProps = (value: any, fieldName: string) => {\n    const updatedCameraProps = {\n      ...cameraProps,\n    } as any\n    updatedCameraProps[fieldName] = value\n    updateCameraProps(updatedCameraProps)\n  }\n\n  useControlPanel('Camera', cameraProps as any, setCameraProps);\n  \n  return <></>\n}\n","import useControlPanel from \"./useControlPanel\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  componentScriptID: Engine.ScriptID\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n\n  const setComponentProps = (value: any, fieldName: string) => {\n    updateComponent(componentType, fieldName, value)\n  }\n\n  useControlPanel(componentType, componentProps as any, setComponentProps)\n  \n  return <></>\n}\n\nexport default ComponentNode\n","import { ReactElement } from \"react\"\nimport useControlPanel from \"./useControlPanel\"\n\ninterface Props {\n  lightProps: Engine.LightProps\n  updateLightProps: (updated: Engine.LightProps) => void\n}\n\nexport default function LightNode({ lightProps, updateLightProps }: Props): ReactElement {\n\n  const setLightProps = (value: any, fieldName: string) => {\n    const updatedLightProps = {\n      ...lightProps,\n    } as any\n    updatedLightProps[fieldName] = value\n    updateLightProps(updatedLightProps)\n  }\n  useControlPanel('Light', lightProps as any, setLightProps)\n  return <></>\n}\n","import { Leva } from \"leva\"\nimport { ReactElement, useEffect, useState } from \"react\"\nimport ComponentManager from \"../../../engine/core/ComponentManager\"\nimport GeometryManager from \"../../../engine/core/GeometryManager\"\nimport MaterialManager from \"../../../engine/core/MaterialManager\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport CameraNode from \"./entity/CameraNode\"\nimport ComponentNode from \"./entity/ComponentNode\"\nimport LightNode from \"./entity/LightNode\"\n\ninterface Props {\n  selectedEntity: Engine.EntityProps\n}\n\ninterface SelectOption {\n  label: string\n  value: string\n}\n\nexport default function EntityInspector({ selectedEntity }: Props): ReactElement {\n  const { updateEntity, sceneConfig } = useScene()\n  const { isRunning } = useEditor()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n  >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material ?? \"\")\n    setGeometryType(selectedEntity.geometry ?? \"\")\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const handleChangeName = (newName: string) => {\n    if (!selectedEntity || selectedEntity.type === \"camera\") return\n    updateEntity({ ...selectedEntity, name: newName })\n  }\n\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): SelectOption[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const updateLightProps = (updatedProps: Engine.LightProps) => {\n    if (selectedEntity) {\n      selectedEntity.lightProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateCameraProps = (updatedProps: Engine.CameraProps) => {\n    if (selectedEntity) {\n      selectedEntity.cameraProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const showShadowOptions = (): boolean => {\n    return !(\n      selectedEntity.type === \"light\" &&\n      selectedEntity.lightProps &&\n      selectedEntity.lightProps.type === \"ambient\"\n    )\n  }\n\n  // #region -- mesh --\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getMaterialOptions = (): SelectOption[] => {\n    return Object.keys(MaterialManager.instance.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n\n  const materialOptions: SelectOption[] = getMaterialOptions()\n\n  const getGeometryOptions = (): SelectOption[] => {\n    return Object.keys(GeometryManager.instance.geometries).map((geometry) => ({\n      label: geometry,\n      value: geometry,\n    }))\n  }\n\n  const geometryOptions: SelectOption[] = getGeometryOptions()\n  // #endregion\n\n  return (\n    <Panel label=\"Inspector\">\n      <h1>\n        <input\n          className=\"transition bg-gray-800 hover:bg-gray-700 focus:bg-gray-900\"\n          type=\"text\"\n          defaultValue={selectedEntity?.name}\n          key={selectedEntity?.id ?? \"\"}\n          onBlur={(e) => handleChangeName(e.target.value)}\n          disabled={selectedEntity?.type === \"camera\"}\n          // @ts-ignore\n          onKeyDown={(e) => e.key === \"Enter\" && e.target.blur()}\n        />\n      </h1>\n      <section className=\"space-y-2 py-2\">\n        <div className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Visible</p>\n          <input\n            type=\"checkbox\"\n            checked={selectedEntity.visible}\n            onChange={(e) =>\n              updateEntity({ ...selectedEntity, visible: e.target.checked })\n            }\n          />\n        </div>\n        {showShadowOptions() && (\n          <>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Cast shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.castShadow}\n                onChange={(e) =>\n                  updateEntity({ ...selectedEntity, castShadow: e.target.checked })\n                }\n              />\n            </div>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Receive shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.receiveShadow}\n                onChange={(e) =>\n                  updateEntity({\n                    ...selectedEntity,\n                    castShadow: e.target.checked,\n                  })\n                }\n              />\n            </div>\n          </>\n        )}\n      </section>\n\n      {/* Light */}\n      {selectedEntity.type === \"light\" && selectedEntity.lightProps && (\n        <LightNode\n          lightProps={selectedEntity.lightProps}\n          updateLightProps={updateLightProps}\n          key={selectedEntity.id}\n        />\n      )}\n\n      {/* Camera */}\n      {selectedEntity.type === \"camera\" && selectedEntity.cameraProps && (\n        <CameraNode\n          cameraProps={selectedEntity.cameraProps}\n          updateCameraProps={updateCameraProps}\n        />\n      )}\n\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={`${type}--${selectedEntity.id}`}\n            componentScriptID={\"\"}\n            updateComponent={updateComponent}\n          />\n        ))}\n        <Leva fill flat titleBar={false} />\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      {selectedEntity.type === \"basic\" && (\n        <section>\n          <div className=\"bg-gray-800 text-white\">\n            <h3>Mesh</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Material</p>\n                <select\n                  onChange={(e) => updateMaterial(e.target.value)}\n                  value={materialType}\n                >\n                  {materialOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Geometry</p>\n                <select\n                  onChange={(e) => updateGeometry(e.target.value)}\n                  value={geometryType}\n                >\n                  {geometryOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </Panel>\n  )\n}\n","import { ReactElement } from 'react'\nimport useScripts from '../../../state/scripts/useScripts'\nimport Panel from '../Panel'\n\ninterface Props {\n  selectedMaterial: Engine.MaterialProps\n}\n\nexport default function MaterialInspector({ selectedMaterial }: Props): ReactElement {\n  const { loadScript } = useScripts()\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedMaterial.name}</h1>\n      <section>\n        Fragment shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.fragmentShaderID)\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n      <section>\n        Vertex shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.vertexShaderID)\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n    </Panel>\n  )\n}\n","import useScene from \"../../../state/scene/useScene\"\nimport EntityInspector from \"./EntityInspector\"\nimport MaterialInspector from \"./MaterialInspector\"\n\nexport default function InspectorPanel() {\n  const { selectedEntity, selectedMaterial} = useScene()\n  \n  if (selectedMaterial) return (\n    <MaterialInspector selectedMaterial={selectedMaterial} />\n  )\n  else if (selectedEntity) return (\n    <EntityInspector selectedEntity={selectedEntity} />\n  )\n  else return <></>\n\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport { generateNewEntity, generateNewLight } from \"../../../utils/entity.utils\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity,  createMaterial } = useScene()\n  const { toggleRun, isRunning, saveScene, exportScene } = useEditor(true)\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleCreateEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    createEntity(newEntity);\n  }\n\n  const handleCreateLight = () => {\n    const newLight: Engine.EntityProps = generateNewLight()\n    createEntity(newLight)\n  }\n\n  const handleSaveScene = () => {\n    saveScene();\n  }\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n\n  const handleExportScene = () => {\n    exportScene();\n  }\n  \n  return (\n    <div>\n      <header className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`} />\n      <nav className=\"bg-gray-900 p-2 flex w-full shadow-sm\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={handleCreateEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateLight} className=\"secondary\">\n            Add Light\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n          {/* save scene button */}\n          <button onClick={handleSaveScene} className=\"secondary\">\n            Save Scene\n          </button>\n          {/* <button onClick={handleExportScene} className=\"secondary\">\n            Export Scene\n          </button> */}\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n              defaultPath=\"/src/modal\"\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onMouseDown={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  const isHidden = useMemo(() => !entity.visible, [entity])\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n          ${isHidden && \"opacity-50\"}\n\n    `}\n      onMouseDown={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig, selectedMaterial, selectMaterial } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.id)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {sceneConfig.materials.map((material) => (\n          <div\n            key={material.id}\n            className={`project-node ${\n              selectedMaterial?.id === material.id && \"bg-gray-500\"\n            }\n          ${\n            selectedMaterial?.id === material.id\n              ? \"hover:bg-gray-600\"\n              : \"hover:bg-gray-500\"\n              }`}\n            onClick={() => selectMaterial(material.id)}\n          >\n            {material.name}\n          </div>\n        ))}\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\nimport useScene from \"../../state/scene/useScene\"\n\nexport default function BrowserEngine(): ReactElement {\n  const { selectedEntity, selectedMaterial } = useScene()\n  const selectedSomething: boolean = useMemo(\n    () => !!selectedEntity || !!selectedMaterial,\n    [selectedEntity, selectedMaterial]\n  )\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"80vw 1fr\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n          {/* <div className=\"absolute inset-0 bg-red-200 border-2 border-green-500\"></div> */}\n        </div>\n        {selectedSomething ? (\n          <aside className=\"grid\">\n            <InspectorPanel />\n          </aside>\n        ) : (\n          <aside className=\"grid grid-rows-5\">\n            <div className=\"row-span-3\">\n              <HierarchyPanel />\n            </div>\n            <div className=\"row-span-2\">\n              <ProjectPanel />\n            </div>\n          </aside>\n        )}\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}