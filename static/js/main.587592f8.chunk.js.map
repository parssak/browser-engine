{"version":3,"sources":["engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/Component.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","utils/script.utils.ts","engine/core/MaterialManager.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/core/ControlsManager.ts","engine/core/CameraManager.ts","engine/core/GeometryManager.ts","state/scripts/ScriptContext.tsx","utils/entity.utils.ts","state/editor/EditorContext.tsx","engine/core/EngineContext.ts","state/scene/SceneContext.tsx","state/scene/useScene.tsx","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/Panel.tsx","ui/panels/inspector/ComponentFieldValue.tsx","ui/panels/inspector/ComponentNode.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["Entity","props","name","mesh","id","components","this","init","initMesh","initComponents","mat","MaterialManager","instance","getMaterial","material","geometry","GeometryManager","getGeometry","THREE","uuid","Object","entries","forEach","type","ComponentManager","setComponent","child","SceneManager","isPlaying","_startComponents","_updateComponents","componentName","values","component","start","update","_scene","_entities","_scenePayload","_selectedEntityID","_axes","_gridHelper","_selectionHelper","add","load","texture","rt","image","height","fromEquirectangularTexture","CameraManager","renderer","background","payload","shouldRecompileMaterials","sceneConfig","materials","console","debug","_compileMaterials","entities","find","e","entityID","entityProps","updateIndex","findIndex","setFromObject","deltaTime","entity","_resetScene","remove","_buildEntities","_startEntities","error","select","undefined","object","push","destroy","input","JSON","parse","stringify","buildEntity","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","Component","Transform","position","rotation","scale","applyMatrix","setX","x","setY","y","setZ","z","setRotationFromEuler","applyPosition","applyRotation","applyScale","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","length","componentInstance","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","key","value","join","generateNewMaterial","uniforms","normal","basic","phong","lambert","wireframe","_changeEvent","FlyControls","domElement","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","translateY","translateZ","set","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","window","innerWidth","innerHeight","dispose","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","addEventListener","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","updateProjectionMatrix","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","lookAt","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","pointer","passive","ControlsManager","controls","camera","_setFlyControls","_setOrbitControls","antialias","alpha","renderElement","raycaster","near","far","currentControls","clock","_setCamera","handleResize","scene","setSize","appendChild","_setControls","_setRaycaster","_runSceneLoop","setAnimationLoop","mouseX","mouseY","setFromCamera","intersects","intersectObjects","getScene","children","filter","time","setControls","dimensions","getBoundingClientRect","aspect","width","setPixelRatio","devicePixelRatio","render","getDelta","updateScene","updateControls","initialValue","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","createContext","ScriptProvider","useState","compileComponentScript","three","Instantiate","CreateEntity","generateNewEntity","scriptCopy","removePrefix","substring","indexOf","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","err","useEffect","contextValue","Provider","EditorContext","EditorProvider","useRef","context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","_renderElement","isInitialized","updateScenePayload","runEditMode","runPlayScene","setup","runEditScene","setScenePayload","updateEntityPayload","handleClick","selectByID","getSelectedEntity","getSelectedEntityPayload","selectedEntityID","setEntities","setSelectedEntityID","setCameraProps","cameraProps","setMaterials","SceneContext","SceneProvider","useMemo","updateSpecificEntity","useScene","useContext","selectedEntity","createEntity","newEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","newParent","createMaterial","materialName","newMaterial","useScripts","loadScript","scriptName","foundScript","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","useEditor","isRunning","setIsRunning","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","Panel","label","bodyClass","className","ComponentFieldValue","field","updateField","onChange","Number","ComponentNode","updateComponent","onClick","fieldName","fieldValue","minWidth","InspectorPanel","materialType","setMaterialType","geometryType","setGeometryType","propFields","updateComponentFields","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","log","getComponentProps","addComponent","defaultValue","option","newGeometry","Nav","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","theme","newValue","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"yNAOqBA,E,WAMnB,WAAYC,GAA4B,yBALjCC,KAAe,GAKiB,KAJhCC,UAIgC,OAHvBC,QAGuB,OAFhCC,WAAsD,GAG3DC,KAAKF,GAAKH,EAAMG,GAChBE,KAAKJ,KAAOD,EAAMC,KAClBI,KAAKC,KAAKN,G,wCAGZ,SAAKA,GACHK,KAAKE,SAASP,GACdK,KAAKG,eAAeR,EAAMI,c,sBAG5B,SAASJ,GACP,IAAMS,EAAMC,IAAgBC,SAASC,YAAYZ,EAAMa,UACjDC,EAAWC,IAAgBJ,SAASK,YAAYhB,EAAMc,UACvDT,KAAKH,MAIRG,KAAKH,KAAKY,SAAWA,EACrBT,KAAKH,KAAKW,SAAWJ,GAJrBJ,KAAKH,KAAO,IAAIe,OAAWH,EAAUL,GAMvCJ,KAAKH,KAAKgB,KAAOb,KAAKF,GACtBE,KAAKH,KAAKD,KAAOI,KAAKJ,O,4BAGxB,SAAeG,GAAkE,IAAD,OAC9EC,KAAKD,WAAa,GAClBe,OAAOC,QAAQhB,GAAYiB,SAAQ,YAAoB,IAAD,mBAAjBC,EAAiB,KAAXtB,EAAW,KACpDuB,IAAiBZ,SAASa,aAAa,EAAMF,EAAMtB,Q,sBAKvD,SAASyB,M,qBAGT,c,mBAEA,WACMC,EAAaC,aACftB,KAAKuB,qB,oBAIT,WACMF,EAAaC,aACftB,KAAKwB,sB,0BAIT,SAAaC,GACX,OAAOzB,KAAKD,WAAW0B,K,8BAGzB,WACEX,OAAOY,OAAO1B,KAAKD,YAAYiB,SAAQ,SAACW,GAAD,OAAeA,EAAUC,a,+BAGlE,WACEd,OAAOY,OAAO1B,KAAKD,YAAYiB,SAAQ,SAACW,GAAD,OAAeA,EAAUE,gB,KClE/CR,E,WAenB,aAAe,IAAD,iCAbNC,WAAqB,EAaf,KAZNQ,YAYM,OAXNC,UAAsB,GAWhB,KAVNC,mBAUM,OAPNC,uBAOM,OAJNC,MAAQ,IAAItB,aAAiB,GAIvB,KAHNuB,YAAc,IAAIvB,aAAiB,GAAI,GAGjC,KAFNwB,sBAEM,EACRf,EAAaf,YAGjBe,EAAaf,SAAWN,KACxBA,KAAK8B,OAAS,IAAIlB,QAClBZ,KAAK8B,OAAOO,IAAIrC,KAAKkC,OACrBlC,KAAK8B,OAAOO,IAAIrC,KAAKmC,aACrBnC,KAAK8B,OAAOO,IAAI,IAAIzB,mBAAuB,SAAU,KACrDZ,KAAK8B,OAAOO,IAAI,IAAIzB,eAAmB,WACxB,IAAIA,iBACZ0B,KAAK,wCAAwC,SAACC,GACnD,IAAMC,EAAK,IAAI5B,wBAA4B2B,EAAQE,MAAMC,QACzDF,EAAGG,2BAA2BC,IAActC,SAASuC,SAAUN,GAC/D,EAAKT,OAAOgB,WAAaN,EAAGD,Y,4CAQhC,WACE,OAAOvC,KAAK8B,S,6BAGd,SAAgBiB,GACd,IAAIC,GAA2B,EAC3BhD,KAAKgC,eACHhC,KAAKgC,cAAciB,YAAYC,YAAcH,EAAQE,YAAYC,YACnEF,GAA2B,GAG/BhD,KAAKgC,cAAgBe,EACjBC,IACFG,QAAQC,MAAM,oBACdpD,KAAKqD,uB,sCAIT,WAA4D,IAAD,SACzD,iBAAOrD,KAAKgC,qBAAZ,aAAO,EAAoBiB,YAAYK,SAASC,MAC9C,SAACC,GAAD,OAAOA,EAAE1D,KAAO,EAAKmC,uB,iCAIzB,SAAoBwB,EAA2BC,GAAkC,IAAD,EACxEC,EAAc3D,KAAK+B,UAAU6B,WAAU,SAACJ,GAAD,OAAOA,EAAE1D,KAAO2D,MACxC,IAAjBE,IACJ3D,KAAK+B,UAAU4B,GAAa1D,KAAKyD,GACjC,UAAA1D,KAAKoC,wBAAL,SAAuByB,cAAc7D,KAAK+B,UAAU4B,GAAa9D,S,yBAGnE,SAAYiE,GACV9D,KAAK+B,UAAUf,SAAQ,SAAC+C,GACtBA,EAAOlC,c,0BASX,WACE7B,KAAKsB,WAAY,EACjBtB,KAAKgE,cACLhE,KAAK8B,OAAOmC,OAAOjE,KAAKkC,OACxBlC,KAAK8B,OAAOmC,OAAOjE,KAAKmC,aAEpBnC,KAAKoC,kBAAkBpC,KAAK8B,OAAOmC,OAAOjE,KAAKoC,kBACnD,IACEpC,KAAKkE,iBACLlE,KAAKmE,iBACL,MAAOC,GACPjB,QAAQiB,MAAM,yC,0BAUlB,WACEpE,KAAKsB,WAAY,EACjBtB,KAAKgE,cAELhE,KAAK8B,OAAOO,IAAIrC,KAAKkC,OACrBlC,KAAK8B,OAAOO,IAAIrC,KAAKmC,aACjBnC,KAAKoC,kBAAkBpC,KAAK8B,OAAOO,IAAIrC,KAAKoC,kBAChDpC,KAAKkE,mB,wBAIP,SAAWT,GAA4B,IAAD,IACpCzD,KAAKqE,OAAL,oBAAYrE,KAAK+B,UAAUwB,MAAK,SAACC,GAAD,OAAOA,EAAE1D,KAAO2D,YAAhD,aAAY,EAA+C5D,YAA3D,aAAmEyE,K,oBAOrE,SAAOC,GACL,IAAIvE,KAAKsB,UAAT,CACA,IAAKiD,GAAUvE,KAAKoC,kBAAoBpC,KAAKiC,kBAG3C,OAFAjC,KAAK8B,OAAOmC,OAAOjE,KAAKoC,uBACxBpC,KAAKiC,uBAAoBqC,GAI3B,GAAIC,EAAQ,CAAC,IAAD,EAEV,GADAvE,KAAKiC,kBAAoBsC,EAAO1D,MAC3Bb,KAAKoC,iBAGR,OAFApC,KAAKoC,iBAAmB,IAAIxB,YAAgB2D,EAAQ,eACpDvE,KAAK8B,OAAOO,IAAIrC,KAAKoC,kBAIvB,UAAApC,KAAKoC,wBAAL,SAAuByB,cAAcU,GACrCvE,KAAK8B,OAAOO,IAAIrC,KAAKoC,sB,+BAIzB,WACE,OAAOpC,KAAKiC,oB,yBAGd,SAAYtC,GACV,IAAMoE,EAAS,IAAIrE,EAAOC,GAG1B,OAFAK,KAAK+B,UAAUyC,KAAKT,GACpB/D,KAAK8B,OAAOO,IAAI0B,EAAOlE,MAChBkE,I,4BAGT,WACE/D,KAAK+B,UAAUf,SAAQ,SAAC+C,GACtBA,EAAOnC,a,yBAIX,WAAuB,IAAD,OACpB5B,KAAK+B,UAAUf,SAAQ,SAAC+C,GACtB,EAAKjC,OAAOmC,OAAOF,EAAOlE,MAC1BkE,EAAOU,aAETzE,KAAK+B,UAAY,K,4BAGnB,WAA0B,IC3KC2C,ED2KF,OAClB1E,KAAKgC,gBC5Ke0C,ED8K+B1E,KAAKgC,cC7KxD2C,KAAKC,MAAMD,KAAKE,UAAUH,KD8KdzB,YAAYK,SAAStC,SAAQ,SAAC0C,GAC7C,EAAKoB,YAAYpB,Q,+BAIrB,WAA6B,IAAD,OACrB1D,KAAKgC,eACVhC,KAAKgC,cAAciB,YAAYC,UAAUlC,SAAQ,SAACR,GAAc,IAAD,IACvDuE,EAAsB,UAAG,EAAK/C,qBAAR,aAAG,EAAoBgD,QAAQzB,MACzD,SAAC0B,GAAD,OAAYA,EAAOnF,KAAOU,EAAS0E,kBAG/BC,EAAwB,UAAG,EAAKnD,qBAAR,aAAG,EAAoBgD,QAAQzB,MAC3D,SAAC0B,GAAD,OAAYA,EAAOnF,KAAOU,EAAS4E,oBAGrC,GAAKL,GAA2BI,EAAhC,CACA,IAAME,EAA0C,CAC9C7E,WACA8E,aAAcP,EAAuBQ,QACrCC,eAAgBL,EAAyBI,SAE3ClF,IAAgBC,SAASmF,kBAAkBJ,U,wBA9J/C,WACE,OAAOhE,EAAaf,SAASgB,c,KAlCZD,EACLf,c,2HELcoF,EAG5B,WAAY3B,GAAiB,yBAF7BA,YAE4B,EAC1B/D,KAAK+D,OAASA,GCGG4B,E,kDASnB,WAAY5B,GAAiB,IAAD,8BAC1B,cAAMA,IATRA,YAQ4B,IALrB6B,SAA0B,IAAIhF,UAAc,EAAG,EAAG,GAK7B,EAJrBiF,SAAwB,IAAIjF,QAAY,EAAG,EAAG,EAAG,OAI5B,EAHrBkF,MAAuB,IAAIlF,UAAc,EAAG,EAAG,GAKpD,EAAKmD,OAASA,EAFY,E,wCAK5B,SAAKpE,GAA0B,IAAD,MAC5BK,KAAK4F,SAAL,iBAAgBjG,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOiG,gBAAvB,QAAmC5F,KAAK4F,SACxC5F,KAAK6F,SAAL,iBAAgBlG,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOkG,gBAAvB,QAAmC7F,KAAK6F,SACxC7F,KAAK8F,MAAL,iBAAanG,QAAb,IAAaA,OAAb,EAAaA,EAAOmG,aAApB,QAA6B9F,KAAK8F,MAClC9F,KAAK+F,gB,mBAGP,WACE/F,KAAK+F,gB,2BAGP,WACE/F,KAAK+D,OAAOlE,KAAK+F,SAASI,KAAKhG,KAAK4F,SAASK,GAC7CjG,KAAK+D,OAAOlE,KAAK+F,SAASM,KAAKlG,KAAK4F,SAASO,GAC7CnG,KAAK+D,OAAOlE,KAAK+F,SAASQ,KAAKpG,KAAK4F,SAASS,K,2BAG/C,WACErG,KAAK+D,OAAOlE,KAAKyG,qBAAqB,IAAI1F,QAAYZ,KAAK6F,SAASI,EAAGjG,KAAK6F,SAASM,EAAGnG,KAAK6F,SAASQ,M,wBAGxG,WACErG,KAAK+D,OAAOlE,KAAKiG,MAAME,KAAKhG,KAAK8F,MAAMG,GACvCjG,KAAK+D,OAAOlE,KAAKiG,MAAMI,KAAKlG,KAAK8F,MAAMK,GACvCnG,KAAK+D,OAAOlE,KAAKiG,MAAMM,KAAKpG,KAAK8F,MAAMO,K,yBAGzC,WACOrG,KAAK+D,SACV/D,KAAKuG,gBACLvG,KAAKwG,gBACLxG,KAAKyG,gB,oBAGP,WACEzG,KAAK+F,kB,GAjD8BL,GCLlBxE,E,WAInB,aAAe,yBAFPnB,WAAkG,GAGpGmB,EAAiBZ,WACrBY,EAAiBZ,SAAWN,KAE5BA,KAAK0G,kBAAkB,YAAaf,EAAW,CAC7CC,SAAU,CAAEK,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC3BR,SAAU,CAAEI,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC3BP,MAAO,CAAEG,EAAG,EAAGE,EAAG,EAAGE,EAAG,M,iDAI5B,WACE,OAAO,eAAKrG,KAAKD,c,+BAGnB,SAAyB0B,EAAuBE,EAA8BhC,GAC5EK,KAAKD,WAAW0B,GAAiB,CAAEkF,YAAahF,EAAWhC,W,+BAG7D,SAAyBC,GAA2D,IAAD,EAC3EgH,EAAc,UAAG5G,KAAKD,WAAWH,GAAMD,aAAzB,QAAkC,KACtD,OAAKiH,GACI,O,0BAKX,SAAqBhH,GAAuD,IAAD,EACzE,iBAAOI,KAAKD,WAAWH,GAAM+G,mBAA7B,QAA4C,O,0BAG9C,SAAoB5C,EAAgB8C,EAAqCD,GAEvE,IAAMjF,EAAY3B,KAAK8G,aAAaD,GACpC,GAAKlF,EAAL,CAMAb,OAAOC,QAAQ6F,GAAgB5F,SAAQ,YAAmB,IAAD,mBAAhBpB,EAAgB,KAAVmH,EAAU,KACnDC,MAAMC,QAAQF,KACI,IAAhBA,EAAKG,OACPN,EAAehH,GAAQ,IAAIgB,UAAcmG,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEzC,IAAhBA,EAAKG,SACZN,EAAehH,GAAQ,IAAIgB,UAAcmG,EAAK,GAAIA,EAAK,SAI7D,IAAMI,EAAoB,IAAIxF,EAAUoC,GACxC,IACEoD,EAAkBlH,KAAK2G,GACvB7C,EAAOhE,WAAW8G,GAAiBM,EACnC,MAAO3D,GACPL,QAAQiB,MAAM,sCAAuCZ,SApBrDL,QAAQiB,MAAR,oBAA2ByC,EAA3B,mB,KAvCe3F,EACLZ,c,8LCHV8G,EAAa,sBACbC,EAA6B,sEAM/BD,EAN+B,wDA2BtBE,EAAoB,SAC/B1H,EACA2H,EACAtG,GAEA,IAAMnB,EAAK0H,eACPjC,EAAU8B,EAEd,OAAQpG,GACN,IAAK,YACHsE,EAAU8B,EACV,MACF,IAAK,SACH9B,EAvB0B,sHAwB1B,MACF,IAAK,WACHA,EApB4B,+DA0BhC,MAAO,CACLzF,KACAF,OACA2H,WACAhC,UACAtE,SAIEwG,EAAsB,6BAEfC,EAAqB,SAACzC,GAEjC,MADe,WAAOA,EAAOM,QAAd,KACEoC,QACfP,EADK,sIASGK,EATH,gBAcIG,EAAoB,SAC/BC,EACAlI,GAEA,IAAMmI,EAAiB,8FAGnBhH,OAAOC,QAAQpB,GACdoI,KAAI,mCAAEC,EAAF,KAAOC,EAAP,0BAA0BD,EAA1B,qBAA0CA,EAA1C,eAAoDC,EAApD,QACJC,KAAK,MALa,SAOvB,OAAOL,EAAWF,QAAQF,EAAqBK,IAGpCK,EAAsB,SACjCvI,EACAsF,EACAE,GAGA,MAAO,CACLtF,GAFS0H,eAGT5H,OACAsF,eAAgBA,EAChBE,iBAAkBA,EAClBgD,SAAU,M,2FCrGO/H,E,WAUnB,aAAe,yBARf6C,UAAyD,CACvDmF,OAAQ,IAAIzH,qBACZ0H,MAAO,IAAI1H,oBACX2H,MAAO,IAAI3H,oBACX4H,QAAS,IAAI5H,sBACb6H,UAAW,IAAI7H,oBAAwB,CAAE6H,WAAW,KAIhDpI,EAAgBC,WACpBD,EAAgBC,SAAWN,M,+CAG7B,SAAYiB,GAA4C,IAAD,EACrD,iBAAOjB,KAAKkD,UAAUjC,UAAtB,QAA+BjB,KAAKkD,UAAUoF,Q,+BAGhD,SAAkBjD,GAChB,IAAMjF,EAAMiF,EAAgB7E,SAC5BR,KAAKkD,UAAU9C,EAAIR,MAAQ,IAAIgB,iBAAqB,CAClDwH,SAAUhI,EAAIgI,SACd9C,aAAcD,EAAgBC,aAC9BE,eAAgBH,EAAgBG,qB,KAxBjBnF,EACLC,c,oHCFVoI,EAAe,CAAEzH,KAAM,UAEvB0H,E,kDACJ,WAAYpE,EAAQqE,GAAa,IAAD,sBAC9B,oBAEmBtE,IAAfsE,IACFzF,QAAQ0F,KACN,0EAEFD,EAAaE,UAGf,EAAKvE,OAASA,EACd,EAAKqE,WAAaA,EAIlB,EAAKG,cAAgB,EACrB,EAAKC,UAAY,KAEjB,EAAKC,YAAa,EAClB,EAAKC,aAAc,EAMnB,IAAMC,EAAK,eAELC,EAAM,KAENC,EAAiB,IAAIC,aACrBC,EAAe,IAAIC,UAEzB,EAAKC,cAAgB,IAAIH,aAEzB,EAAKI,YAAc,EAEnB,EAAKC,UAAY,CACfC,GAAI,EACJC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,KAAM,EACNC,QAAS,EACTC,UAAW,EACXC,QAAS,EACTC,SAAU,EACVC,SAAU,EACVC,UAAW,GAEb,EAAKC,WAAa,IAAIhB,UAAQ,EAAG,EAAG,GACpC,EAAKiB,eAAiB,IAAIjB,UAAQ,EAAG,EAAG,GAExC,EAAKkB,QAAU,SAAUC,GACvB,IAAIA,EAAMC,OAAV,CAIA,OAAQD,EAAME,MACZ,IAAK,YACL,IAAK,aACH7K,KAAK8K,wBAA0B,GAC/B,MAEF,IAAK,OACH9K,KAAK2J,UAAUK,QAAU,EACzB,MACF,IAAK,OACHhK,KAAK2J,UAAUM,KAAO,EACtB,MAEF,IAAK,OACHjK,KAAK2J,UAAUG,KAAO,EACtB,MACF,IAAK,OACH9J,KAAK2J,UAAUI,MAAQ,EACvB,MAEF,IAAK,OACH/J,KAAK2J,UAAUC,GAAK,EACpB,MACF,IAAK,OACH5J,KAAK2J,UAAUE,KAAO,EACtB,MAEF,IAAK,UACH7J,KAAK2J,UAAUO,QAAU,EACzB,MACF,IAAK,YACHlK,KAAK2J,UAAUQ,UAAY,EAC3B,MAEF,IAAK,YACHnK,KAAK2J,UAAUS,QAAU,EACzB,MACF,IAAK,aACHpK,KAAK2J,UAAUU,SAAW,EAC1B,MAEF,IAAK,OACHrK,KAAK2J,UAAUW,SAAW,EAC1B,MACF,IAAK,OACHtK,KAAK2J,UAAUY,UAAY,EAI/BvK,KAAK+K,uBACL/K,KAAKgL,yBAGP,EAAKC,MAAQ,SAAUN,GACrB,OAAQA,EAAME,MACZ,IAAK,YACL,IAAK,aACH7K,KAAK8K,wBAA0B,EAC/B,MAEF,IAAK,OACH9K,KAAK2J,UAAUK,QAAU,EACzB,MACF,IAAK,OACHhK,KAAK2J,UAAUM,KAAO,EACtB,MAEF,IAAK,OACHjK,KAAK2J,UAAUG,KAAO,EACtB,MACF,IAAK,OACH9J,KAAK2J,UAAUI,MAAQ,EACvB,MAEF,IAAK,OACH/J,KAAK2J,UAAUC,GAAK,EACpB,MACF,IAAK,OACH5J,KAAK2J,UAAUE,KAAO,EACtB,MAEF,IAAK,UACH7J,KAAK2J,UAAUO,QAAU,EACzB,MACF,IAAK,YACHlK,KAAK2J,UAAUQ,UAAY,EAC3B,MAEF,IAAK,YACHnK,KAAK2J,UAAUS,QAAU,EACzB,MACF,IAAK,aACHpK,KAAK2J,UAAUU,SAAW,EAC1B,MAEF,IAAK,OACHrK,KAAK2J,UAAUW,SAAW,EAC1B,MACF,IAAK,OACHtK,KAAK2J,UAAUY,UAAY,EAI/BvK,KAAK+K,uBACL/K,KAAKgL,wBAGP,EAAKE,UAAY,SAAUP,GACzB,GAAI3K,KAAKiJ,WACPjJ,KAAK0J,kBACA,CACL,OAAQiB,EAAMQ,QACZ,KAAK,EACHnL,KAAK2J,UAAUK,QAAU,EACzB,MACF,KAAK,EACHhK,KAAK2J,UAAUM,KAAO,EAI1BjK,KAAK+K,yBAIT,EAAKK,UAAY,SAAUT,GACzB,IAAK3K,KAAKiJ,YAAcjJ,KAAK0J,YAAc,EAAG,CAC5C,IAAM2B,EAAYrL,KAAKsL,yBACjBC,EAAYF,EAAUG,KAAK,GAAK,EAChCC,EAAaJ,EAAUG,KAAK,GAAK,EAEvCxL,KAAK2J,UAAUS,UACXO,EAAMe,MAAQL,EAAUM,OAAO,GAAKJ,GAAaA,EACrDvL,KAAK2J,UAAUQ,WACZQ,EAAMiB,MAAQP,EAAUM,OAAO,GAAKF,GAAcA,EAErDzL,KAAKgL,yBAIT,EAAKa,QAAU,SAAUlB,GACvB,GAAI3K,KAAKiJ,WACPjJ,KAAK0J,cAEL1J,KAAK2J,UAAUS,QAAUpK,KAAK2J,UAAUQ,UAAY,MAC/C,CACL,OAAQQ,EAAMQ,QACZ,KAAK,EACHnL,KAAK2J,UAAUK,QAAU,EACzB,MACF,KAAK,EACHhK,KAAK2J,UAAUM,KAAO,EAI1BjK,KAAK+K,uBAGP/K,KAAKgL,wBAGP,EAAKnJ,OAAS,SAAUiK,GACtB,IAAMC,EAAWD,EAAQ3C,EAAMJ,cACzBiD,EAAUF,EAAQ3C,EAAMH,UAE9BG,EAAM5E,OAAO0H,WAAW9C,EAAMqB,WAAWvE,EAAI8F,GAC7C5C,EAAM5E,OAAO2H,WAAW/C,EAAMqB,WAAWrE,EAAI4F,GAC7C5C,EAAM5E,OAAO4H,WAAWhD,EAAMqB,WAAWnE,EAAI0F,GAE7C5C,EAAMM,cACH2C,IACCjD,EAAMsB,eAAexE,EAAI+F,EACzB7C,EAAMsB,eAAetE,EAAI6F,EACzB7C,EAAMsB,eAAepE,EAAI2F,EACzB,GAEDK,YACHlD,EAAM5E,OAAO+H,WAAWC,SAASpD,EAAMM,gBAGrCF,EAAaiD,kBAAkBrD,EAAM5E,OAAOqB,UAAYwD,GACxD,GAAK,EAAIC,EAAeoD,IAAItD,EAAM5E,OAAO+H,aAAelD,KAExDD,EAAMuD,cAAchE,GACpBW,EAAesD,KAAKxD,EAAM5E,OAAO+H,YACjC/C,EAAaoD,KAAKxD,EAAM5E,OAAOqB,YAInC,EAAKmF,qBAAuB,WAC1B,IAAMf,EACJhK,KAAK2J,UAAUK,SAAYhK,KAAKkJ,cAAgBlJ,KAAK2J,UAAUM,KAAQ,EAAI,EAE7EjK,KAAKwK,WAAWvE,GAAKjG,KAAK2J,UAAUG,KAAO9J,KAAK2J,UAAUI,MAC1D/J,KAAKwK,WAAWrE,GAAKnG,KAAK2J,UAAUE,KAAO7J,KAAK2J,UAAUC,GAC1D5J,KAAKwK,WAAWnE,GAAK2D,EAAUhK,KAAK2J,UAAUM,MAGhD,EAAKe,qBAAuB,WAC1BhL,KAAKyK,eAAexE,GAAKjG,KAAK2J,UAAUQ,UAAYnK,KAAK2J,UAAUO,QACnElK,KAAKyK,eAAetE,GAAKnG,KAAK2J,UAAUU,SAAWrK,KAAK2J,UAAUS,QAClEpK,KAAKyK,eAAepE,GAAKrG,KAAK2J,UAAUY,UAAYvK,KAAK2J,UAAUW,UAGrE,EAAKgB,uBAAyB,WAC5B,OAAItL,KAAK4I,YAAcE,SACd,CACL0C,KAAM,CAACxL,KAAK4I,WAAWgE,YAAa5M,KAAK4I,WAAWiE,cACpDlB,OAAQ,CAAC3L,KAAK4I,WAAWkE,WAAY9M,KAAK4I,WAAWmE,YAGhD,CACLvB,KAAM,CAACwB,OAAOC,WAAYD,OAAOE,aACjCvB,OAAQ,CAAC,EAAG,KAKlB,EAAKwB,QAAU,WACbnN,KAAK4I,WAAWwE,oBAAoB,cAAeC,GACnDrN,KAAK4I,WAAWwE,oBAAoB,YAAaE,GACjDtN,KAAK4I,WAAWwE,oBAAoB,YAAaG,GACjDvN,KAAK4I,WAAWwE,oBAAoB,UAAWI,GAE/CR,OAAOI,oBAAoB,UAAWK,GACtCT,OAAOI,oBAAoB,QAASM,IAGtC,IAAMH,EAAa,EAAKnC,UAAUuC,KAAf,gBACbL,EAAa,EAAKpC,UAAUyC,KAAf,gBACbH,EAAW,EAAK3B,QAAQ8B,KAAb,gBACXF,EAAW,EAAK/C,QAAQiD,KAAb,gBACXD,EAAS,EAAKzC,MAAM0C,KAAX,gBAjSe,OAmS9B,EAAK/E,WAAWgF,iBAAiB,cAAeP,GAEhD,EAAKzE,WAAWgF,iBAAiB,YAAaL,GAC9C,EAAK3E,WAAWgF,iBAAiB,YAAaN,GAC9C,EAAK1E,WAAWgF,iBAAiB,UAAWJ,GAE5CR,OAAOY,iBAAiB,UAAWH,GACnCT,OAAOY,iBAAiB,QAASF,GAEjC,EAAK3C,uBACL,EAAKC,uBA7SyB,E,UADR6C,mBAkT1B,SAASR,EAAY1C,GACnBA,EAAMmD,iBCtSR,IAAMpF,EAAe,CAAEzH,KAAM,UACvB8M,EAAc,CAAE9M,KAAM,SACtB+M,EAAY,CAAE/M,KAAM,OAEpBgN,E,kDACJ,WAAY1J,EAAQqE,GAAa,IAAD,sBAC9B,oBAEmBtE,IAAfsE,GACFzF,QAAQ0F,KACN,4EAEAD,IAAeE,UACjB3F,QAAQiB,MACN,4HAGJ,EAAKG,OAASA,EACd,EAAKqE,WAAaA,EAClB,EAAKA,WAAWsF,MAAMC,YAAc,OAGpC,EAAKC,SAAU,EAGf,EAAKC,OAAS,IAAI7E,UAGlB,EAAK8E,YAAc,EACnB,EAAKC,YAAcC,IAGnB,EAAKC,QAAU,EACf,EAAKC,QAAUF,IAIf,EAAKG,cAAgB,EACrB,EAAKC,cAAgBC,KAAKC,GAI1B,EAAKC,iBAAmBP,IACxB,EAAKQ,gBAAkBR,IAIvB,EAAKS,eAAgB,EACrB,EAAKC,cAAgB,IAIrB,EAAKC,YAAa,EAClB,EAAKC,UAAY,EAGjB,EAAKC,cAAe,EACpB,EAAKC,YAAc,EAGnB,EAAKC,WAAY,EACjB,EAAKC,SAAW,EAChB,EAAKC,oBAAqB,EAC1B,EAAKC,YAAc,GAInB,EAAKC,YAAa,EAClB,EAAKC,gBAAkB,EAGvB,EAAKC,KAAO,CACVC,KAAM,YACNC,GAAI,UACJC,MAAO,aACPC,OAAQ,aAIV,EAAKC,aAAe,CAClBJ,KAAMK,QAAMC,OACZC,OAAQF,QAAMG,MACdN,MAAOG,QAAMI,KAIf,EAAKC,QAAU,CAAEC,IAAKC,QAAMN,OAAQO,IAAKD,QAAME,WAG/C,EAAKC,QAAU,EAAKxC,OAAOyC,QAC3B,EAAKC,UAAY,EAAKxM,OAAOqB,SAASkL,QACtC,EAAKE,MAAQ,EAAKzM,OAAO0M,KAGzB,EAAKC,qBAAuB,KAM5B,EAAKC,cAAgB,WACnB,OAAOC,EAAUC,KAGnB,EAAKC,kBAAoB,WACvB,OAAOF,EAAUG,OAGnB,EAAKC,YAAc,WACjB,OAAOxR,KAAKuE,OAAOqB,SAAS6L,WAAWzR,KAAKqO,SAG9C,EAAKqD,kBAAoB,SAAU9I,GACjCA,EAAWgF,iBAAiB,UAAW+D,GACvC3R,KAAKkR,qBAAuBtI,GAG9B,EAAKgJ,UAAY,WACfzI,EAAM0H,QAAQlE,KAAKxD,EAAMkF,QACzBlF,EAAM4H,UAAUpE,KAAKxD,EAAM5E,OAAOqB,UAClCuD,EAAM6H,MAAQ7H,EAAM5E,OAAO0M,MAG7B,EAAKY,MAAQ,WACX1I,EAAMkF,OAAO1B,KAAKxD,EAAM0H,SACxB1H,EAAM5E,OAAOqB,SAAS+G,KAAKxD,EAAM4H,WACjC5H,EAAM5E,OAAO0M,KAAO9H,EAAM6H,MAE1B7H,EAAM5E,OAAOuN,yBACb3I,EAAMuD,cAAchE,GAEpBS,EAAMtH,SAENkQ,EAAQC,EAAMC,MAIhB,EAAKpQ,OAAU,WACb,IAAM8J,EAAS,IAAInC,UAGb0I,GAAO,IAAI5I,cAAa6I,mBAC5B5N,EAAOqF,GACP,IAAIJ,UAAQ,EAAG,EAAG,IAEd4I,EAAcF,EAAKpB,QAAQuB,SAE3B9I,EAAe,IAAIC,UACnBH,EAAiB,IAAIC,aAErBgJ,EAAQ,EAAIzD,KAAKC,GAEvB,OAAO,WACL,IAAMlJ,EAAWuD,EAAM5E,OAAOqB,SAE9B+F,EAAOgB,KAAK/G,GAAU2M,IAAIpJ,EAAMkF,QAGhC1C,EAAO6G,gBAAgBN,GAGvBd,EAAUqB,eAAe9G,GAErBxC,EAAMwG,YAAcoC,IAAUC,EAAMC,MACtCS,EAmKK,EAAI7D,KAAKC,GAAM,GAAK,GAAM3F,EAAMyG,iBAhKnCzG,EAAM8F,eACRmC,EAAUG,OAASoB,EAAepB,MAAQpI,EAAM+F,cAChDkC,EAAUC,KAAOsB,EAAetB,IAAMlI,EAAM+F,gBAE5CkC,EAAUG,OAASoB,EAAepB,MAClCH,EAAUC,KAAOsB,EAAetB,KAKlC,IAAIuB,EAAMzJ,EAAM4F,gBACZ8D,EAAM1J,EAAM6F,gBAqEhB,OAnEI8D,SAASF,IAAQE,SAASD,KACxBD,GAAO/D,KAAKC,GAAI8D,GAAON,EAClBM,EAAM/D,KAAKC,KAAI8D,GAAON,GAE3BO,GAAOhE,KAAKC,GAAI+D,GAAOP,EAClBO,EAAMhE,KAAKC,KAAI+D,GAAOP,GAG7BlB,EAAUG,MADRqB,GAAOC,EACShE,KAAKgE,IAAID,EAAK/D,KAAK+D,IAAIC,EAAKzB,EAAUG,QAGtDH,EAAUG,OAASqB,EAAMC,GAAO,EAC5BhE,KAAKgE,IAAID,EAAKxB,EAAUG,OACxB1C,KAAK+D,IAAIC,EAAKzB,EAAUG,QAKlCH,EAAUC,IAAMxC,KAAKgE,IACnB1J,EAAMwF,cACNE,KAAK+D,IAAIzJ,EAAMyF,cAAewC,EAAUC,MAG1CD,EAAU2B,WAEV3B,EAAU4B,QAAUlN,EAGpBsL,EAAU4B,OAASnE,KAAKgE,IACtB1J,EAAMmF,YACNO,KAAK+D,IAAIzJ,EAAMoF,YAAa6C,EAAU4B,UAKZ,IAAxB7J,EAAM8F,cACR9F,EAAMkF,OAAO4E,gBAAgBC,EAAW/J,EAAM+F,eAE9C/F,EAAMkF,OAAOhM,IAAI6Q,GAGnBvH,EAAOwH,iBAAiB/B,GAGxBzF,EAAO6G,gBAAgBJ,GAEvBxM,EAAS+G,KAAKxD,EAAMkF,QAAQhM,IAAIsJ,GAEhCxC,EAAM5E,OAAO6O,OAAOjK,EAAMkF,SAEE,IAAxBlF,EAAM8F,eACR0D,EAAepB,OAAS,EAAIpI,EAAM+F,cAClCyD,EAAetB,KAAO,EAAIlI,EAAM+F,cAEhCgE,EAAUG,eAAe,EAAIlK,EAAM+F,iBAEnCyD,EAAevG,IAAI,EAAG,EAAG,GAEzB8G,EAAU9G,IAAI,EAAG,EAAG,IAGtBtG,EAAQ,KAONwN,GACA/J,EAAaiD,kBAAkBrD,EAAM5E,OAAOqB,UAAYwD,GACxD,GAAK,EAAIC,EAAeoD,IAAItD,EAAM5E,OAAO+H,aAAelD,KAExDD,EAAMuD,cAAchE,GAEpBa,EAAaoD,KAAKxD,EAAM5E,OAAOqB,UAC/ByD,EAAesD,KAAKxD,EAAM5E,OAAO+H,YACjCgH,GAAc,GAEP,IAzHE,GAgIf,EAAKnG,QAAU,WACbhE,EAAMP,WAAWwE,oBAAoB,cAAemG,GAEpDpK,EAAMP,WAAWwE,oBAAoB,cAAeoG,GACpDrK,EAAMP,WAAWwE,oBAAoB,gBAAiBqG,GACtDtK,EAAMP,WAAWwE,oBAAoB,QAASsG,GAE9CvK,EAAMP,WAAWwE,oBAAoB,cAAeuG,GACpDxK,EAAMP,WAAWwE,oBAAoB,YAAawG,GAEf,OAA/BzK,EAAM+H,sBACR/H,EAAM+H,qBAAqB9D,oBAAoB,UAAWuE,IAU9D,IAAMxI,EAAK,eAEL6I,EAAQ,CACZC,MAAO,EACP7B,OAAQ,EACRE,MAAO,EACPC,IAAK,EACLsD,aAAc,EACdC,UAAW,EACXC,gBAAiB,EACjBC,mBAAoB,GAGlBjC,EAAQC,EAAMC,KAEZ7I,EAAM,KAGNgI,EAAY,IAAI6C,YAChBtB,EAAiB,IAAIsB,YAEvBnO,EAAQ,EACNoN,EAAY,IAAI1J,UAClB8J,GAAc,EAEZY,EAAc,IAAIC,UAClBC,EAAY,IAAID,UAChBE,EAAc,IAAIF,UAElBG,EAAW,IAAIH,UACfI,EAAS,IAAIJ,UACbK,EAAW,IAAIL,UAEfM,EAAa,IAAIN,UACjBO,EAAW,IAAIP,UACfQ,EAAa,IAAIR,UAEjBS,EAAW,GACXC,EAAmB,GAMzB,SAASC,IACP,OAAOjG,KAAKkG,IAAI,IAAM5L,EAAMiG,WAG9B,SAASsD,EAAWsC,GAClBrC,EAAepB,OAASyD,EAG1B,SAASC,EAASD,GAChBrC,EAAetB,KAAO2D,EAGxB,IAAME,EAAW,WACf,IAAMC,EAAI,IAAI3L,UAEd,OAAO,SAAiB4L,EAAUC,GAChCF,EAAEG,oBAAoBD,EAAc,GACpCF,EAAE9B,gBAAgB+B,GAElBlC,EAAU7Q,IAAI8S,IAPD,GAWXI,EAAS,WACb,IAAMJ,EAAI,IAAI3L,UAEd,OAAO,SAAe4L,EAAUC,IACG,IAA7BlM,EAAMsG,mBACR0F,EAAEG,oBAAoBD,EAAc,IAEpCF,EAAEG,oBAAoBD,EAAc,GACpCF,EAAEK,aAAarM,EAAM5E,OAAOqF,GAAIuL,IAGlCA,EAAE9B,eAAe+B,GAEjBlC,EAAU7Q,IAAI8S,IAbH,GAkBTM,EAAO,WACX,IAAM9J,EAAS,IAAInC,UAEnB,OAAO,SAAakM,EAAQC,GAC1B,IAAMC,EAAUzM,EAAMP,WAEtB,GAAIO,EAAM5E,OAAOsR,oBAAqB,CAEpC,IAAMjQ,EAAWuD,EAAM5E,OAAOqB,SAC9B+F,EAAOgB,KAAK/G,GAAU2M,IAAIpJ,EAAMkF,QAChC,IAAIyH,EAAiBnK,EAAOzE,SAG5B4O,GAAkBjH,KAAKkH,IAAM5M,EAAM5E,OAAOyR,IAAM,EAAKnH,KAAKC,GAAM,KAGhEoG,EACG,EAAIQ,EAASI,EAAkBF,EAAQK,aACxC9M,EAAM5E,OAAO2R,QAEfX,EACG,EAAII,EAASG,EAAkBF,EAAQK,aACxC9M,EAAM5E,OAAO2R,aAEN/M,EAAM5E,OAAO4R,sBAEtBjB,EACGQ,GAAUvM,EAAM5E,OAAOwF,MAAQZ,EAAM5E,OAAOuF,MAC3CX,EAAM5E,OAAO0M,KACb2E,EAAQQ,YACVjN,EAAM5E,OAAO2R,QAEfX,EACGI,GAAUxM,EAAM5E,OAAO8R,IAAMlN,EAAM5E,OAAO+R,QACzCnN,EAAM5E,OAAO0M,KACb2E,EAAQK,aACV9M,EAAM5E,OAAO2R,UAIf/S,QAAQ0F,KACN,gFAEFM,EAAMoG,WAAY,IA3CX,GAgDb,SAASgH,EAASC,GACZrN,EAAM5E,OAAOsR,oBACf/P,GAAS0Q,EACArN,EAAM5E,OAAO4R,sBACtBhN,EAAM5E,OAAO0M,KAAOpC,KAAKgE,IACvB1J,EAAMsF,QACNI,KAAK+D,IAAIzJ,EAAMuF,QAASvF,EAAM5E,OAAO0M,KAAOuF,IAE9CrN,EAAM5E,OAAOuN,yBACbwB,GAAc,IAEdnQ,QAAQ0F,KACN,uFAEFM,EAAMgG,YAAa,GAIvB,SAASsH,EAAQD,GACXrN,EAAM5E,OAAOsR,oBACf/P,GAAS0Q,EACArN,EAAM5E,OAAO4R,sBACtBhN,EAAM5E,OAAO0M,KAAOpC,KAAKgE,IACvB1J,EAAMsF,QACNI,KAAK+D,IAAIzJ,EAAMuF,QAASvF,EAAM5E,OAAO0M,KAAOuF,IAE9CrN,EAAM5E,OAAOuN,yBACbwB,GAAc,IAEdnQ,QAAQ0F,KACN,uFAEFM,EAAMgG,YAAa,GAQvB,SAASuH,EAAsB/L,GAC7BuJ,EAAY9H,IAAIzB,EAAMgM,QAAShM,EAAMiM,SAOvC,SAASC,EAAmBlM,GAC1B2J,EAASlI,IAAIzB,EAAMgM,QAAShM,EAAMiM,SA6GpC,SAASE,IACP,GAAwB,IAApBlC,EAAS1N,OACXgN,EAAY9H,IAAIwI,EAAS,GAAGlJ,MAAOkJ,EAAS,GAAGhJ,WAC1C,CACL,IAAM3F,EAAI,IAAO2O,EAAS,GAAGlJ,MAAQkJ,EAAS,GAAGlJ,OAC3CvF,EAAI,IAAOyO,EAAS,GAAGhJ,MAAQgJ,EAAS,GAAGhJ,OAEjDsI,EAAY9H,IAAInG,EAAGE,IAIvB,SAAS4Q,IACP,GAAwB,IAApBnC,EAAS1N,OACXoN,EAASlI,IAAIwI,EAAS,GAAGlJ,MAAOkJ,EAAS,GAAGhJ,WACvC,CACL,IAAM3F,EAAI,IAAO2O,EAAS,GAAGlJ,MAAQkJ,EAAS,GAAGlJ,OAC3CvF,EAAI,IAAOyO,EAAS,GAAGhJ,MAAQgJ,EAAS,GAAGhJ,OAEjD0I,EAASlI,IAAInG,EAAGE,IAIpB,SAAS6Q,IACP,IAAMC,EAAKrC,EAAS,GAAGlJ,MAAQkJ,EAAS,GAAGlJ,MACrCwL,EAAKtC,EAAS,GAAGhJ,MAAQgJ,EAAS,GAAGhJ,MAErCwJ,EAAWvG,KAAKsI,KAAKF,EAAKA,EAAKC,EAAKA,GAE1CzC,EAAWrI,IAAI,EAAGgJ,GAepB,SAASgC,EAAsBzM,GAC7B,GAAuB,GAAnBiK,EAAS1N,OACXkN,EAAUhI,IAAIzB,EAAMe,MAAOf,EAAMiB,WAC5B,CACL,IAAMhG,EAAWyR,GAAyB1M,GAEpC1E,EAAI,IAAO0E,EAAMe,MAAQ9F,EAASK,GAClCE,EAAI,IAAOwE,EAAMiB,MAAQhG,EAASO,GAExCiO,EAAUhI,IAAInG,EAAGE,GAGnBkO,EACGiD,WAAWlD,EAAWF,GACtBb,eAAelK,EAAMmG,aAExB,IAAMsG,EAAUzM,EAAMP,WAEtB8J,EAAY,EAAI7D,KAAKC,GAAKuF,EAAYpO,EAAK2P,EAAQK,cAEnDhB,EAAU,EAAIpG,KAAKC,GAAKuF,EAAYlO,EAAKyP,EAAQK,cAEjD/B,EAAYvH,KAAKyH,GAGnB,SAASmD,EAAmB5M,GAC1B,GAAwB,IAApBiK,EAAS1N,OACXqN,EAAOnI,IAAIzB,EAAMe,MAAOf,EAAMiB,WACzB,CACL,IAAMhG,EAAWyR,GAAyB1M,GAEpC1E,EAAI,IAAO0E,EAAMe,MAAQ9F,EAASK,GAClCE,EAAI,IAAOwE,EAAMiB,MAAQhG,EAASO,GAExCoO,EAAOnI,IAAInG,EAAGE,GAGhBqO,EAAS8C,WAAW/C,EAAQD,GAAUjB,eAAelK,EAAMqG,UAE3DiG,EAAIjB,EAASvO,EAAGuO,EAASrO,GAEzBmO,EAAS3H,KAAK4H,GAGhB,SAASiD,EAAqB7M,GAC5B,IAAM/E,EAAWyR,GAAyB1M,GAEpCsM,EAAKtM,EAAMe,MAAQ9F,EAASK,EAC5BiR,EAAKvM,EAAMiB,MAAQhG,EAASO,EAE5BiP,EAAWvG,KAAKsI,KAAKF,EAAKA,EAAKC,EAAKA,GAE1CxC,EAAStI,IAAI,EAAGgJ,GAEhBT,EAAWvI,IAAI,EAAGyC,KAAKkG,IAAIL,EAASvO,EAAIsO,EAAWtO,EAAGgD,EAAMiG,YAE5DmH,EAAS5B,EAAWxO,GAEpBsO,EAAW9H,KAAK+H,GAuBlB,SAASlB,EAAc7I,IACC,IAAlBxB,EAAMiF,UAEc,IAApBwG,EAAS1N,SACXiC,EAAMP,WAAW6O,kBAAkB9M,EAAM+M,WAEzCvO,EAAMP,WAAWgF,iBAAiB,cAAe+F,GACjDxK,EAAMP,WAAWgF,iBAAiB,YAAagG,IAgTnD,SAAoBjJ,GAClBiK,EAASpQ,KAAKmG,GA5SdgN,CAAWhN,GAEe,UAAtBA,EAAMiN,YA6KZ,SAAsBjN,GAGpB,OAFAkN,GAAalN,GAELiK,EAAS1N,QACf,KAAK,EACH,OAAQiC,EAAMqH,QAAQC,KACpB,KAAKC,QAAMN,OACT,IAA2B,IAAvBjH,EAAMkG,aAAwB,OAElCyH,IAEA/E,EAAQC,EAAM6B,aAEd,MAEF,KAAKnD,QAAMH,IACT,IAAwB,IAApBpH,EAAMoG,UAAqB,OAE/BwH,IAEAhF,EAAQC,EAAM8B,UAEd,MAEF,QACE/B,EAAQC,EAAMC,KAGlB,MAEF,KAAK,EACH,OAAQ9I,EAAMqH,QAAQG,KACpB,KAAKD,QAAME,UACT,IAAyB,IAArBzH,EAAMgG,aAA4C,IAApBhG,EAAMoG,UAAqB,OAxTjEpG,EAAMgG,YAAY6H,IAElB7N,EAAMoG,WAAWwH,IA0TbhF,EAAQC,EAAM+B,gBAEd,MAEF,KAAKrD,QAAMoH,aACT,IAAyB,IAArB3O,EAAMgG,aAA+C,IAAvBhG,EAAMkG,aAAwB,OA3TpElG,EAAMgG,YAAY6H,IAElB7N,EAAMkG,cAAcyH,IA6ThB/E,EAAQC,EAAMgC,mBAEd,MAEF,QACEjC,EAAQC,EAAMC,KAGlB,MAEF,QACEF,EAAQC,EAAMC,KAGdF,IAAUC,EAAMC,MAClB9I,EAAMuD,cAAcqB,GAzOpBgK,CAAapN,GAyCjB,SAAqBA,GACnB,IAAIqN,EAEJ,OAAQrN,EAAMQ,QACZ,KAAK,EACH6M,EAAc7O,EAAM+G,aAAaJ,KACjC,MAEF,KAAK,EACHkI,EAAc7O,EAAM+G,aAAaG,OACjC,MAEF,KAAK,EACH2H,EAAc7O,EAAM+G,aAAaF,MACjC,MAEF,QACEgI,GAAe,EAGnB,OAAQA,GACN,KAAK7H,QAAMG,MACT,IAAyB,IAArBnH,EAAMgG,WAAsB,QA5TtC,SAA8BxE,GAC5B8J,EAAWrI,IAAIzB,EAAMgM,QAAShM,EAAMiM,SA6ThCqB,CAAqBtN,GAErBoH,EAAQC,EAAM1B,MAEd,MAEF,KAAKH,QAAMC,OACT,GAAIzF,EAAMuN,SAAWvN,EAAMwN,SAAWxN,EAAMyN,SAAU,CACpD,IAAwB,IAApBjP,EAAMoG,UAAqB,OAE/BsH,EAAmBlM,GAEnBoH,EAAQC,EAAMzB,QACT,CACL,IAA2B,IAAvBpH,EAAMkG,aAAwB,OAElCqH,EAAsB/L,GAEtBoH,EAAQC,EAAM5B,OAGhB,MAEF,KAAKD,QAAMI,IACT,GAAI5F,EAAMuN,SAAWvN,EAAMwN,SAAWxN,EAAMyN,SAAU,CACpD,IAA2B,IAAvBjP,EAAMkG,aAAwB,OAElCqH,EAAsB/L,GAEtBoH,EAAQC,EAAM5B,WACT,CACL,IAAwB,IAApBjH,EAAMoG,UAAqB,OAE/BsH,EAAmBlM,GAEnBoH,EAAQC,EAAMzB,IAGhB,MAEF,QACEwB,EAAQC,EAAMC,KAGdF,IAAUC,EAAMC,MAClB9I,EAAMuD,cAAcqB,GA5GpBsK,CAAY1N,IAIhB,SAASgJ,EAAchJ,IACC,IAAlBxB,EAAMiF,UAEgB,UAAtBzD,EAAMiN,YAoOZ,SAAqBjN,GAGnB,OAFAkN,GAAalN,GAELoH,GACN,KAAKC,EAAM6B,aACT,IAA2B,IAAvB1K,EAAMkG,aAAwB,OAElC+H,EAAsBzM,GAEtBxB,EAAMtH,SAEN,MAEF,KAAKmQ,EAAM8B,UACT,IAAwB,IAApB3K,EAAMoG,UAAqB,OAE/BgI,EAAmB5M,GAEnBxB,EAAMtH,SAEN,MAEF,KAAKmQ,EAAM+B,gBACT,IAAyB,IAArB5K,EAAMgG,aAA4C,IAApBhG,EAAMoG,UAAqB,QAvSnE,SAAiC5E,GAC3BxB,EAAMgG,YAAYqI,EAAqB7M,GAEvCxB,EAAMoG,WAAWgI,EAAmB5M,GAsSpC2N,CAAwB3N,GAExBxB,EAAMtH,SAEN,MAEF,KAAKmQ,EAAMgC,mBACT,IAAyB,IAArB7K,EAAMgG,aAA+C,IAAvBhG,EAAMkG,aAAwB,QA1StE,SAAoC1E,GAC9BxB,EAAMgG,YAAYqI,EAAqB7M,GAEvCxB,EAAMkG,cAAc+H,EAAsBzM,GAyS1C4N,CAA2B5N,GAE3BxB,EAAMtH,SAEN,MAEF,QACEkQ,EAAQC,EAAMC,MA5QhBuG,CAAY7N,GAwGhB,SAAqBA,GACnB,IAAsB,IAAlBxB,EAAMiF,QAAmB,OAE7B,OAAQ2D,GACN,KAAKC,EAAM5B,OACT,IAA2B,IAAvBjH,EAAMkG,aAAwB,QA5WxC,SAA+B1E,GAC7ByJ,EAAUhI,IAAIzB,EAAMgM,QAAShM,EAAMiM,SAEnCvC,EACGiD,WAAWlD,EAAWF,GACtBb,eAAelK,EAAMmG,aAExB,IAAMsG,EAAUzM,EAAMP,WAEtB8J,EAAY,EAAI7D,KAAKC,GAAKuF,EAAYpO,EAAK2P,EAAQK,cAEnDhB,EAAU,EAAIpG,KAAKC,GAAKuF,EAAYlO,EAAKyP,EAAQK,cAEjD/B,EAAYvH,KAAKyH,GAEjBjL,EAAMtH,SA+VF4W,CAAsB9N,GAEtB,MAEF,KAAKqH,EAAM1B,MACT,IAAyB,IAArBnH,EAAMgG,WAAsB,QAjWtC,SAA8BxE,GAC5B+J,EAAStI,IAAIzB,EAAMgM,QAAShM,EAAMiM,SAElCjC,EAAW2C,WAAW5C,EAAUD,GAE5BE,EAAWxO,EAAI,EACjBoQ,EAASzB,KACAH,EAAWxO,EAAI,GACxBsQ,EAAQ3B,KAGVL,EAAW9H,KAAK+H,GAEhBvL,EAAMtH,SAsVF6W,CAAqB/N,GAErB,MAEF,KAAKqH,EAAMzB,IACT,IAAwB,IAApBpH,EAAMoG,UAAqB,QAxVrC,SAA4B5E,GAC1B4J,EAAOnI,IAAIzB,EAAMgM,QAAShM,EAAMiM,SAEhCpC,EAAS8C,WAAW/C,EAAQD,GAAUjB,eAAelK,EAAMqG,UAE3DiG,EAAIjB,EAASvO,EAAGuO,EAASrO,GAEzBmO,EAAS3H,KAAK4H,GAEdpL,EAAMtH,SAiVF8W,CAAmBhO,IA3HrBiO,CAAYjO,IAIhB,SAASiJ,EAAYjJ,IACG,IAAlBxB,EAAMiF,UAENzD,EAAMiN,YA0QVzO,EAAMuD,cAAcsB,GAEpB+D,EAAQC,EAAMC,KAtQd4G,GAAclO,GAIU,IAApBiK,EAAS1N,SACXiC,EAAMP,WAAWkQ,sBAAsBnO,EAAM+M,WAE7CvO,EAAMP,WAAWwE,oBAAoB,cAAeuG,GACpDxK,EAAMP,WAAWwE,oBAAoB,YAAawG,KAItD,SAASH,EAAgB9I,GACvBkO,GAAclO,GA+GhB,SAAS+I,EAAa/I,IAEA,IAAlBxB,EAAMiF,UACe,IAArBjF,EAAMgG,YACL4C,IAAUC,EAAMC,MAAQF,IAAUC,EAAM5B,SAI3CzF,EAAMmD,iBAEN3E,EAAMuD,cAAcqB,GAlWtB,SAA0BpD,GACpBA,EAAMgL,OAAS,EACjBc,EAAQ3B,KACCnK,EAAMgL,OAAS,GACxBY,EAASzB,KAGX3L,EAAMtH,SA6VNkX,CAAiBpO,GAEjBxB,EAAMuD,cAAcsB,IAGtB,SAAS2D,EAAUhH,IACK,IAAlBxB,EAAMiF,UAAyC,IAApBjF,EAAMoG,WAhWvC,SAAuB5E,GACrB,IAAIqO,GAAc,EAClB,GAAkC,UAA9BlQ,SAASmQ,cAAcnZ,GAA3B,CACE,OAAQ6K,EAAME,MACZ,IAAK,OACH4L,EAAQ,IACRuC,GAAc,EACd,MACA,IAAK,OACLzC,EAAS,IACTyC,GAAc,EACd,MACF,KAAK7P,EAAM0G,KAAKE,GAChB,IAAK,QACH0F,EAAI,EAAGtM,EAAMuG,aACbsJ,GAAc,EACd,MAEF,KAAK7P,EAAM0G,KAAKI,OACdwF,EAAI,GAAItM,EAAMuG,aACdsJ,GAAc,EACd,MAEF,KAAK7P,EAAM0G,KAAKC,KAChB,IAAK,OACH2F,EAAItM,EAAMuG,YAAa,GACvBsJ,GAAc,EACd,MAEF,KAAK7P,EAAM0G,KAAKG,OAAS,IACzB,IAAK,OACHyF,GAAKtM,EAAMuG,YAAa,GACxBsJ,GAAc,EAMhBA,IAEFrO,EAAMmD,iBAEN3E,EAAMtH,WAwTRqX,CAAcvO,GAyHhB,SAAS4I,EAAc5I,IACC,IAAlBxB,EAAMiF,SAEVzD,EAAMmD,iBAOR,SAAS+K,GAAclO,UACdkK,EAAiBlK,EAAM+M,WAE9B,IAAK,IAAIyB,EAAI,EAAGA,EAAIvE,EAAS1N,OAAQiS,IACnC,GAAIvE,EAASuE,GAAGzB,WAAa/M,EAAM+M,UAEjC,YADA9C,EAASwE,OAAOD,EAAG,GAMzB,SAAStB,GAAalN,GACpB,IAAI/E,EAAWiP,EAAiBlK,EAAM+M,gBAErBpT,IAAbsB,IACFA,EAAW,IAAIuO,UACfU,EAAiBlK,EAAM+M,WAAa9R,GAGtCA,EAASwG,IAAIzB,EAAMe,MAAOf,EAAMiB,OAGlC,SAASyL,GAAyB1M,GAChC,IAAM0O,EACJ1O,EAAM+M,YAAc9C,EAAS,GAAG8C,UAAY9C,EAAS,GAAKA,EAAS,GAErE,OAAOC,EAAiBwE,EAAQ3B,WA7gCJ,OAkhC9BvO,EAAMP,WAAWgF,iBAAiB,cAAe2F,GAEjDpK,EAAMP,WAAWgF,iBAAiB,cAAe4F,GACjDrK,EAAMP,WAAWgF,iBAAiB,gBAAiB6F,GACnDtK,EAAMP,WAAWgF,iBAAiB,QAAS8F,EAAc,CACvD4F,SAAS,IAKX,EAAKzX,SA5hCyB,E,UADNgM,mBClBP0L,E,WAInB,aAAe,yBAFPC,cAEM,EACRD,EAAgBjZ,WACpBiZ,EAAgBjZ,SAAWN,M,+CAG7B,SACEiB,EACAwY,EACA7Q,GAEA,OAAQ3H,GACN,IAAK,MACHjB,KAAK0Z,gBAAgBD,EAAQ7Q,GAC7B,MACF,IAAK,QACH5I,KAAK2Z,kBAAkBF,EAAQ7Q,GAC/B,MACF,QACEzF,QAAQ0F,KAAR,wBAA8B5H,EAA9B,kB,6BAKN,SAAgBwY,EAAsB7Q,GAChC5I,KAAKwZ,WAAUxZ,KAAKwZ,SAASpL,SAAU,GAC3CpO,KAAKwZ,SAAW,IAAI7Q,EAAY8Q,EAAQ7Q,GACxC5I,KAAKwZ,SAASzQ,cAAgB,K,+BAGhC,SAAkB0Q,EAAsB7Q,GAClC5I,KAAKwZ,WAAUxZ,KAAKwZ,SAASpL,SAAU,GAC3CpO,KAAKwZ,SAAW,IAAIvL,EAAcwL,EAAQ7Q,GAC1C5I,KAAKwZ,SAAS9H,kBAAkB1E,U,4BAGlC,SAAelJ,GACT9D,KAAKwZ,UAAUxZ,KAAKwZ,SAAS3X,OAAOiC,O,KAxCvByV,EACLjZ,c,8GCAKsC,E,WAYnB,aAAe,IAAD,OACZ,GADY,yBAVPC,SAAW,IAAIjC,gBAAoB,CAAEgZ,WAAW,EAAMC,OAAO,IAUtD,KATNC,mBASM,OARNC,UAA6B,IAAInZ,YAQ3B,KAPNoV,IAAM,GAOA,KANNgE,KAAO,IAMD,KALNC,IAAM,IAKA,KAJNR,YAIM,OAHNS,gBAAsC,QAGhC,KAFNC,MAAQ,IAAIvZ,QAGdgC,EAActC,SAAU,OAAOsC,EAActC,SACjDsC,EAActC,SAAWN,KACzBA,KAAKoa,aACLpN,OAAOY,iBAAiB,UAAU,kBAAM,EAAKyM,kB,yCAG/C,SAAMP,EAA4BQ,GAChCta,KAAK6C,SAAS0X,QAAQT,EAAc1D,YAAa0D,EAAc7D,cAC/DjW,KAAK8Z,cAAgBA,EACrB9Z,KAAK8Z,cAAcU,YAAYxa,KAAK6C,SAAS+F,YAE7C5I,KAAKqa,eACLra,KAAKya,eACLza,KAAK0a,gBACL1a,KAAK2a,cAAcL,K,yBAGrB,WACEta,KAAK6C,SAAS+X,iBAAiB,Q,yBAGjC,SAAYC,EAAgBC,GAC1B,IAAMzB,EAAU,IAAIzY,UAAcia,EAAQC,GAC1C9a,KAAK+Z,UAAUgB,cAAc1B,EAASrZ,KAAKyZ,QAC3C,IAAMuB,EAAahb,KAAK+Z,UACrBkB,iBAAiB5Z,IAAaf,SAAS4a,WAAWC,UAAU,GAC5DC,QAAO,SAAC5X,GAAD,MAAyB,SAAlBA,EAAEe,OAAOtD,QAEtB+Z,EAAW9T,OAAS,EACtB7F,IAAaf,SAAS+D,OAAO2W,EAAW,GAAGzW,QAE3ClD,IAAaf,SAAS+D,W,wBAI1B,WACOrE,KAAK8Z,gBACR9Z,KAAKyZ,OAAS,IAAI7Y,oBAChBZ,KAAKgW,IACLhJ,OAAOC,WAAaD,OAAOE,YAC3BlN,KAAKga,KACLha,KAAKia,KAEPja,KAAKyZ,OAAO7T,SAASO,EAAI,GACzBnG,KAAKyZ,OAAO5T,SAASI,GAAK,GAC1BjG,KAAKyZ,OAAO7T,SAASS,EAAI,M,2BAI7B,SAAsBiU,GAAqB,IAAD,OACxCta,KAAK6C,SAAS+X,kBAAiB,SAACS,GAAD,OAAkB,EAAKxZ,OAAOyY,Q,2BAG/D,WACEta,KAAK+Z,UAAY,IAAInZ,c,0BAGvB,WACOZ,KAAK8Z,eAGVP,IAAgBjZ,SAASgb,YACvBtb,KAAKka,gBACLla,KAAKyZ,OACLzZ,KAAK6C,SAAS+F,c,4BAIlB,WAC+B,QAAzB5I,KAAKka,gBACPla,KAAKka,gBAAkB,QACW,UAAzBla,KAAKka,kBACdla,KAAKka,gBAAkB,OAEzBX,IAAgBjZ,SAASgb,YACvBtb,KAAKka,gBACLla,KAAKyZ,OACLzZ,KAAK6C,SAAS+F,c,0BAIlB,WACE,GAAK5I,KAAK8Z,cAAV,CACA,IAAMyB,EAAavb,KAAK8Z,cAAc0B,wBACtCxb,KAAKyZ,OAAOgC,OAASF,EAAWG,MAAQH,EAAW7Y,OACnD1C,KAAKyZ,OAAO3H,yBACZ9R,KAAK6C,SAAS0X,QAAQgB,EAAWG,MAAOH,EAAW7Y,QACnD1C,KAAK6C,SAAS8Y,cAAc3O,OAAO4O,qB,oBAGrC,SAAOtB,GACLta,KAAK6C,SAASgZ,OAAOvB,EAAOta,KAAKyZ,QACjC,IAAM3V,EAAY9D,KAAKma,MAAM2B,WAC7Bza,IAAaf,SAASyb,YAAYjY,GAClCyV,IAAgBjZ,SAAS0b,eAAelY,O,KA3GvBlB,EACLtC,c,8FCHKI,E,WAGnB,aAAe,oBACTA,EAAgBJ,WACpBI,EAAgBJ,SAAWN,M,+CAG7B,SAAYiB,GACV,OAAQA,GACN,IAAK,MACH,OAAO,IAAIL,oBACb,IAAK,SACH,OAAO,IAAIA,uBAA2B,EAAG,GAAI,IAC/C,IAAK,WACH,OAAO,IAAIA,yBAA6B,EAAG,EAAG,EAAG,GAAI,GACvD,IAAK,QACH,OAAO,IAAIA,sBAA0B,EAAG,IAAK,GAAI,GAAI,KACvD,IAAK,QACH,OAAO,IAAIA,sBAA0B,EAAG,GAC1C,IAAK,cACH,OAAO,IAAIA,4BACb,IAAK,aACH,OAAO,IAAIA,2BACb,IAAK,eACH,OAAO,IAAIA,6BACb,IAAK,cACH,OAAO,IAAIA,4BACb,QACE,OAAO,IAAIA,4B,KA7BEF,EACLJ,c,wnCCeV2b,aAA+B,CACnCjX,QAAS,GACTkX,oBAAgB5X,EAChBuD,WAAY,GACZsU,cAAe,SAACtU,KAChBuU,WAAY,SAACpX,KACbqX,kBAAmB,SAACpX,KACpBqX,eAAgB,cAGLC,cAAgBC,yDAA8BP,cAE9CQ,eAAiB,SAAjBA,eAAkB,MAIxB,IAAD,sBAHJtB,SAGI,KAHJA,SAGI,UAC0BuB,oDAAwC,IADlE,8LACG1X,QADH,cACYoX,WADZ,yBAEwCM,sDAFxC,+LAEGR,eAFH,cAEmBG,kBAFnB,yBAGgCK,oDAAQ,qCAACR,qBAAD,IAACA,oBAAD,EAACA,eAAgB3W,eAAjB,gDAA4B,IAHpE,+LAGGsC,WAHH,cAGesU,cAHf,cAKEG,eAAiB,SAAjBA,iBAEJ,IAAMK,uBAAyB,SAAzBA,uBAA0B1X,QAE9B,IAAMrE,MAAQgc,mCACRC,YAAcxb,yDAAaf,SAASwE,YAAY6I,KAAKtM,yDAAaf,UAClEwc,aAAeC,mDAEfC,WAAU,UAAM/X,OAAOM,SACvB0X,aAAeD,WAAWE,UAC9BF,WAAWG,QAAQ,eAAiB,IAElCC,UAAYH,aAAaC,UAAU,EAAGD,aAAaE,QAAQ,iBAC/DC,UAAYA,UAAUC,WAAW,IAAK,KACtCD,UAAYA,UAAUC,WAAW,IAAK,KACtC,IAAI1d,MAA8C,GAC9C,UAAGyd,WAAYzV,QAAQ,MAAO,IAAIT,SACpCkW,UAAS,WAAOA,UAAP,KACTzd,MAAQ2d,KAAK,IAAD,OAAKF,UAAL,OAEd,IAAIG,gBAAkB7V,2DAAmBzC,QACzCsY,gBAAkB3V,2DAAkB2V,gBAAiB5d,OACrD,IAAM6d,aAAoBF,KAAK,IAAD,OAAKC,gBAAL,MAC9Bzc,OAAO2c,eAAeD,aAAc9X,8CACpCxE,6DAAiBZ,SAASoG,kBAAkBzB,OAAOrF,KAAM4d,aAAc7d,QAGzEmB,OAAOY,OAAOsD,SAAShE,SAAQ,SAACiE,GAC9B,IACsB,cAAhBA,EAAOhE,MACT0b,uBAAuB1X,GAEzB,MAAOyY,GACPva,QAAQiB,MAAMsZ,QAKpBC,sDAAU,WACRrB,mBACC,CAACtX,UAEJ,IAAM4Y,aAAe,CACnB5Y,gBACAoX,sBACAvU,sBACAsU,4BACAD,8BACAG,oCACAC,+BAGF,OACE,2DAACC,cAAcsB,SAAf,CAAwB5V,MAAO2V,aAA/B,SAA8CzC,a,gCC5FlD,8CACa4B,EAAoB,WAE/B,MAAO,CACLjd,GAFS0H,eAGT5H,KAAM,aACNa,SAAU,MACVD,SAAU,SACV2a,SAAU,GACVpb,WAAY,CACV4F,UAAW,CACTC,SAAU,CAAEK,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC3BR,SAAU,CAAEI,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC3BP,MAAO,CAAEG,EAAG,EAAGE,EAAG,EAAGE,EAAG,Q,gHCN1B4V,EAA+B,GAExB6B,EAAgBtB,wBAA8BP,GAE9C8B,EAAiB,SAAC,GAA+D,IAA7D5C,EAA4D,EAA5DA,SAEzByC,EAAe,CAAE9D,cADDkE,iBAAuB,OAI7C,OACE,cAACF,EAAcD,SAAf,CAAwB5V,MAAO2V,EAA/B,SACGzC,K,oFC8DQ8C,EAFC,I,WA7Dd,aAAe,yBATfC,kBASc,OARdC,mBAQc,OAPdC,sBAOc,OANdC,qBAMc,OALdC,qBAKc,OAJdC,qBAIc,OAHNC,oBAGM,OAFNC,eAAgB,EAGtBze,KAAKke,aAAe,IAAI7c,IACxBrB,KAAKme,cAAgB,IAAIvb,IACzB5C,KAAKoe,iBAAmB,IAAIld,IAC5BlB,KAAKqe,gBAAkB,IAAIhe,IAC3BL,KAAKse,gBAAkB,IAAI5d,IAC3BV,KAAKue,gBAAkB,IAAIhF,I,wCAG7B,SAAKO,EAA4B/W,GAC3B/C,KAAKye,gBACTze,KAAKwe,eAAiB1E,EAClB/W,GAAS/C,KAAK0e,mBAAmB3b,GACrC/C,KAAK2e,cACL3e,KAAKye,eAAgB,K,yBAGvB,WACEze,KAAKke,aAAaU,eAClB5e,KAAKme,cAAcU,MAAM7e,KAAKwe,eAAgBxe,KAAKke,aAAahD,c,yBAGlE,WACElb,KAAKke,aAAaY,eAClB9e,KAAKme,cAAcU,MAAM7e,KAAKwe,eAAgBxe,KAAKke,aAAahD,c,gCAGlE,SAAmBnY,GACjB/C,KAAKke,aAAaa,gBAAgBhc,K,kCAGpC,SAAqBU,EAA2BC,GAC9C1D,KAAKke,aAAac,oBAAoBvb,EAAUC,K,0BAGlD,SAAaK,GACX/D,KAAKke,aAAapZ,YAAYf,K,uBAIhC,WAAsB,IAAD,EACnB,iBAAO1C,IAAaC,mBAApB,W,yBAGF,SAAYuZ,EAAgBC,GAC1B9a,KAAKme,cAAcc,YAAYpE,EAAQC,K,0BAGzC,SAAarX,GACXzD,KAAKke,aAAagB,WAAWzb,K,+BAG/B,WACE,OAAOzD,KAAKke,aAAaiB,sB,oCAG3B,WACE,OAAOnf,KAAKke,aAAakB,+B,MCzDvBnD,EAAe,CACnBhZ,YAAa,CACXK,SAAU,GACVmW,OAAQ,CACN7T,SAAU,IAAIhF,UACdoV,IAAK,GACLgE,KAAM,GACNC,IAAK,IACLT,SAAU,SAEZtW,UAAW,IAEbmc,iBAAkB,KAClBC,YAAa,SAAChc,KACdic,oBAAqB,SAAC9b,KACtB+b,eAAgB,SAACC,KACjBvc,UAAW,GACXwc,aAAc,SAACxc,MAGJyc,EAAenD,wBAA6BP,GAE5C2D,EAAgB,SAAC,GAA+D,IAA7DzE,EAA4D,EAA5DA,SAA4D,EACpDuB,mBAA6B,CACjE9W,SAAU,IAAIhF,UACdoV,IAAK,GACLgE,KAAM,GACNC,IAAK,IACLT,SAAU,UAN8E,mBACnFiG,EADmF,KACtED,EADsE,OAS1D9C,mBAA+B,CAC7D,CACE5c,GAAI0H,eACJ5H,KAAM,WACNY,SAAU,SACVC,SAAU,MACV0a,SAAU,GACVpb,WAAY,CACV,UAAa,CACX6F,SAAU,CAACK,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC1BR,SAAU,CAAEI,EAAG,EAAGE,EAAG,EAAGE,EAAG,GAC3BP,MAAO,CAACG,EAAG,EAAGE,EAAG,EAAGE,EAAG,QApB2D,mBASnF/C,EATmF,KASzEgc,EATyE,OAyB1C5C,mBAAwB,MAzBkB,mBAyBnF2C,EAzBmF,KAyBjEE,EAzBiE,OA2BxD7C,mBAA4B,IA3B4B,mBA2BnFxZ,EA3BmF,KA2BxEwc,EA3BwE,KA4BpFzc,EAAc4c,mBAAQ,iBAC1B,CACEvc,WACAmW,OAAQgG,EACRvc,eAED,CAACI,EAAUmc,EAAavc,IAE3Bya,qBAAU,WACR,GAAI0B,EAAkB,CACpB,IAAM3b,EAAcJ,EAASC,MAAK,SAAAC,GAAC,OAAIA,EAAE1D,KAAOuf,KAChD,IAAK3b,EAAa,OAClBua,EAAQ6B,qBAAqBT,EAAkB3b,MAEhD,CAACT,IAEJ,IAAM2a,EAAe,CACnB3a,cACAoc,mBACAC,cACAE,iBACAD,sBACArc,YACAwc,gBAEF,OACE,cAACC,EAAa9B,SAAd,CAAuB5V,MAAO2V,EAA9B,SACGzC,K,wCCpBQ4E,EAnEE,WAAO,IAAD,EAQjBC,qBAAWL,GANb1c,EAFmB,EAEnBA,YACAqc,EAHmB,EAGnBA,YACAD,EAJmB,EAInBA,iBACAE,EALmB,EAKnBA,oBACArc,EANmB,EAMnBA,UACAwc,EAPmB,EAOnBA,aAcIO,EAA4CJ,mBAAQ,WAAO,IAAD,EAC9D,iBAAO5c,EAAYK,SAASC,MAAK,SAACC,GAAD,OAAOA,EAAE1D,KAAOuf,YAAjD,QAAsE,OACrE,CAACpc,EAAaoc,IAiCjB,MAAO,CACLpc,cACAgd,iBACAC,aAlBmB,WACnB,IAAMC,EAAgCpD,cACtCuC,EAAY,GAAD,mBAAKrc,EAAYK,UAAjB,CAA2B6c,KACtClC,EAAQmC,aAAaD,IAgBrBE,aAjDmB,SAACvgB,GACpB,GAAIA,IAAOuf,EAGT,OAFApB,EAAQoC,aAAa,SACrBd,EAAoB,IAGtBtB,EAAQoC,aAAavgB,GACrByf,EAAoBzf,IA2CpBwgB,aApCmB,SAACvc,GACpB,IAAMwc,EAAQtd,EAAYK,SAASM,WAAU,SAACJ,GAAD,OAAOA,EAAE1D,KAAOiE,EAAOjE,OACrD,IAAXygB,GACFpd,QAAQiB,MAAR,wBAA+BL,EAAOjE,GAAtC,6BAEFmD,EAAYK,SAASid,GAASxc,EAC9Bub,EAAY,YAAIrc,EAAYK,YA+B5Bkd,mBA5ByB,SACzBpf,EACAqf,KA2BAC,eAhBqB,SACrBC,EACAzb,EACAE,GAEA,IAAMwb,EAAczY,YAAoBwY,EAAczb,EAAgBE,GACtEsa,EAAa,GAAD,mBAAKxc,GAAL,CAAgB0d,QCDjBC,EAvDI,WAAO,IAAD,EASnBb,qBAAWzD,KAPbvX,EAFqB,EAErBA,QACAoX,EAHqB,EAGrBA,WACAF,EAJqB,EAIrBA,eACAG,EALqB,EAKrBA,kBACAC,EANqB,EAMrBA,eACAzU,EAPqB,EAOrBA,WACAsU,EARqB,EAQrBA,cAkCF,MAAO,CACLnX,QAASlE,OAAOY,OAAOsD,GACvBoX,aACAvU,aACAsU,gBACAD,iBACAG,oBACAyE,WAtCiB,SAACC,GAAwB,IAAD,EACnCC,EAAchc,EAAQ+b,GAC5B1E,EAAkB2E,GAClB7E,EAAa,iBAAC6E,QAAD,IAACA,OAAD,EAACA,EAAazb,eAAd,QAAyB,KAoCtC0b,WAjCiB,SAAChc,GAClB,IAAM+b,EAAclgB,OAAOY,OAAOsD,GAASzB,MAAK,SAAC2d,GAAD,OAAOA,EAAEphB,KAAOmF,EAAOnF,MAClEkhB,IACLA,EAAYzb,QAAUsC,EACtByU,MA8BA6E,aAtBmB,SAACC,GACpB,IAAMC,EAA8B,GAC9BC,EAAuBtc,EAQ7B,OAPAoc,EAAepgB,SAAQ,SAACugB,GACtB,IAAMC,EAAYla,YAAkBia,EAAc3hB,KAAM2hB,EAAcha,SAAUga,EAActgB,MAC9FogB,EAAW7c,KAAKgd,GAChBF,EAAqBE,EAAU5hB,MAAQ4hB,KAGzCpF,EAAWkF,GACJD,KCuBII,EA1DG,WAAO,IACfzc,EAAY6b,IAAZ7b,QADc,EAEgB+a,IAA9B9c,EAFc,EAEdA,YAAaod,EAFC,EAEDA,aACbvG,EAAkBkG,qBAAWlC,GAA7BhE,cAHc,EAIY4C,mBAASuB,EAAQ3c,aAJ7B,mBAIfogB,EAJe,KAIJC,EAJI,KAMhBC,EAAoC/B,mBACxC,iBAAO,CAAE5c,cAAa+B,UAAS9B,UAAW,MAC1C,CAACD,EAAa+B,IAGhB2Y,qBAAU,WAED7D,GAAkBA,EAAc+H,SAAYD,GAGjD3D,EAAQhe,KAAK6Z,EAAc+H,QAASD,KAGrC,CAAC9H,IAEJ6D,qBAAU,WACRM,EAAQS,mBAAmBkD,KAC1B,CAACA,IA2BJ,MAAO,CACL9H,gBACA4H,YACAI,UA5BgB,WAChB,GAAKhI,GAAkBA,EAAc+H,QAArC,CAGA,GAAIxgB,IAAaC,YAGf,OAFAqgB,GAAa,QACb1D,EAAQU,cAGVV,EAAQ8D,cACRJ,GAAa,KAmBbK,iBAhBuB,SAACxe,GAAyB,IAAD,EAC1Cye,EAA4Bze,EAAE6K,OACpC4T,EAAOC,QACP,IAAMC,EAAmBF,EAAOzG,wBACzBX,GACHrX,EAAEmT,QAAUwL,EAAQlc,GAAKkc,EAAQzG,MAAS,EAAI,EADnCZ,IAEVtX,EAAEoT,QAAUuL,EAAQhc,GAAKgc,EAAQzf,OAAU,EAAI,EAEpDub,EAAQgB,YAAYpE,EAAQC,GAC5BuF,EAAY,UAACpC,EAAQkB,2BAAT,QAAgC,OC/CjC,SAASiD,EAAT,GAAqE,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWnH,EAAiC,EAAjCA,SAChD,OACE,sBAAKoH,UAAU,2DAAf,UACE,oBAAIA,UAAU,sCAAd,SAAqDF,IACrD,qBAAKE,UAAS,iBAAKD,QAAL,IAAKA,IAAa,GAAlB,cAAd,SAAiDnH,OCPvD,IA6EeqH,EA7Ea,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,YAYpC,MAAqB,kBAAVD,GAAuC,kBAAVA,EAEpC,qBAAKF,UAAU,qCAAf,SACE,uBACEthB,KAAuB,kBAAVwhB,EAAqB,SAAW,SAC7Cxa,MAAmCwa,EACnCE,SAjBkB,SAACnf,GACJ,kBAAVif,EAKU,kBAAVA,GACTC,EAAYlf,EAAE6K,OAAOpG,OALrBya,EAAYE,OAAOpf,EAAE6K,OAAOpG,SAgBxBsa,UAAU,yCAKdvb,MAAMC,QAAQwb,GAAe,8CAG/B,sBAAKF,UAAU,qDAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,6BAAhB,gBACA,uBACEthB,KAAuB,kBAAVwhB,EAAqB,SAAW,SAC7Cxa,MAAOwa,EAAMxc,EACb0c,SAAU,SAACnf,GAAD,eACRkf,EAAY,CACVzc,EAAG2c,OAAOpf,EAAE6K,OAAOpG,OACnB9B,EAAC,iBAAEsc,QAAF,IAAEA,OAAF,EAAEA,EAAOtc,SAAT,QAAc,EACfE,EAAC,iBAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAOpc,SAAT,QAAc,KAGnBkc,UAAU,0CAGd,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,6BAAhB,gBACA,uBACEthB,KAAuB,kBAAVwhB,EAAqB,SAAW,SAC7Cxa,MAAOwa,EAAMtc,EACbwc,SAAU,SAACnf,GAAD,eACRkf,EAAY,CACVzc,EAAC,iBAAEwc,QAAF,IAAEA,OAAF,EAAEA,EAAOxc,SAAT,QAAc,EACfE,EAAGyc,OAAOpf,EAAE6K,OAAOpG,OACnB5B,EAAC,iBAAEoc,QAAF,IAAEA,OAAF,EAAEA,EAAOpc,SAAT,QAAc,KAGnBkc,UAAU,0CAGd,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,6BAAhB,gBACA,uBACEthB,KAAuB,kBAAVwhB,EAAqB,SAAW,SAC7Cxa,MAAOwa,EAAMpc,EACbsc,SAAU,SAACnf,GAAD,eACRkf,EAAY,CACVzc,EAAC,iBAAEwc,QAAF,IAAEA,OAAF,EAAEA,EAAOxc,SAAT,QAAc,EACfE,EAAC,iBAAEsc,QAAF,IAAEA,OAAF,EAAEA,EAAOtc,SAAT,QAAc,EACfE,EAAGuc,OAAOpf,EAAE6K,OAAOpG,UAGvBsa,UAAU,8CCpBLM,EA1CO,SAAC,GAIW,IAHhChc,EAG+B,EAH/BA,cACAD,EAE+B,EAF/BA,eACAkc,EAC+B,EAD/BA,gBAEQhC,EAAeD,IAAfC,WACR,OACE,sBAAKyB,UAAU,8BAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,6BAAK1b,IACc,cAAlBA,GACC,uBACE0b,UAAU,gFACVQ,QAAS,WACPjC,EAAWja,IAHf,+BAUJ,qBAAK0b,UAAU,YAAf,SACGzhB,OAAOC,QAAQ6F,GAAgBmB,KAAI,mCAAEib,EAAF,KAAaC,EAAb,YAClC,sBAAqBV,UAAU,iBAA/B,UACE,mBACEA,UAAU,mCACVrU,MAAO,CAAEgV,SAAU,QAFrB,SAIGF,IAEH,cAAC,EAAD,CACEP,MAAOQ,EACPP,YAAa,SAAClf,GAAD,OAAOsf,EAAgBjc,EAAemc,EAAWxf,QATxDwf,QAcd,oBAAIT,UAAU,aCzCL,SAASY,IAAkB,IAChCzB,EAAcD,IAAdC,UAD+B,EAEe3B,IAA9CE,EAF+B,EAE/BA,eAAgBK,EAFe,EAEfA,aAAcrd,EAFC,EAEDA,YAFC,EAIPyZ,mBAE9B,IANqC,mBAIhClD,EAJgC,KAItB8B,EAJsB,OAOCoB,mBAA8B,UAP/B,mBAOhC0G,EAPgC,KAOlBC,EAPkB,OAQC3G,mBAA8B,OAR/B,mBAQhC4G,EARgC,KAQlBC,EARkB,KAUvC5F,qBAAU,WACHsC,IACLoD,EAAgBpD,EAAezf,UAC/B+iB,EAAgBtD,EAAexf,aAC9B,CAACwf,IAGJtC,qBAAU,WAQJsC,GAP0B,SAAClc,GAC7B,IAAMyf,EAAkE,GACxE1iB,OAAOC,QAAQgD,EAAOhE,YAAYiB,SAAQ,YAAoB,IAAD,mBAAjBC,EAAiB,KAAXtB,EAAW,KAC3D6jB,EAAWviB,GAAQtB,KAErB2b,EAAY,eAAKkI,IAECC,CAAsBxD,KACzC,CAACA,EAAgBhd,EAAaye,IAEjC,IAQMoB,EAAkB,SACtB7hB,EACAwhB,EACAxa,GAEA,IAAMyb,EAAW,eAAQlK,GACzBkK,EAAYziB,GAAMwhB,GAASxa,EAC3BqT,EAAYoI,GACRzD,IACFA,EAAelgB,WAAa2jB,EAC5BpD,EAAa,eAAKL,MAgChB0D,EAZsB,WAC1B,IAAM5jB,EAAamB,IAAiBZ,SAASsjB,gBAC7C,IAAK3D,EAAgB,MAAO,GAC5B,IAAM4D,EAAoB/iB,OAAO+O,KAAP,OAAYoQ,QAAZ,IAAYA,OAAZ,EAAYA,EAAgBlgB,YACtD,OAAOe,OAAO+O,KAAK9P,GAChBqb,QAAO,SAAC0I,GAAD,OAAQD,EAAkBE,SAASD,MAC1C/b,KAAI,SAACpG,GAAD,MAAgB,CACnB0gB,MAAO1gB,EACPsG,MAAOtG,MAIYqiB,GASnBC,EANGnjB,OAAO+O,KAAKoO,EAAQI,gBAAgBnb,WAAW6E,KAAI,SAACvH,GAAD,MAAe,CACvE6hB,MAAO7hB,EACPyH,MAAOzH,MA2CX,OAAKyf,EAGH,eAACmC,EAAD,CAAOC,MAAM,YAAb,UAEE,yBAASE,UAAU,YAAnB,SACGzhB,OAAOC,QAAQyY,GAAUzR,KAAI,mCAAE9G,EAAF,KAAQtB,EAAR,YAC5B,cAAC,EAAD,CACEkH,cAAe5F,EACf2F,eAAgBjH,EAEhBmjB,gBAAiBA,GADZ7hB,QAOV0iB,EAAiBzc,OAAS,GACzB,oCACE,wBAAQyb,SAAU,SAACnf,GAAD,OAAOL,QAAQ+gB,IAAI1gB,EAAE6K,OAAOpG,QAA9C,SACG0b,EAAiB5b,KAAI,gBAAGsa,EAAH,EAAGA,MAAOpa,EAAV,EAAUA,MAAV,OACpB,wBAAoBA,MAAOA,EAA3B,SACGoa,GADUpa,QAKjB,qBAAKsa,UAAU,+BAAf,SACE,wBAAQQ,QAAS,kBA7HN,SAACthB,GACpB,GAAKwe,EAAL,CACA,IAAMrZ,EAAiB1F,IAAiBZ,SAAS6jB,kBAAkB1iB,GAC9DmF,IACLqZ,EAAelgB,WAAW0B,GAAiBmF,EAC3C0Z,EAAaL,KAwHkBmE,CAAaT,EAAiB,GAAG1b,QAAxD,gCAQN,kCACE,sBAAKsa,UAAU,yBAAf,UACE,sCACA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,mBACEA,UAAU,kCACVrU,MAAO,CAAEgV,SAAU,QAFrB,sBAMA,wBACEP,SAAU,SAACnf,GAAD,OA3HAod,EA2HsBpd,EAAE6K,OAAOpG,MA1HrDob,EAAgBzC,QACZX,IACFA,EAAezf,SAAWogB,EAC1BN,EAAa,eAAKL,MAJC,IAACW,GA4HVyD,aAAcjB,EAFhB,SAIGa,EAAgBlc,KAAI,SAACuc,GAAD,OACnB,wBAA2Brc,MAAOqc,EAAOrc,MAAzC,SACGqc,EAAOjC,OADGiC,EAAOrc,eAM1B,sBAAKsa,UAAU,8BAAf,UACE,mBACEA,UAAU,kCACVrU,MAAO,CAAEgV,SAAU,QAFrB,sBAMA,wBACEP,SAAU,SAACnf,GAAD,OArIA+gB,EAqIsB/gB,EAAE6K,OAAOpG,MApIrDsb,EAAgBgB,QACZtE,IACFA,EAAexf,SAAW8jB,EAC1BjE,EAAa,eAAKL,MAJC,IAACsE,GAsIVtc,MAAOqb,EAFT,SA/EgD,CAC1D,CACEjB,MAAO,MACPpa,MAAO,OAET,CACEoa,MAAO,SACPpa,MAAO,UAET,CACEoa,MAAO,QACPpa,MAAO,UAwEoBF,KAAI,SAACuc,GAAD,OACnB,wBAA2Brc,MAAOqc,EAAOrc,MAAzC,SACGqc,EAAOjC,OADGiC,EAAOrc,0BArER,cAACma,EAAD,CAAOC,MAAM,cClI5B,SAASmC,IAAqB,IAAD,EACDzE,IAAjCG,EADkC,EAClCA,aAAcQ,EADoB,EACpBA,eADoB,EAETe,IAAzBK,EAFkC,EAElCA,UAAWJ,EAFuB,EAEvBA,UAFuB,EAIxCb,IADMM,EAHkC,EAGlCA,aAAcjF,EAHoB,EAGpBA,eAAgB4E,EAHI,EAGJA,WAAYG,EAHR,EAGQA,WAAYpZ,EAHpB,EAGoBA,WAkC9D,OACE,gCACE,wBACE0a,UAAS,sCAAiCb,GAAa,kBAEzD,sBAAKa,UAAU,8BAAf,UACE,sBAAKA,UAAU,YAAf,UACE,yBAAQQ,QAASjB,EAAWS,UAAU,UAAtC,UACGb,EAAY,OAAS,MADxB,YAGA,wBAAQqB,QAAS7C,EAAcqC,UAAU,YAAzC,wBAGA,wBAAQQ,QA5Cc,WAE5B5B,EAAa,CAAC,CAAEvhB,KADM,eACe2H,SAAU,KAAMtG,KAAM,gBA0CbshB,UAAU,YAAlD,2BAGA,wBAAQQ,QA1Ca,WAC3B,IADiC,EAEN5B,EAAa,CACtC,CACEvhB,KAAM,SACN2H,SAAU,OACVtG,KAAM,UAER,CACErB,KAAM,WACN2H,SAAU,OACVtG,KAAM,cAXuB,mBAE1BwjB,EAF0B,KAEjBC,EAFiB,KAcjChE,EAbqB,cAaQ+D,EAAQ3kB,GAAI4kB,EAAQ5kB,KA4BJyiB,UAAU,YAAjD,6BAIDrG,GACC,sBAAKqG,UAAU,oBAAf,UACE,wBAAQA,UAAU,YAAYQ,QAzBd,WACxBjC,EAAW,KAwBH,0BAGA,wBAAQiC,QAlCO,WACnB7G,GACF+E,EAAW,2BAAK/E,GAAN,IAAsB3W,QAASsC,MAgCA0a,UAAU,SAA7C,kC,YC/DG,SAASoC,IAA6B,IAAD,EACI9D,IAA9C3E,EAD0C,EAC1CA,eAAgBrU,EAD0B,EAC1BA,WAAYsU,EADc,EACdA,cAEpCwB,qBAAU,YACH9V,GAAcqU,GACjBC,EAAcD,EAAe3W,WAE9B,CAAC2W,IAoBJ,OACE,mCACGA,GACC,mCACE,qBAAKqG,UAAU,yBAAf,SACE,cAAC,IAAD,CACE7f,OAAO,OACPgZ,MAAM,OACNkJ,gBAtBQ,WAClB,IAAK1I,EAAgB,MAAO,aAC5B,OAAQA,EAAe3U,UACrB,IAAK,KACH,MAAO,aACT,IAAK,KACH,MAAO,aACT,IAAK,OACH,MAAO,IACT,QACE,MAAO,OAYgBsd,GACjBR,aAAcnI,EAAe3W,QAC7Buf,MAAM,UACNnC,SA7Be,SAACoC,GAC1B5I,EAAa,OAAC4I,QAAD,IAACA,IAAY,QAqByB7I,EAAepc,QChCvD,SAASklB,IAA4B,IAAD,EACLvD,IAApC3H,EADyC,EACzCA,cAAekI,EAD0B,EAC1BA,iBAEvB,OACE,mCACGlI,GACC,qBACEha,GAAG,QACHmlB,IAAKnL,EACLoL,UAAW,EACXnC,QAAS,SAACvf,GAAD,OAAOwe,EAAiBxe,QC2B5B2hB,MAjCf,YAAyD,IAAD,EAA/BphB,EAA+B,EAA/BA,OAA+B,EACbgc,IAAjCE,EAD8C,EAC9CA,eAAgBI,EAD8B,EAC9BA,aAElB+E,EAAavF,mBACjB,kBAAoB,OAAdI,QAAc,IAAdA,OAAA,EAAAA,EAAgBngB,MAAOiE,EAAOjE,KACpC,CAACmgB,EAAgBlc,EAAOjE,KAQ1B,OACE,qBACEyiB,UAAS,yKAQH6C,GAAc,cARX,uBASHA,EAAa,oBAAsB,oBAThC,UAWTrC,QAlBgB,SAACvf,GACnBA,EAAE6hB,kBACFhF,EAAatc,EAAOjE,KAIpB,0BAcGiE,QAdH,IAcGA,OAdH,EAcGA,EAAQnE,YAdX,QAcmB,gBC9BR,SAAS0lB,IAAgC,IAC9CriB,EAAgB8c,IAAhB9c,YACR,OACE,cAACmf,EAAD,CAAOC,MAAM,YAAb,SACE,qBAAKE,UAAU,YAAf,SACGtf,EAAYK,SAASyE,KAAI,SAAChE,GAAD,OACxB,cAAC,EAAD,CAA+BA,OAAQA,GAAnBA,EAAOjE,WCJtB,SAASylB,EAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,MAAOrK,EAAgC,EAAhCA,SAC1C,OACE,oCACE,kCAAUqK,IADZ,OAEGrK,QAFH,IAEGA,IAFH,aAEqBqK,MCLV,SAASC,IAA8B,IAC5CxiB,EAAgB8c,IAAhB9c,YAD2C,EAEH4d,IAAxC7b,EAF2C,EAE3CA,QAAS8b,EAFkC,EAElCA,WAAY5E,EAFsB,EAEtBA,eAC7B,OACE,eAACkG,EAAD,CAAOC,MAAM,UAAUC,UAAU,YAAjC,UACE,cAACiD,EAAD,CAAaC,MAAM,UAAnB,SACGxgB,EAAQ+C,KAAI,SAACmZ,GAAD,OACX,sBACEqB,UAAS,mCACK,OAAdrG,QAAc,IAAdA,OAAA,EAAAA,EAAgBpc,MAAOohB,EAAEphB,IAAM,cADtB,wBAGK,OAAdoc,QAAc,IAAdA,OAAA,EAAAA,EAAgBpc,MAAOohB,EAAEphB,GAAK,oBAAsB,qBAEpDijB,QAAS,kBAAMjC,EAAWI,EAAEthB,OAN9B,UASGshB,EAAEthB,KATL,IASYshB,EAAE3Z,WAFP2Z,EAAEphB,SAOb,cAACylB,EAAD,CAAaC,MAAM,YAEnB,cAACD,EAAD,CAAaC,MAAM,YAAnB,SAEIviB,EAAYC,UAAU6E,KAAI,SAAAvH,GAAQ,OAChC,8BACGA,EAASZ,MADFY,EAASV,YCxBhB,SAAS4lB,IAEtB,OACE,sBAAKnD,UAAU,oCAAf,UACE,cAACiC,EAAD,IACA,0BACEjC,UAAU,qBACVrU,MAAO,CAAEyX,oBAAqB,mBAFhC,UAIE,sBAAKpD,UAAU,8BAAf,UACE,cAACyC,EAAD,IACA,cAACL,EAAD,OAEF,wBAAOpC,UAAU,mBAAjB,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC+C,EAAD,MAEF,qBAAK/C,UAAU,aAAf,SACE,cAACkD,EAAD,SAGJ,uBAAOlD,UAAU,OAAjB,SACE,cAACY,EAAD,YCbKyC,MAZf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAACF,EAAD,WCLVG,IAAShK,OACP,cAAC,IAAMiK,WAAP,UACE,cAAC,EAAD,MAEFhd,SAASid,eAAe,W","file":"static/js/main.587592f8.chunk.js","sourcesContent":["import * as THREE from 'three';\nimport Component from './Component';\nimport ComponentManager from './ComponentManager';\nimport MaterialManager from './MaterialManager';\nimport GeometryManager from './GeometryManager';\nimport SceneManager from './SceneManager';\n\nexport default class Entity {\n  public name: string = \"\";\n  public mesh!: THREE.Mesh;\n  public readonly id: Engine.EntityID;\n  public components: Record<Engine.ComponentType, Component> = {};\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id;\n    this.name = props.name;\n    this.init(props);\n  }\n\n  init(props: Engine.EntityProps) {\n    this.initMesh(props);\n    this.initComponents(props.components);\n  }\n\n  initMesh(props: Engine.EntityProps) {\n    const mat = MaterialManager.instance.getMaterial(props.material);\n    const geometry = GeometryManager.instance.getGeometry(props.geometry);\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat);\n    }\n    else {\n      this.mesh.geometry = geometry;\n      this.mesh.material = mat;\n    }\n    this.mesh.uuid = this.id;\n    this.mesh.name = this.name;\n  }\n\n  initComponents(components: Record<Engine.ComponentType, Engine.ComponentProps>) {\n    this.components = {};\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props);\n    })\n  }\n\n  // TODO: Implement\n  addChild(child: Entity) { }\n\n  // TODO: Implement\n  destroy() { }\n\n  start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents();\n    }\n  }\n\n  update() {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents();\n    }\n  }\n\n  getComponent(componentName: string): Component | undefined {\n    return this.components[componentName];\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n}","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\n\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(60, 6)\n  private _selectionHelper: THREE.BoxHelper | undefined\n\n  constructor() {\n    if (SceneManager.instance) {\n      return\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    this._scene.add(new THREE.DirectionalLight(0xffffff, 0.6))\n    this._scene.add(new THREE.AmbientLight(0x555555))\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload) {\n    let shouldRecompileMaterials = false;\n    if (this._scenePayload) {\n      if (this._scenePayload.sceneConfig.materials !== payload.sceneConfig.materials) {\n        shouldRecompileMaterials = true\n      }\n    }\n    this._scenePayload = payload\n    if (shouldRecompileMaterials) {\n      console.debug('recompiling mats')\n      this._compileMaterials();\n    }\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    this._selectionHelper?.setFromObject(this._entities[updateIndex].mesh)\n  }\n\n  updateScene(deltaTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update()\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._scene.remove(this._axes)\n    this._scene.remove(this._gridHelper)\n    // this._scene.background = new THREE.Color(\"rgb(0,0,0)\")\n    if (this._selectionHelper) this._scene.remove(this._selectionHelper)\n    try {\n      this._buildEntities()\n      this._startEntities()\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    // this._scene.background = new THREE.Color(\"rgb(0,2,60)\")\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    if (this._selectionHelper) this._scene.add(this._selectionHelper)\n    this._buildEntities()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    this.select(this._entities.find((e) => e.id === entityID)?.mesh ?? undefined)\n  }\n\n  /** Sets Entity with corresponding object as selected,\n   *  if no object is passed, deselects any selected entity\n   * @param object THREE.Object3D\n   */\n  select(object?: THREE.Object3D) {\n    if (this.isPlaying) return\n    if (!object && this._selectionHelper && this._selectedEntityID) {\n      this._scene.remove(this._selectionHelper)\n      this._selectedEntityID = undefined\n      return\n    }\n\n    if (object) {\n      this._selectedEntityID = object.uuid\n      if (!this._selectionHelper) {\n        this._selectionHelper = new THREE.BoxHelper(object, 0xffff00)\n        this._scene.add(this._selectionHelper)\n        return\n      }\n\n      this._selectionHelper?.setFromObject(object)\n      this._scene.add(this._selectionHelper)\n    }\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    this._scene.add(entity.mesh)\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      this._scene.remove(entity.mesh)\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildEntities() {\n    if (!this._scenePayload) return\n    // This prevents all of the strange object mutation\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    localPayloadCopy.sceneConfig.entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n\n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.MaterialPayload = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","import * as THREE from 'three';\nimport Component from './Component';\nimport Entity from './Entity';\ninterface ITransformProps {\n  position?: THREE.Vector3;\n  rotation?: THREE.Euler;\n  scale?: THREE.Vector3;\n}\n\nexport default class Transform extends Component {\n  entity: Entity;\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, 'XYZ');\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1);\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.entity = entity;\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position;\n    this.rotation = props?.rotation ?? this.rotation;\n    this.scale = props?.scale ?? this.scale;\n    this.applyMatrix();\n  }\n\n  start() {\n    this.applyMatrix();\n  }\n\n  private applyPosition() {\n    this.entity.mesh.position.setX(this.position.x);\n    this.entity.mesh.position.setY(this.position.y);\n    this.entity.mesh.position.setZ(this.position.z);\n  }\n\n  private applyRotation() {\n    this.entity.mesh.setRotationFromEuler(new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z));\n  }\n\n  private applyScale() {\n    this.entity.mesh.scale.setX(this.scale.x);\n    this.entity.mesh.scale.setY(this.scale.y);\n    this.entity.mesh.scale.setZ(this.scale.z);\n  }\n\n  private applyMatrix() {\n    if (!this.entity) { return; }\n    this.applyPosition();\n    this.applyRotation();\n    this.applyScale();\n  }\n\n  update() {\n    this.applyMatrix();\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `varying vec3 vColor;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `void main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.Material => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","import * as THREE from \"three\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.MaterialPayload): void {\n    const mat = materialPayload.material;\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: mat.uniforms,\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      )\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n        switch (event.code) {\n          case \"KeyW\":\n            dollyIn(0.3)\n            needsUpdate = true\n            break\n            case \"KeyS\":\n            dollyOut(0.3)\n            needsUpdate = true\n            break\n          case scope.keys.UP:\n          case \"Space\":\n            pan(0, scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.LEFT:\n          case \"KeyA\":\n            pan(scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n\n          case scope.keys.RIGHT || \"d\":\n          case \"KeyD\":\n            pan(-scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n          default:\n            break\n        }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(\n    type: Engine.ControlType,\n    camera: THREE.Camera,\n    domElement: HTMLElement\n  ) {\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n  }\n\n  _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false;\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this._setCamera()\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderer.setSize(renderElement.clientWidth, renderElement.clientHeight)\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    \n    this.handleResize()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n  }\n\n  resetCamera() {\n    this.renderer.setAnimationLoop(null)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster\n      .intersectObjects(SceneManager.instance.getScene().children, true)\n      .filter((e) => e.object.type === \"Mesh\")\n\n    if (intersects.length > 0) {\n      SceneManager.instance.select(intersects[0].object)\n    } else {\n      SceneManager.instance.select()\n    }\n  }\n\n  private _setCamera() {\n    if (!this.renderElement) {\n      this.camera = new THREE.PerspectiveCamera(\n        this.fov,\n        window.innerWidth / window.innerHeight,\n        this.near,\n        this.far\n      )\n      this.camera.position.y = 10\n      this.camera.rotation.x = -0.1\n      this.camera.position.z = 50\n    }\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  private changeControls() {\n    if (this.currentControls === \"fly\") {\n      this.currentControls = \"orbit\"\n    } else if (this.currentControls === \"orbit\") {\n      this.currentControls = \"fly\"\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    this.camera.aspect = dimensions.width / dimensions.height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(dimensions.width, dimensions.height)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    const deltaTime = this.clock.getDelta()\n    SceneManager.instance.updateScene(deltaTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import * as THREE from 'three';\n\nexport default class GeometryManager {\n  public static instance: GeometryManager;\n\n  constructor() {\n    if (GeometryManager.instance) return;\n    GeometryManager.instance = this;\n  }\n\n  getGeometry(type: Engine.MaterialType): THREE.BufferGeometry {\n    switch (type) {\n      case 'box':\n        return new THREE.BoxBufferGeometry();\n      case 'sphere':\n        return new THREE.SphereBufferGeometry(1, 16, 16);\n      case 'cylinder':\n        return new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1);\n      case 'torus':\n        return new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3);\n      case 'plane':\n        return new THREE.PlaneBufferGeometry(1, 1);\n      case 'tetrahedron':\n        return new THREE.TetrahedronBufferGeometry();\n      case 'octahedron':\n        return new THREE.OctahedronBufferGeometry();\n      case 'dodecahedron':\n        return new THREE.DodecahedronBufferGeometry();\n      case 'icosahedron':\n        return new THREE.IcosahedronBufferGeometry();\n      default:\n        return new THREE.SphereBufferGeometry();\n    }\n  }\n}","import * as three from \"three\"\nimport { Component, ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ComponentManager from \"../../engine/core/ComponentManager\"\nimport { formatScriptString, injectInitSection } from \"../../utils/script.utils\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport { generateNewEntity } from \"../../utils/entity.utils\"\n\ninterface IScriptContext {\n  scripts: Record<string, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<string, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<string, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<string, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n  const [scriptBody, setScriptBody] = useState(selectedScript?.content ?? \"\")\n\n  const compileScripts = () => {\n    \n    const compileComponentScript = (script: Engine.Script) => {\n      // References to be used when running eval\n      const THREE = three                           \n      const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n      const CreateEntity = generateNewEntity\n\n      const scriptCopy = `${script.content}`\n      const removePrefix = scriptCopy.substring(\n        scriptCopy.indexOf(\"// <public>\") + 11\n      )\n      let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n      pureProps = pureProps.replaceAll(\";\", \",\")\n      pureProps = pureProps.replaceAll(\"=\", \":\")\n      let props: Record<string, Engine.ComponentType> = {}\n      if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n        pureProps = `{${pureProps}}`\n        props = eval(`(${pureProps})`) // ! <-- Eval\n      }\n      let formattedScript = formatScriptString(script)\n      formattedScript = injectInitSection(formattedScript, props)\n      const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n      Object.setPrototypeOf(NewComponent, Component)\n      ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n    }\n\n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          compileComponentScript(script);\n        } \n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  useEffect(() => {\n    compileScripts()\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    geometry: 'box',\n    material: 'normal',\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      }\n    },\n  };\n}","import { ReactElement, useEffect, useRef } from 'react';\nimport { createContext } from 'react';\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>;\n};\n\nconst initialValue: IEditorContext = {}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue);\n\nexport const EditorProvider = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  const contextValue = { renderElement };\n\n\n  return (\n    <EditorContext.Provider value={contextValue}>\n      {children}\n    </EditorContext.Provider>\n  );\n};","import CameraManager from \"./CameraManager\";\nimport ComponentManager from \"./ComponentManager\";\nimport ControlsManager from \"./ControlsManager\";\nimport GeometryManager from \"./GeometryManager\";\nimport MaterialManager from \"./MaterialManager\";\nimport SceneManager from \"./SceneManager\";\n\nclass EngineContext {\n  sceneManager: SceneManager;\n  cameraManager: CameraManager;\n  componentManager: ComponentManager;\n  materialManager: MaterialManager;\n  geometryManager: GeometryManager;\n  controlsManager: ControlsManager;\n  private _renderElement!: HTMLElement;\n  private isInitialized = false;\n\n  constructor() {\n    this.sceneManager = new SceneManager();\n    this.cameraManager = new CameraManager();\n    this.componentManager = new ComponentManager();\n    this.materialManager = new MaterialManager();\n    this.geometryManager = new GeometryManager();\n    this.controlsManager = new ControlsManager();\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return;\n    this._renderElement = renderElement;\n    if (payload) this.updateScenePayload(payload);\n    this.runEditMode();\n    this.isInitialized = true;\n  }\n\n  runPlayMode() {\n    this.sceneManager.runPlayScene();\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene());\n  }\n\n  runEditMode() {\n    this.sceneManager.runEditScene();\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene());\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload) {\n    this.sceneManager.setScenePayload(payload);\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps);\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity);\n\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY);\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID);\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity();\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload();\n  }\n}\n\nconst context = new EngineContext();\n\nexport default context;","import * as THREE from 'three';\nimport { ReactElement, useEffect, useMemo } from 'react';\nimport { createContext } from 'react';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport context from '../../engine/core/EngineContext';\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig;\n  setEntities: (props: Engine.EntityProps[]) => void;\n  selectedEntityID: string | null;\n  setSelectedEntityID: (entityID: string | null) => void;\n  setCameraProps: (cameraProps: Engine.CameraProps) => void;\n  materials: Engine.Material[]\n  setMaterials: (materials: Engine.Material[]) => void;\n};\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType\n    },\n    materials: []\n  },\n  selectedEntityID: null,\n  setEntities: (entities: Engine.EntityProps[]) => { },\n  setSelectedEntityID: (entityID: string | null) => { },\n  setCameraProps: (cameraProps: Engine.CameraProps) => { },\n  materials: [],\n  setMaterials: (materials: Engine.Material[]) => { }\n};\n\nexport const SceneContext = createContext<ISceneContext>(initialValue);\n\nexport const SceneProvider = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const [cameraProps, setCameraProps] = useState<Engine.CameraProps>({\n    position: new THREE.Vector3(),\n    fov: 70,\n    near: 0.1,\n    far: 1000,\n    controls: \"orbit\" as Engine.ControlType\n  });\n\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Entity A\",\n      material: 'normal',\n      geometry: 'box',\n      children: [],\n      components: {\n        \"Transform\": {\n          position: {x: 0, y: 0, z: 0},\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: {x: 1, y: 1, z: 1},\n        },\n      }\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null);\n\n  const [materials, setMaterials] = useState<Engine.Material[]>([] as Engine.Material[]);\n  const sceneConfig = useMemo(() => (\n    {\n      entities,\n      camera: cameraProps,\n      materials\n    }\n  ), [entities, cameraProps, materials]);\n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find(e => e.id === selectedEntityID);\n      if (!entityProps) return;\n      context.updateSpecificEntity(selectedEntityID, entityProps);\n    }\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    setEntities,\n    setCameraProps,\n    setSelectedEntityID,\n    materials,\n    setMaterials\n  }\n  return (\n    <SceneContext.Provider value={contextValue}>\n      {children}\n    </SceneContext.Provider>\n  );\n}","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport { generateNewEntity } from \"../../utils/entity.utils\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\nimport useScripts from \"../scripts/useScripts\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n  } = useContext(SceneContext)\n\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedEntityID(id)\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    setEntities([...sceneConfig.entities, newEntity])\n    context.addNewEntity(newEntity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID,\n  ) => {\n    const newMaterial = generateNewMaterial(materialName, vertexShaderID, fragmentShaderID);\n    setMaterials([...materials, newMaterial])\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n  }\n}\n\nexport default useScene\n","import { useContext, useEffect, useState } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { ScriptContext } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n    scriptBody,\n    setScriptBody,\n  } = useContext(ScriptContext)\n\n  const loadScript = (scriptName: string) => {\n    const foundScript = scripts[scriptName]\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody;\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = [];\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(scriptPayload.name, scriptPayload.language, scriptPayload.type)\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.name] = newScript\n    })\n    \n    setScripts(updatedScriptsObject)\n    return newScripts;\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = () => {\n  const { scripts } = useScripts()\n  const { sceneConfig, selectEntity } = useScene()\n  const { renderElement } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts, materials: [] }), // todo\n    [sceneConfig, scripts]\n  )\n\n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload) {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n  }, [renderElement])\n\n  useEffect(() => {\n    context.updateScenePayload(scenePayload)\n  }, [scenePayload])\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus();\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n  }\n}\n\nexport default useEditor\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","interface Props {\n  field: Engine.ComponentPropType\n  updateField: (field: Engine.ComponentPropType) => void\n}\n\nconst ComponentFieldValue = ({ field, updateField }: Props): React.ReactElement => {\n  const handleUpdateField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof field === \"number\") {\n      updateField(Number(e.target.value))\n      return\n    }\n\n    if (typeof field === \"string\") {\n      updateField(e.target.value)\n    }\n  }\n\n  if (typeof field === \"number\" || typeof field === \"string\")\n    return (\n      <div className=\"bg-gray-700 text-white px-1  w-max\">\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={typeof field === \"number\" ? field : field}\n          onChange={handleUpdateField}\n          className=\"bg-gray-700 w-16 font-mono text-xs\"\n        />\n      </div>\n    )\n\n  if (Array.isArray(field)) return <div>array field</div>\n\n  return (\n    <div className=\"bg-gray-700 text-white px-2 grid grid-cols-3 gap-1\">\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">x:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.x}\n          onChange={(e) =>\n            updateField({\n              x: Number(e.target.value),\n              y: field?.y ?? 0,\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">y:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.y}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: Number(e.target.value),\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">z:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.z}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: field?.y ?? 0,\n              z: Number(e.target.value),\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n    </div>\n  )\n}\n\nexport default ComponentFieldValue\n","import useScripts from \"../../../state/scripts/useScripts\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n  const { loadScript } = useScripts()\n  return (\n    <div className=\"bg-gray-800 text-white pb-4\">\n      <div className=\"flex w-full justify-between items-center mb-2\">\n        <h3>{componentType}</h3>\n        {componentType !== \"Transform\" && (\n          <small\n            className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n            onClick={() => {\n              loadScript(componentType)\n            }}\n          >\n            Open in editor\n          </small>\n        )}\n      </div>\n      <div className=\"space-y-2\">\n        {Object.entries(componentProps).map(([fieldName, fieldValue]) => (\n          <div key={fieldName} className=\"flex space-x-2\">\n            <p\n              className=\"text-xs capitalize text-gray-200\"\n              style={{ minWidth: \"10ch\" }}\n            >\n              {fieldName}\n            </p>\n            <ComponentFieldValue\n              field={fieldValue}\n              updateField={(e) => updateComponent(componentType, fieldName, e)}\n            />\n          </div>\n        ))}\n      </div>\n      <hr className=\"mt-4\" />\n    </div>\n  )\n}\n\nexport default ComponentNode\n","import { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport ComponentManager from \"../../../engine/core/ComponentManager\"\nimport context from \"../../../engine/core/EngineContext\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport ComponentNode from \"./ComponentNode\"\n\nexport default function InspectorPanel() {\n  const { isRunning } = useEditor()\n  const { selectedEntity, updateEntity, sceneConfig } = useScene()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n  >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material)\n    setGeometryType(selectedEntity.geometry)\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): { label: string; value: string }[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const getMaterialOptions = (): { label: string; value: string }[] => {\n    return Object.keys(context.materialManager.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n  \n  const materialOptions: { label: string; value: string }[] = getMaterialOptions();\n  // const materialOptions: { label: string; value: string }[] = [\n  //   {\n  //     label: \"Normal\",\n  //     value: \"normal\",\n  //   },\n  //   {\n  //     label: \"Basic\",\n  //     value: \"basic\",\n  //   },\n  //   {\n  //     label: \"Lambert\",\n  //     value: \"lambert\",\n  //   },\n  //   {\n  //     label: \"Phong\",\n  //     value: \"phong\",\n  //   },\n  //   {\n  //     label: \"Cool Material\",\n  //     value: \"coolMat\",\n  //   },\n  // ]\n\n  const geometryOptions: { label: string; value: string }[] = [\n    {\n      label: \"Box\",\n      value: \"box\",\n    },\n    {\n      label: \"Sphere\",\n      value: \"sphere\",\n    },\n    {\n      label: \"Torus\",\n      value: \"torus\",\n    },\n  ]\n\n  if (!selectedEntity) return <Panel label=\"Inspector\" />\n\n  return (\n    <Panel label=\"Inspector\">\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={type}\n            updateComponent={updateComponent}\n          />\n        ))}\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      <section>\n        <div className=\"bg-gray-800 text-white\">\n          <h3>Mesh</h3>\n          <div className=\"space-y-2\">\n            <div className=\"flex space-x-2 items-center\">\n              <p\n                className=\"text-xs font-mono text-gray-200\"\n                style={{ minWidth: \"10ch\" }}\n              >\n                Material\n              </p>\n              <select\n                onChange={(e) => updateMaterial(e.target.value)}\n                defaultValue={materialType}\n              >\n                {materialOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"flex space-x-2 items-center\">\n              <p\n                className=\"text-xs font-mono text-gray-200\"\n                style={{ minWidth: \"10ch\" }}\n              >\n                Geometry\n              </p>\n              <select\n                onChange={(e) => updateGeometry(e.target.value)}\n                value={geometryType}\n              >\n                {geometryOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Panel>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity, createMaterial } = useScene()\n  const { toggleRun, isRunning } = useEditor()\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n  return (\n    <div>\n      <header\n        className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`}\n      />\n      <nav className=\"bg-gray-900 p-2 flex w-full\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={createEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onClick={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n    `}\n      onClick={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.name)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {\n          sceneConfig.materials.map(material => (\n            <div key={material.id}>\n              {material.name}\n            </div>\n          ))\n        }\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import  { ReactElement } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\n\nexport default function BrowserEngine(): ReactElement {\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"1fr 14rem 14rem\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n        </div>\n        <aside className=\"grid grid-rows-5\">\n          <div className=\"row-span-3\">\n            <HierarchyPanel />\n          </div>\n          <div className=\"row-span-2\">\n            <ProjectPanel />\n          </div>\n        </aside>\n        <aside className=\"grid\">\n          <InspectorPanel />\n        </aside>\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}