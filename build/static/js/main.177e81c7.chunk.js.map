{"version":3,"sources":["engine/core/EngineContext.ts","engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","engine/core/MaterialManager.ts","engine/core/CameraManager.ts","utils/script.utils.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/core/ControlsManager.ts","engine/core/GeometryManager.ts","utils/entity.utils.ts","engine/core/Component.ts","utils/ScriptCompiler.ts","state/editor/EditorContext.tsx","state/scene/SceneContext.tsx","state/scripts/ScriptContext.tsx","state/scene/useScene.tsx","utils/ProjectExporter.ts","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/Panel.tsx","ui/panels/inspector/entity/useControlPanel.tsx","ui/panels/inspector/entity/CameraNode.tsx","ui/panels/inspector/entity/ComponentNode.tsx","ui/panels/inspector/entity/LightNode.tsx","ui/panels/inspector/EntityInspector.tsx","ui/panels/inspector/MaterialInspector.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","time","THREE","_renderElement","isInitialized","this","SceneManager","CameraManager","ComponentManager","MaterialManager","GeometryManager","ControlsManager","renderElement","payload","updateScenePayload","runEditMode","elapsedTime","start","runPlayScene","sceneCam","getScene","getObjectByName","useSceneCamera","setup","stop","runEditScene","useEditCamera","forInitialization","setScenePayload","materials","setSceneMaterials","entityID","entityProps","updateEntityPayload","entity","buildEntity","isPlaying","mouseX","mouseY","handleClick","selectByID","getSelectedEntity","getSelectedEntityPayload","Entity","props","id","name","type","components","mesh","light","camera","init","_initObject","_appendIdentifiers","_initComponents","_startComponents","deltaTime","_updateComponents","mat","material","uniforms","value","componentName","Object","values","forEach","component","update","entries","instance","setComponent","geometry","_initMesh","lightProps","_initLight","cameraProps","_initCamera","obj","getObject","visible","castShadow","receiveShadow","materialType","geometryType","getMaterial","getGeometry","cam","fov","aspect","getAspect","near","far","color","intensity","color2","createLight","downcastedLight","Color","groundColor","skyColor","object","uuid","_scene","_entities","_scenePayload","_scenePayloadInitialized","_selectedEntityID","_axes","_gridHelper","_cameraHelper","_selectionHelper","_lightHelpers","add","load","texture","rt","image","height","fromEquirectangularTexture","renderer","background","forInit","_compileMaterials","sceneConfig","entities","find","e","updateIndex","findIndex","setFromObject","helper","_resetScene","_hideHelpers","_buildScene","_startEntities","error","console","_showHelpers","undefined","lookAt","position","select","push","entityObject","target","some","pointLightHelper","remove","destroy","input","localPayloadCopy","JSON","parse","stringify","_buildEntities","log","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","dispose","Transform","_object","rotation","scale","applyMatrix","set","x","y","z","setRotationFromEuler","applyPosition","applyRotation","applyScale","Component","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","length","componentInstance","normal","basic","phong","lambert","wireframe","antialias","alpha","raycaster","editCamera","sceneCamera","currentControls","clock","window","innerWidth","innerHeight","_setCamera","addEventListener","handleResize","scene","appendChild","domElement","_setRenderer","_setControls","_setRaycaster","_runSceneLoop","pointer","setFromCamera","intersects","intersectObjects","children","filter","objectSelect","setAnimationLoop","setControls","setSize","clientWidth","clientHeight","toneMapping","toneMappingExposure","shadowMap","enabled","dimensions","getBoundingClientRect","w","offsetParent","width","h","updateProjectionMatrix","setPixelRatio","devicePixelRatio","render","getDelta","getElapsedTime","updateScene","updateControls","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","key","join","generateNewMaterial","_changeEvent","FlyControls","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","translateY","translateZ","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","matrix","isOrthographicCamera","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","passive","controls","_setFlyControls","_setOrbitControls","planeBufferGeometry","rotateX","geometries","box","sphere","cylinder","torus","plane","tetrahedron","octahedron","dodecahedron","icosahedron","generateNewEntity","generateNewLight","ScriptCompiler","CompileComponentScript","err","three","Instantiate","CreateEntity","Time","scriptCopy","removePrefix","substring","indexOf","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","initialValue","localScenePayload","EditorContext","createContext","EditorProvider","contextValue","useRef","useMemo","fromLocalStorage","localStorage","getItem","Provider","selectedEntityID","selectedMaterialID","setEntities","setSelectedEntityID","setSelectedMaterialID","materialID","setCameraProps","setMaterials","SceneContext","SceneProvider","useState","useEffect","updateSpecificEntity","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","val","ScriptProvider","CompileScripts","useScene","useContext","selectedEntity","selectedMaterial","createEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","child","newParent","createMaterial","materialName","updatedMaterialsObject","newMaterial","selectMaterial","_setEntities","_setMaterials","ProjectExporter","project","zip","JSZip","folder","file","generateHtmlFile","generateJsFile","generateAsync","then","saveAs","useScripts","_setScripts","loadScript","scriptName","foundScript","method","debug","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","_compileScripts","useEditor","rootHook","isRunning","setIsRunning","fromEntries","materialsPayload","m","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","saveScene","setItem","exportScene","Export","Panel","label","bodyClass","className","changingField","useControlPanel","folderName","changeProps","useControls","asEntries","fieldName","fieldValue","onEditStart","onChange","onEditEnd","actualControls","CameraNode","updateCameraProps","updatedCameraProps","ComponentNode","updateComponent","LightNode","updateLightProps","updatedLightProps","EntityInspector","setMaterialType","setGeometryType","propFields","updateComponentFields","field","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","geometryOptions","defaultValue","onBlur","newName","disabled","blur","checked","updatedProps","componentScriptID","fill","flat","titleBar","onClick","getComponentProps","addComponent","option","newGeometry","MaterialInspector","InspectorPanel","Nav","newEntity","newLight","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","theme","newValue","defaultPath","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","isHidden","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","selectedSomething","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.177e81c7.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport CameraManager from \"./CameraManager\"\nimport ComponentManager from \"./ComponentManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport SceneManager from \"./SceneManager\"\n\nclass EngineContext {\n  sceneManager: SceneManager\n  cameraManager: CameraManager\n  componentManager: ComponentManager\n  materialManager: MaterialManager\n  geometryManager: GeometryManager\n  controlsManager: ControlsManager\n  time = new THREE.Clock()\n  private _renderElement!: HTMLElement\n  private isInitialized = false\n\n  constructor() {\n    this.sceneManager = new SceneManager()\n    this.cameraManager = new CameraManager()\n    this.componentManager = new ComponentManager()\n    this.materialManager = new MaterialManager()\n    this.geometryManager = new GeometryManager()\n    this.controlsManager = new ControlsManager()\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return\n    this._renderElement = renderElement\n    if (payload) this.updateScenePayload(payload, true)\n    this.runEditMode()\n    this.isInitialized = true\n  }\n\n  runPlayMode() {\n    this.time.elapsedTime = 0\n    this.time.start()\n    this.sceneManager.runPlayScene()\n    const sceneCam = this.sceneManager.getScene().getObjectByName(\"Main Camera\")\n    this.cameraManager.useSceneCamera(sceneCam as THREE.PerspectiveCamera)\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  runEditMode() {\n    this.time.stop()\n    this.sceneManager.runEditScene()\n    this.cameraManager.useEditCamera()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload, forInitialization = false) {\n    this.sceneManager.setScenePayload(payload, forInitialization)\n  }\n\n  updateSceneMaterials(materials: Engine.MaterialProps[]) {\n    this.sceneManager.setSceneMaterials(materials)\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps)\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity)\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY)\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID)\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity()\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload()\n  }\n}\n\nconst context = new EngineContext()\n\nexport default context\n","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport ComponentManager from \"./ComponentManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport SceneManager from \"./SceneManager\"\nimport { Color } from \"three\"\nimport CameraManager from \"./CameraManager\"\n\nexport default class Entity {\n  public readonly id: Engine.EntityID\n  public name: string = \"\"\n  public type: Engine.EntityType | undefined\n  public components: Record<Engine.ComponentType, Component> = {}\n  \n  // Based on \"type\", an entity either has a mesh, light, or camera.\n  private mesh: THREE.Mesh | undefined\n  private light: THREE.Light | undefined\n  private camera: THREE.Camera | undefined\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id\n    this.name = props.name\n    this.type = props.type\n    this.init(props)\n  }\n\n  public init(props: Engine.EntityProps) {\n    this._initObject(props)\n    this._appendIdentifiers(props.id, props.name)\n    this._initComponents(props.components)\n  }\n\n  public start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents()\n    }\n  }\n\n  public update(deltaTime: number, elapsedTime: number) {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents()\n    }\n\n    const mat = this?.mesh?.material as any\n    if (mat?.uniforms) {\n      mat.uniforms.time.value = elapsedTime\n    }\n  }\n\n  public destroy() {\n    // TODO: Implement\n  }\n\n  public getComponent(componentName: string): Component | undefined {\n    return this.components[componentName]\n  }\n\n  public getObject(): THREE.Object3D | undefined {\n    return this.mesh || this.light || this.camera\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n\n  private _initComponents(\n    components: Record<Engine.ComponentType, Engine.ComponentProps>\n  ) {\n    this.components = {}\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props)\n    })\n  }\n\n  private _initObject(props: Engine.EntityProps) {\n    if (props.type === \"basic\" && props.geometry && props.material) {\n      this._initMesh(props.material, props.geometry)\n    } else if (props.type === \"light\" && props.lightProps) {\n      this._initLight(props.lightProps)\n    } else if (props.type === \"camera\" && props.cameraProps) {\n      this._initCamera(props.cameraProps)\n    }\n    \n    const obj = this.getObject();\n    if (obj) {\n      obj.visible = props.visible;\n      obj.castShadow = props.castShadow;\n      obj.receiveShadow = props.receiveShadow;\n    }\n  }\n\n  private _initMesh(materialType: string, geometryType: string) {\n    const mat = MaterialManager.instance.getMaterial(materialType)\n    const geometry = GeometryManager.instance.getGeometry(geometryType)\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat)\n    } else {\n      this.mesh.geometry = geometry\n      this.mesh.material = mat\n    }\n  }\n\n  private _initCamera(cameraProps: Engine.CameraProps) {\n    if (!this.camera) {\n      this.camera = new THREE.PerspectiveCamera(\n        cameraProps.fov,\n        CameraManager.instance.getAspect(),\n        cameraProps.near,\n        cameraProps.far\n      )\n    } else {\n      const cam = this.camera as THREE.PerspectiveCamera;\n      cam.fov = cameraProps.fov\n      cam.aspect = CameraManager.instance.getAspect()\n      cam.near = cameraProps.near\n      cam.far = cameraProps.far\n    }\n  }\n\n  private _initLight(lightProps: Engine.LightProps) {\n    const createLight = (props: Engine.LightProps): THREE.Light => {\n      switch (props.type) {\n        case \"ambient\":\n          return new THREE.AmbientLight(props.color, props.intensity)\n        case \"directional\":\n          return new THREE.DirectionalLight(props.color, props.intensity)\n        case \"hemisphere\":\n          return new THREE.HemisphereLight(props.color, props.color2, props.intensity)\n        case \"point\":\n          return new THREE.PointLight(props.color, props.intensity)\n        default:\n          return new THREE.AmbientLight(props.color, props.intensity)\n      }\n    }\n    \n    if (!this.light) {\n      this.light = createLight(lightProps)\n    }\n    \n    this.light.intensity = lightProps.intensity\n    const downcastedLight = this.light as any\n\n    if (downcastedLight.color) {\n      downcastedLight.color = new Color(lightProps.color)\n    }\n    \n    else if (downcastedLight.groundColor) {\n      downcastedLight.groundColor = new Color(lightProps.color)\n    }\n\n    if (downcastedLight.skyColor && lightProps.color2) {\n      downcastedLight.skyColor = new Color(lightProps.color2)\n    }\n  }\n\n  private _appendIdentifiers(id: string, name: string) {\n    const object: THREE.Object3D | undefined = this.getObject()\n    if (!object) return\n    object.uuid = id\n    object.name = name\n  }\n}\n","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n  private _scenePayloadInitialized = false\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(1000, 200)\n  private _cameraHelper = new THREE.CameraHelper(new THREE.PerspectiveCamera())\n  private _selectionHelper!: THREE.BoxHelper\n  private _lightHelpers: THREE.PointLightHelper[] = []\n\n  constructor() {\n    if (SceneManager.instance) {\n      return SceneManager.instance\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    this._selectionHelper = new THREE.BoxHelper(this._gridHelper, 0xffff00)\n    this._scene.add(this._selectionHelper)\n    this._selectionHelper.visible = false\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload, forInit?: boolean) {\n    if (forInit && this._scenePayloadInitialized) return\n    this._scenePayload = payload\n    this._compileMaterials()\n    if (forInit) {\n      this._scenePayloadInitialized = true\n    }\n  }\n\n  setSceneMaterials(payload: Engine.MaterialProps[]) {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials = payload;\n    this._compileMaterials()\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    const object = this._entities[updateIndex].getObject()\n    if (object) {\n      if (object.type === \"Mesh\") {\n        this._selectionHelper?.setFromObject(object)\n      } else {\n        this._lightHelpers.forEach((helper) => {\n          helper.update()\n        })\n      }\n    }\n  }\n\n  updateScene(deltaTime: number, elapsedTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update(deltaTime, elapsedTime)\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._hideHelpers()\n    try {\n      // ControlsManager.instance.disableControls()\n      this._buildScene()\n      this._startEntities()\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    // ControlsManager.instance.enableControls()\n    this._showHelpers()\n    this._buildScene()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    const object = this._entities.find((e) => e.id === entityID)?.getObject() ?? undefined\n    if (object) ControlsManager.instance.lookAt(object.position)\n    this.select(object)\n  }\n\n  /** Sets Entity with corresponding object as selected,\n   *  if no object is passed, deselects any selected entity\n   * @param object THREE.Object3D\n   */\n  select(object?: THREE.Object3D) {\n    if (this.isPlaying) return\n    if (!object && this._selectionHelper?.visible && this._selectedEntityID) {\n      this._selectionHelper.visible = false\n      this._selectedEntityID = undefined\n      return\n    }\n\n    if (object) {\n      this._selectedEntityID = object.uuid\n      this._selectionHelper.setFromObject(object)\n      if (object.type === \"Mesh\") {\n        this._selectionHelper.visible = true\n      } else if (object.type === \"PerspectiveCamera\") {\n        this._cameraHelper.visible = true\n      }\n      return\n    }\n    this._cameraHelper.visible = false\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    const entityObject = entity.getObject()\n    if (entityObject) {\n      this._scene.add(entityObject)\n      if (entityObject.type === \"PointLight\" && !this.isPlaying) {\n        const previouslyMadeHelper = this._lightHelpers.some(\n          (helper) => helper.uuid === props.id\n        )\n        if (!previouslyMadeHelper) {\n          const sphereSize = 1\n          const pointLightHelper = new THREE.PointLightHelper(\n            entityObject as THREE.PointLight,\n            sphereSize\n          )\n          pointLightHelper.uuid = entityObject.uuid\n          this._scene.add(pointLightHelper)\n          this._lightHelpers.push(pointLightHelper)\n        }\n      } else if (entityObject.type === \"DirectionalLight\") {\n        const light = entityObject as any\n        this._scene.add(light.target)\n      } else if (entityObject.type === \"PerspectiveCamera\") {\n        this._cameraHelper = new THREE.CameraHelper(entityObject as THREE.Camera)\n        this._cameraHelper.uuid = entityObject.uuid\n        this._cameraHelper.visible = false\n        this._scene.add(this._cameraHelper)\n      }\n    }\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      const object = entity.getObject()\n      if (object) {\n        this._scene.remove(object)\n      }\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildScene() {\n    if (!this._scenePayload) return\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    this._buildEntities(localPayloadCopy.sceneConfig.entities)\n  }\n\n  private _buildEntities(entities: Engine.EntityProps[]) {\n    entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    console.log(\"Compiling materials\", this._scenePayload.sceneConfig.materials)\n\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n      \n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.Material = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n\n  private _hideHelpers() {\n    this._axes.visible = false\n    this._gridHelper.visible = false\n    this._cameraHelper.visible = false\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = false\n    }\n\n    this._lightHelpers.forEach((helper) => {\n      helper.dispose()\n      this._scene.remove(helper)\n    })\n    this._lightHelpers = []\n  }\n\n  private _showHelpers() {\n    this._axes.visible = true\n    this._gridHelper.visible = true\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = true\n    }\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}\n\nconst numberToHexadecimal = (value: number): Engine.Hexadecimal => {\n  return parseInt(`${value}`, 16);\n}\n\nexport const rgbToHexa = (r: number, g: number, b: number): Engine.Hexadecimal => {\n  const hexaR = numberToHexadecimal(r)\n  const hexaG = numberToHexadecimal(g)\n  const hexaB = numberToHexadecimal(b)\n  return parseInt(`0x${hexaR}${hexaG}${hexaB}`, 16)\n}","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport Entity from \"./Entity\"\ninterface ITransformProps {\n  position?: THREE.Vector3\n  rotation?: THREE.Euler\n  scale?: THREE.Vector3\n}\n\nexport default class Transform extends Component {\n  entity: Entity\n  _object: THREE.Object3D\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0)\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, \"XYZ\")\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1)\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity)\n    this.entity = entity\n    this._object = this.entity.getObject() as THREE.Object3D\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position\n    this.rotation = props?.rotation ?? this.rotation\n    this.scale = props?.scale ?? this.scale\n    this.applyMatrix()\n  }\n\n  start() {\n    this.applyMatrix()\n  }\n\n  private applyPosition() {\n    this._object.position.set(this.position.x, this.position.y, this.position.z)\n  }\n\n  private applyRotation() {\n    this._object.setRotationFromEuler(\n      new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z)\n    )\n  }\n\n  private applyScale() {\n    this._object.scale.set(this.scale.x, this.scale.y, this.scale.z)\n  }\n\n  private applyMatrix() {\n    if (!this.entity) {\n      return\n    }\n    this.applyPosition()\n    this.applyRotation()\n    this.applyScale()\n  }\n\n  update() {\n    this.applyMatrix()\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import * as THREE from \"three\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.Material): void {\n    console.log('adding custom material', materialPayload)\n    const mat = materialPayload.material\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: { ...mat.uniforms, time: { value: 0.0 } },\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private editCamera!: THREE.PerspectiveCamera\n  private sceneCamera: THREE.PerspectiveCamera | undefined\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this.editCamera = new THREE.PerspectiveCamera(\n      this.fov,\n      window.innerWidth / window.innerHeight,\n      this.near,\n      this.far\n    )\n    this._setCamera(this.editCamera)\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    this._setRenderer()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n    this.handleResize()\n  }\n\n  useSceneCamera(sceneCamera: THREE.PerspectiveCamera) {\n    this.sceneCamera = sceneCamera;\n    this._setCamera(this.sceneCamera)\n  }\n\n  useEditCamera() {\n    this._setCamera(this.editCamera)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster\n      .intersectObjects(SceneManager.instance.getScene().children, true)\n      .filter((e) => e.object.type === \"Mesh\" || e.object.type === \"PointLightHelper\")\n    if (intersects.length > 0) {\n      const objectSelect = intersects[0].object\n      if (objectSelect.type === \"Mesh\") {\n        SceneManager.instance.select(objectSelect)\n      } else if (objectSelect.type === \"PointLightHelper\") {\n        SceneManager.instance.selectByID(objectSelect.uuid)\n      }\n    } else {\n      SceneManager.instance.select()\n    }\n  }\n\n  private _setCamera(cam: THREE.PerspectiveCamera) {\n    this.camera = cam;\n    this.camera.position.y = 10\n    this.camera.rotation.x = -0.1\n    this.camera.position.z = 50\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  private _setRenderer() {\n    if (!this.renderElement) return\n    this.renderer.setSize(this.renderElement.clientWidth, this.renderElement.clientHeight)\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.renderer.toneMappingExposure = 2\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.BasicShadowMap\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n  }\n\n  getAspect() {\n    return this.camera.aspect\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    const w = this.renderElement?.offsetParent?.clientWidth ?? dimensions.width\n    const h = this.renderElement?.offsetParent?.clientHeight ?? dimensions.height\n    this.camera.aspect = w / h\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(w, h)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    const deltaTime = this.clock.getDelta()\n    const elapsedTime = this.clock.getElapsedTime()\n    SceneManager.instance.updateScene(deltaTime, elapsedTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import * as THREE from 'three';\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `uniform float time;\nuniform mat4 modelMatrix; // object.matrixWorld\nuniform mat4 modelViewMatrix; // camera.matrixWorld * object.matrixWorld\nuniform mat4 projectionMatrix; // camera.projectionMatrix\nuniform mat4 viewMatrix; // camera.matrixWorld\nuniform mat3 normalMatrix; // camera.matrixWorldInverse.transpose()\nuniform vec3 cameraPosition; // camera.position\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `uniform float time;\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n\nvoid main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.MaterialProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      )\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n        switch (event.code) {\n          case \"KeyW\":\n            dollyIn(0.3)\n            needsUpdate = true\n            break\n            case \"KeyS\":\n            dollyOut(0.3)\n            needsUpdate = true\n            break\n          case scope.keys.UP:\n          case \"Space\":\n            pan(0, scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.LEFT:\n          case \"KeyA\":\n            pan(scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n\n          case scope.keys.RIGHT || \"d\":\n          case \"KeyD\":\n            pan(-scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n          default:\n            break\n        }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(\n    type: Engine.ControlType,\n    camera: THREE.Camera,\n    domElement: HTMLElement\n  ) {\n    \n    if (this.controls) {\n      return;\n    }\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n  }\n\n  lookAt(target: THREE.Vector3) {\n    if (this.controls) {\n      // this.controls.target.copy(target)\n    }\n  }\n\n  enableControls() {\n    if (this.controls) this.controls.enabled = true\n  }\n\n  disableControls() {\n    if (this.controls) this.controls.enabled = false\n  }\n\n  _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false;\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\n\nconst planeBufferGeometry = new THREE.PlaneBufferGeometry(5, 5)\nplaneBufferGeometry.rotateX(-Math.PI / 2)\nplaneBufferGeometry.scale(5, 1, 5);\nexport default class GeometryManager {\n  public static instance: GeometryManager\n  geometries: Record<Engine.GeometryType, THREE.BufferGeometry> = {\n    box: new THREE.BoxBufferGeometry(),\n    sphere: new THREE.SphereBufferGeometry(1, 16, 16),\n    cylinder: new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1),\n    torus: new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3),\n    plane: planeBufferGeometry,\n    tetrahedron: new THREE.TetrahedronBufferGeometry(),\n    octahedron: new THREE.OctahedronBufferGeometry(),\n    dodecahedron: new THREE.DodecahedronBufferGeometry(),\n    icosahedron: new THREE.IcosahedronBufferGeometry(),\n  }\n\n  constructor() {\n    if (GeometryManager.instance) return\n    GeometryManager.instance = this\n  }\n\n  getGeometry(type: Engine.GeometryType): THREE.BufferGeometry {\n    return this.geometries[type] ?? this.geometries.box\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    type: \"basic\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    geometry: \"box\",\n    material: \"phong\",\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      },\n    },\n  }\n}\n\nexport const generateNewLight = (): Engine.EntityProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name: \"New Light\",\n    type: \"light\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 1, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 0.5, y: 0.5, z: 0.5 },\n      },\n    },\n    lightProps: {\n      intensity: 0.7,\n      type: \"point\",\n      color: \"rgb(255,255,0)\",\n    },\n  }\n}","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","/* eslint-disable no-eval */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as three from \"three\"\nimport Component from \"../engine/core/Component\"\nimport ComponentManager from \"../engine/core/ComponentManager\"\nimport context from \"../engine/core/EngineContext\"\nimport SceneManager from \"../engine/core/SceneManager\"\nimport { generateNewEntity } from \"./entity.utils\"\nimport { formatScriptString, injectInitSection } from \"./script.utils\"\n// Helper for script compilation\n\nexport default class ScriptCompiler {\n  public static CompileScripts(scripts: Engine.Script[]) {\n    \n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          ScriptCompiler.CompileComponentScript(script)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  private static CompileComponentScript(script: Engine.Script) {\n    // References to be used when running eval\n    const THREE = three\n    const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n    const CreateEntity = generateNewEntity\n    const Time = context.time;\n\n    const scriptCopy = `${script.content}`\n    const removePrefix = scriptCopy.substring(scriptCopy.indexOf(\"// <public>\") + 11)\n    let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n    pureProps = pureProps.replaceAll(\";\", \",\")\n    pureProps = pureProps.replaceAll(\"=\", \":\")\n    let props: Record<string, Engine.ComponentType> = {}\n    if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n      pureProps = `{${pureProps}}`\n      props = eval(`(${pureProps})`) // ! <-- Eval\n    }\n    let formattedScript = formatScriptString(script)\n    formattedScript = injectInitSection(formattedScript, props)\n    const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n    Object.setPrototypeOf(NewComponent, Component)\n    ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n  }\n}\n","import { ReactElement, useEffect, useMemo, useRef } from \"react\"\nimport { createContext } from \"react\"\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>\n  localScenePayload: Engine.ScenePayload | null\n}\n\nconst initialValue: IEditorContext = {\n  localScenePayload: null,\n}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue)\n\nexport const EditorProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  \n  const localScenePayload: Engine.ScenePayload | null = useMemo(() => {\n    const fromLocalStorage = localStorage.getItem(\"scenePayload\")\n    if (!fromLocalStorage) return null\n    return JSON.parse(fromLocalStorage)\n  }, [])\n\n  const contextValue = { renderElement, localScenePayload }\n\n  return <EditorContext.Provider value={contextValue}>{children}</EditorContext.Provider>\n}\n","import * as THREE from \"three\"\nimport { ReactElement, useEffect, useMemo } from \"react\"\nimport { createContext } from \"react\"\nimport { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport context from \"../../engine/core/EngineContext\"\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig\n  setEntities: (entities: Engine.EntityProps[]) => void\n  selectedEntityID: string | null\n  setSelectedEntityID: (entityID: Engine.EntityID | null) => void\n  selectedMaterialID: string | null\n  setSelectedMaterialID: (materialID: Engine.MaterialID | null) => void\n  materials: Record<string, Engine.MaterialProps>\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => void\n}\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType,\n    },\n    materials: [],\n  },\n  selectedEntityID: null,\n  selectedMaterialID: null,\n  setEntities: (entities: Engine.EntityProps[]) => {},\n  setSelectedEntityID: (entityID: string | null) => {},\n  setSelectedMaterialID: (materialID: string | null) => {},\n  setCameraProps: (cameraProps: Engine.CameraProps) => {},\n  materials: {},\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => {},\n}\n\nexport const SceneContext = createContext<ISceneContext>(initialValue)\n\nexport const SceneProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  // entities\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Main Camera\",\n      type: \"camera\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 5, z: -5 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      cameraProps: {\n        fov: 70,\n        near: 0.1,\n        far: 1000,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Ambient Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 6, y: 6, z: 6 },\n        },\n      },\n      lightProps: {\n        type: \"ambient\",\n        color: \"#ffffff\",\n        intensity: 0.4,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Directional Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 10, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      lightProps: {\n        type: \"directional\",\n        color: \"#ffffff\",\n        intensity: 0.1,\n      },\n    },\n\n    {\n      id: uuidv4(),\n      name: \"Plane\",\n      type: \"basic\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      material: \"phong\",\n      geometry: \"plane\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null)\n\n  // materials\n  const [selectedMaterialID, setSelectedMaterialID] = useState<string | null>(null)\n  const [materials, setMaterials] = useState<Record<string, Engine.MaterialProps>>(\n    {} as Record<string, Engine.MaterialProps>\n  )\n\n  const sceneConfig: Engine.SceneConfig = useMemo(\n    () => ({\n      entities,\n      materials: Object.values(materials),\n    }),\n    [entities, materials]\n  )\n\n  // useEffect(() => {\n  //   context.updateSceneMaterials(Object.values(materials))\n  // }, [materials])\n    \n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find((e) => e.id === selectedEntityID)\n      if (!entityProps) return\n      context.updateSpecificEntity(selectedEntityID, entityProps)\n    } \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    selectedMaterialID,\n    setEntities,\n    setSelectedEntityID,\n    setSelectedMaterialID,\n    materials,\n    setMaterials,\n  }\n  return <SceneContext.Provider value={contextValue}>{children}</SceneContext.Provider>\n}\n","import {  ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\n\ninterface IScriptContext {\n  scripts: Record<Engine.ScriptID, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<Engine.ScriptID, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<Engine.ScriptID, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport let scriptBody = \"\"\nexport const setScriptBody = (val: string) => {\n  scriptBody = val\n}\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<Engine.ScriptID, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n\n  const compileScripts = () => {\n    ScriptCompiler.CompileScripts(Object.values(scripts));\n  }\n\n  useEffect(() => {\n    compileScripts()\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport {  generateNewMaterial } from \"../../utils/script.utils\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n    selectedMaterialID,\n    setSelectedMaterialID,\n  } = useContext(SceneContext)\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedMaterialID(\"\")\n    setSelectedEntityID(id)\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const selectedMaterial: Engine.MaterialProps | null = useMemo(() => {\n    return sceneConfig.materials.find((e) => e.id === selectedMaterialID) ?? null\n  }, [sceneConfig, selectedMaterialID])\n  \n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = (entity: Engine.EntityProps) => {\n    setEntities([...sceneConfig.entities, entity])\n    context.addNewEntity(entity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID\n  ) => {\n    const updatedMaterialsObject = materials;\n    const newMaterial = generateNewMaterial(\n      materialName,\n      vertexShaderID,\n      fragmentShaderID\n    )\n    updatedMaterialsObject[materialName] = newMaterial;\n    setMaterials({...updatedMaterialsObject})\n  }\n\n  const selectMaterial = (materialID: Engine.MaterialID) => {\n    if (materialID === selectedMaterialID) {\n      setSelectedMaterialID(\"\")\n      return\n    }\n    setSelectedMaterialID(materialID)\n    setSelectedEntityID(\"\")\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    selectedMaterial,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n    selectMaterial,\n    _setEntities: setEntities,\n    _setMaterials: setMaterials,\n  }\n}\n\nexport default useScene\n","import JSZip from \"jszip\"\nimport { saveAs } from \"file-saver\"\n\nconst baseIndexHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"index.js\"></script>\n</body>\n</html>`\n\nconst baseIndexJS = `// import threejs from cdn\n//import * as THREE from 'three'\n\n`\n\nexport default class ProjectExporter {\n  static Export(project: Engine.ScenePayload) {\n    const zip = new JSZip()\n    const folder = zip.folder(\"project\")\n    folder?.file(\"scene.json\", JSON.stringify(project))\n    folder?.file(\"index.html\", ProjectExporter.generateHtmlFile(project))\n    folder?.file(\"index.js\", ProjectExporter.generateJsFile(project))\n    zip.generateAsync({ type: \"blob\" }).then((content) => {\n      saveAs(content, \"example.zip\")\n    })\n  }\n\n  private static generateHtmlFile(project: Engine.ScenePayload) {\n    const html = baseIndexHTML\n    return html\n  }\n\n  private static generateJsFile(project: Engine.ScenePayload) {\n    const js = baseIndexJS\n    return js\n  }\n}\n","import { useContext } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { scriptBody, ScriptContext, setScriptBody } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  } = useContext(ScriptContext)\n\n  const loadScript = (\n    scriptName: Engine.ScriptID | string,\n    method: \"name\" | \"id\" = \"id\"\n  ) => {\n    console.debug('loading script', scriptName, method, scripts)\n    let foundScript\n    if (method === \"id\") {\n      foundScript = scripts[scriptName]\n    } else if (method === \"name\") {\n      foundScript = Object.values(scripts).find((script) => script.name === scriptName)\n    }\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = []\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(\n        scriptPayload.name,\n        scriptPayload.language,\n        scriptPayload.type\n      )\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.id] = newScript\n    })\n\n    setScripts({ ...updatedScriptsObject })\n    return newScripts\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    _setScripts: setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n    _compileScripts :compileScripts,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport ProjectExporter from \"../../utils/ProjectExporter\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = (rootHook?: boolean) => {\n  const { scripts, _setScripts } = useScripts()\n  const { sceneConfig, selectEntity, _setEntities, _setMaterials } =\n    useScene()\n  const { renderElement, localScenePayload } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n  useEffect(() => {\n    if (!localScenePayload || !rootHook) return\n\n    const scriptsPayload = Object.fromEntries(\n      localScenePayload.scripts.map((s) => [s.id, s])\n    )\n\n    _setScripts(scriptsPayload)\n    ScriptCompiler.CompileScripts(localScenePayload.scripts)\n\n    _setEntities(localScenePayload.sceneConfig.entities)\n\n    const materialsPayload = Object.fromEntries(\n      localScenePayload.sceneConfig.materials.map((m) => [m.id, m])\n    )\n    _setMaterials(materialsPayload)\n\n    context.updateScenePayload(localScenePayload, true)\n  }, [_setEntities, _setMaterials, _setScripts, localScenePayload, rootHook])\n\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts }),\n    [sceneConfig, scripts]\n  )\n  \n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload || !rootHook)  {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderElement, rootHook])\n\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.updateScenePayload(scenePayload)\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus()\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  const exportScene = () => {\n    ProjectExporter.Export(scenePayload)\n  }\n\n  const saveScene = () => {\n    localStorage.setItem(\"scenePayload\", JSON.stringify(scenePayload))\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n    saveScene,\n    exportScene,\n  }\n}\n\nexport default useEditor\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","import { folder, useControls } from \"leva\";\nimport { v4 as uuidv4 } from \"uuid\"\n\nlet changingField = \"\";\n\nconst useControlPanel = (folderName: string, props: Record<string, unknown>, changeProps: (value: any, fieldName: string) => void) => {\n  useControls(() => {\n    const asEntries = Object.entries(props).map(([fieldName, fieldValue]) => {\n      const key = uuidv4()\n      return [\n        key,\n        {\n          value: fieldValue,\n          label: fieldName,\n          onEditStart: () => {\n            changingField = key\n          },\n          onChange: (value: any) => {\n            if (changingField === key) {\n              changeProps(value, fieldName)\n            }\n          },\n          onEditEnd: () => {\n            changingField = \"\"\n          },\n        },\n      ]\n    })\n    const actualControls = Object.fromEntries(asEntries)\n    return { [folderName]: folder(actualControls) }\n  });\n}\n\nexport default useControlPanel;","import { ReactElement } from \"react\"\nimport useControlPanel from \"./useControlPanel\"\ninterface Props {\n  cameraProps: Engine.CameraProps\n  updateCameraProps: (updated: Engine.CameraProps) => void\n}\n\nexport default function CameraNode({\n  cameraProps,\n  updateCameraProps,\n}: Props): ReactElement {\n\n  const setCameraProps = (value: any, fieldName: string) => {\n    const updatedCameraProps = {\n      ...cameraProps,\n    } as any\n    updatedCameraProps[fieldName] = value\n    updateCameraProps(updatedCameraProps)\n  }\n\n  useControlPanel('Camera', cameraProps as any, setCameraProps);\n  \n  return <></>\n}\n","import useControlPanel from \"./useControlPanel\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  componentScriptID: Engine.ScriptID\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n\n  const setComponentProps = (value: any, fieldName: string) => {\n    updateComponent(componentType, fieldName, value)\n  }\n\n  useControlPanel(componentType, componentProps as any, setComponentProps)\n  \n  return <></>\n}\n\nexport default ComponentNode\n","import { ReactElement } from \"react\"\nimport useControlPanel from \"./useControlPanel\"\n\ninterface Props {\n  lightProps: Engine.LightProps\n  updateLightProps: (updated: Engine.LightProps) => void\n}\n\nexport default function LightNode({ lightProps, updateLightProps }: Props): ReactElement {\n\n  const setLightProps = (value: any, fieldName: string) => {\n    const updatedLightProps = {\n      ...lightProps,\n    } as any\n    updatedLightProps[fieldName] = value\n    updateLightProps(updatedLightProps)\n  }\n  useControlPanel('Light', lightProps as any, setLightProps)\n  return <></>\n}\n","import { Leva } from \"leva\"\nimport { ReactElement, useEffect, useState } from \"react\"\nimport ComponentManager from \"../../../engine/core/ComponentManager\"\nimport GeometryManager from \"../../../engine/core/GeometryManager\"\nimport MaterialManager from \"../../../engine/core/MaterialManager\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport CameraNode from \"./entity/CameraNode\"\nimport ComponentNode from \"./entity/ComponentNode\"\nimport LightNode from \"./entity/LightNode\"\n\ninterface Props {\n  selectedEntity: Engine.EntityProps\n}\n\ninterface SelectOption {\n  label: string\n  value: string\n}\n\nexport default function EntityInspector({ selectedEntity }: Props): ReactElement {\n  const { updateEntity, sceneConfig } = useScene()\n  const { isRunning } = useEditor()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n  >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material ?? \"\")\n    setGeometryType(selectedEntity.geometry ?? \"\")\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const handleChangeName = (newName: string) => {\n    if (!selectedEntity || selectedEntity.type === \"camera\") return\n    updateEntity({ ...selectedEntity, name: newName })\n  }\n\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): SelectOption[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const updateLightProps = (updatedProps: Engine.LightProps) => {\n    if (selectedEntity) {\n      selectedEntity.lightProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateCameraProps = (updatedProps: Engine.CameraProps) => {\n    if (selectedEntity) {\n      selectedEntity.cameraProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const showShadowOptions = (): boolean => {\n    return !(\n      selectedEntity.type === \"light\" &&\n      selectedEntity.lightProps &&\n      selectedEntity.lightProps.type === \"ambient\"\n    )\n  }\n\n  // #region -- mesh --\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getMaterialOptions = (): SelectOption[] => {\n    return Object.keys(MaterialManager.instance.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n\n  const materialOptions: SelectOption[] = getMaterialOptions()\n\n  const getGeometryOptions = (): SelectOption[] => {\n    return Object.keys(GeometryManager.instance.geometries).map((geometry) => ({\n      label: geometry,\n      value: geometry,\n    }))\n  }\n\n  const geometryOptions: SelectOption[] = getGeometryOptions()\n  // #endregion\n\n  return (\n    <Panel label=\"Inspector\">\n      <h1>\n        <input\n          className=\"transition bg-gray-800 hover:bg-gray-700 focus:bg-gray-900\"\n          type=\"text\"\n          defaultValue={selectedEntity?.name}\n          key={selectedEntity?.id ?? \"\"}\n          onBlur={(e) => handleChangeName(e.target.value)}\n          disabled={selectedEntity?.type === \"camera\"}\n          // @ts-ignore\n          onKeyDown={(e) => e.key === \"Enter\" && e.target.blur()}\n        />\n      </h1>\n      <section className=\"space-y-2 py-2\">\n        <div className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Visible</p>\n          <input\n            type=\"checkbox\"\n            checked={selectedEntity.visible}\n            onChange={(e) =>\n              updateEntity({ ...selectedEntity, visible: e.target.checked })\n            }\n          />\n        </div>\n        {showShadowOptions() && (\n          <>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Cast shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.castShadow}\n                onChange={(e) =>\n                  updateEntity({ ...selectedEntity, castShadow: e.target.checked })\n                }\n              />\n            </div>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Receive shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.receiveShadow}\n                onChange={(e) =>\n                  updateEntity({\n                    ...selectedEntity,\n                    castShadow: e.target.checked,\n                  })\n                }\n              />\n            </div>\n          </>\n        )}\n      </section>\n\n      {/* Light */}\n      {selectedEntity.type === \"light\" && selectedEntity.lightProps && (\n        <LightNode\n          lightProps={selectedEntity.lightProps}\n          updateLightProps={updateLightProps}\n          key={selectedEntity.id}\n        />\n      )}\n\n      {/* Camera */}\n      {selectedEntity.type === \"camera\" && selectedEntity.cameraProps && (\n        <CameraNode\n          cameraProps={selectedEntity.cameraProps}\n          updateCameraProps={updateCameraProps}\n        />\n      )}\n\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={`${type}--${selectedEntity.id}`}\n            componentScriptID={\"\"}\n            updateComponent={updateComponent}\n          />\n        ))}\n        <Leva fill flat titleBar={false} />\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      {selectedEntity.type === \"basic\" && (\n        <section>\n          <div className=\"bg-gray-800 text-white\">\n            <h3>Mesh</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Material</p>\n                <select\n                  onChange={(e) => updateMaterial(e.target.value)}\n                  value={materialType}\n                >\n                  {materialOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Geometry</p>\n                <select\n                  onChange={(e) => updateGeometry(e.target.value)}\n                  value={geometryType}\n                >\n                  {geometryOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n    </Panel>\n  )\n}\n","import { ReactElement } from 'react'\nimport useScripts from '../../../state/scripts/useScripts'\nimport Panel from '../Panel'\n\ninterface Props {\n  selectedMaterial: Engine.MaterialProps\n}\n\nexport default function MaterialInspector({ selectedMaterial }: Props): ReactElement {\n  const { loadScript } = useScripts()\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedMaterial.name}</h1>\n      <section>\n        Fragment shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.fragmentShaderID)\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n      <section>\n        Vertex shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.vertexShaderID)\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n    </Panel>\n  )\n}\n","import useScene from \"../../../state/scene/useScene\"\nimport EntityInspector from \"./EntityInspector\"\nimport MaterialInspector from \"./MaterialInspector\"\n\nexport default function InspectorPanel() {\n  const { selectedEntity, selectedMaterial} = useScene()\n  \n  if (selectedMaterial) return (\n    <MaterialInspector selectedMaterial={selectedMaterial} />\n  )\n  else if (selectedEntity) return (\n    <EntityInspector selectedEntity={selectedEntity} />\n  )\n  else return <></>\n\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport { generateNewEntity, generateNewLight } from \"../../../utils/entity.utils\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity,  createMaterial } = useScene()\n  const { toggleRun, isRunning, saveScene, exportScene } = useEditor(true)\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleCreateEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    createEntity(newEntity);\n  }\n\n  const handleCreateLight = () => {\n    const newLight: Engine.EntityProps = generateNewLight()\n    createEntity(newLight)\n  }\n\n  const handleSaveScene = () => {\n    saveScene();\n  }\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n\n  const handleExportScene = () => {\n    exportScene();\n  }\n  \n  return (\n    <div>\n      <header className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`} />\n      <nav className=\"bg-gray-900 p-2 flex w-full shadow-sm\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={handleCreateEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateLight} className=\"secondary\">\n            Add Light\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n          {/* save scene button */}\n          <button onClick={handleSaveScene} className=\"secondary\">\n            Save Scene\n          </button>\n          <button onClick={handleExportScene} className=\"secondary\">\n            Export Scene\n          </button>\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n              defaultPath=\"/src/modal\"\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onMouseDown={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  const isHidden = useMemo(() => !entity.visible, [entity])\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n          ${isHidden && \"opacity-50\"}\n\n    `}\n      onMouseDown={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig, selectedMaterial, selectMaterial } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.id)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {sceneConfig.materials.map((material) => (\n          <div\n            key={material.id}\n            className={`project-node ${\n              selectedMaterial?.id === material.id && \"bg-gray-500\"\n            }\n          ${\n            selectedMaterial?.id === material.id\n              ? \"hover:bg-gray-600\"\n              : \"hover:bg-gray-500\"\n              }`}\n            onClick={() => selectMaterial(material.id)}\n          >\n            {material.name}\n          </div>\n        ))}\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\nimport useScene from \"../../state/scene/useScene\"\n\nexport default function BrowserEngine(): ReactElement {\n  const { selectedEntity, selectedMaterial } = useScene()\n  const selectedSomething: boolean = useMemo(\n    () => !!selectedEntity || !!selectedMaterial,\n    [selectedEntity, selectedMaterial]\n  )\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"80vw 1fr\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n          {/* <div className=\"absolute inset-0 bg-red-200 border-2 border-green-500\"></div> */}\n        </div>\n        {selectedSomething ? (\n          <aside className=\"grid\">\n            <InspectorPanel />\n          </aside>\n        ) : (\n          <aside className=\"grid grid-rows-5\">\n            <div className=\"row-span-3\">\n              <HierarchyPanel />\n            </div>\n            <div className=\"row-span-2\">\n              <ProjectPanel />\n            </div>\n          </aside>\n        )}\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}