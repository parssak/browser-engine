{"version":3,"sources":["engine/core/EngineContext.ts","engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","engine/core/MaterialManager.ts","utils/script.utils.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/core/ControlsManager.ts","engine/core/GeometryManager.ts","utils/entity.utils.ts","engine/core/CameraManager.ts","engine/core/Component.ts","utils/ScriptCompiler.ts","state/editor/EditorContext.tsx","state/scene/SceneContext.tsx","state/scripts/ScriptContext.tsx","state/scene/useScene.tsx","ui/panels/Panel.tsx","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/inspector/entity/ComponentFieldValue.tsx","ui/panels/inspector/entity/ComponentNode.tsx","ui/panels/inspector/entity/LightNode.tsx","ui/panels/inspector/EntityInspector.tsx","ui/panels/inspector/MaterialInspector.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","time","THREE","_renderElement","isInitialized","this","SceneManager","CameraManager","ComponentManager","MaterialManager","GeometryManager","ControlsManager","renderElement","payload","updateScenePayload","runEditMode","elapsedTime","start","runPlayScene","setup","getScene","stop","runEditScene","setScenePayload","entityID","entityProps","updateEntityPayload","entity","buildEntity","isPlaying","mouseX","mouseY","handleClick","selectByID","getSelectedEntity","getSelectedEntityPayload","Entity","props","name","type","mesh","light","id","components","init","_initObject","_appendIdentifiers","_initComponents","_startComponents","deltaTime","_updateComponents","mat","material","uniforms","value","componentName","Object","values","forEach","component","update","entries","instance","setComponent","geometry","_initMesh","lightProps","_initLight","materialType","geometryType","getMaterial","getGeometry","castShadow","receiveShadow","color","intensity","color2","createLight","downcastedLight","Color","groundColor","skyColor","object","getObject","uuid","_scene","_entities","_scenePayload","_selectedEntityID","_axes","_gridHelper","_selectionHelper","_lightHelpers","add","visible","load","texture","rt","image","height","fromEquirectangularTexture","renderer","background","_compileMaterials","sceneConfig","entities","find","e","updateIndex","findIndex","setFromObject","helper","_resetScene","_hideHelpers","_buildScene","_startEntities","error","console","_showHelpers","undefined","lookAt","position","select","push","entityObject","target","some","pointLightHelper","remove","destroy","input","localPayloadCopy","JSON","parse","stringify","_buildEntities","materials","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","dispose","Transform","_object","rotation","scale","applyMatrix","set","x","y","z","setRotationFromEuler","applyPosition","applyRotation","applyScale","Component","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","length","componentInstance","normal","basic","phong","lambert","wireframe","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","key","join","generateNewMaterial","_changeEvent","FlyControls","domElement","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","translateY","translateZ","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","window","innerWidth","innerHeight","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","addEventListener","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","enabled","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","updateProjectionMatrix","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","pointer","passive","controls","camera","_setFlyControls","_setOrbitControls","planeBufferGeometry","rotateX","geometries","box","sphere","cylinder","torus","plane","tetrahedron","octahedron","dodecahedron","icosahedron","generateNewEntity","children","generateNewLight","antialias","alpha","raycaster","near","far","currentControls","clock","_setCamera","handleResize","scene","setSize","appendChild","toneMapping","toneMappingExposure","shadowMap","_setControls","_setRaycaster","_runSceneLoop","setFromCamera","intersects","intersectObjects","filter","objectSelect","debug","setAnimationLoop","setControls","dimensions","getBoundingClientRect","aspect","width","setPixelRatio","devicePixelRatio","render","getDelta","getElapsedTime","updateScene","updateControls","ScriptCompiler","CompileComponentScript","err","three","Instantiate","CreateEntity","Time","scriptCopy","removePrefix","substring","indexOf","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","initialValue","EditorContext","createContext","EditorProvider","contextValue","useRef","Provider","selectedEntityID","selectedMaterialID","setEntities","setSelectedEntityID","setSelectedMaterialID","materialID","setCameraProps","cameraProps","setMaterials","SceneContext","SceneProvider","useState","useMemo","useEffect","updateSpecificEntity","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","val","ScriptProvider","CompileScripts","useScene","useContext","selectedEntity","selectedMaterial","createEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","child","newParent","createMaterial","materialName","updatedMaterialsObject","newMaterial","selectMaterial","Panel","label","bodyClass","className","useScripts","loadScript","scriptName","foundScript","method","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","useEditor","isRunning","setIsRunning","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","ComponentFieldValue","field","updateField","onChange","Number","ComponentNode","updateComponent","onClick","fieldName","fieldValue","LightNode","updateLightProps","setLightProps","updatedLightProps","getHexString","EntityInspector","setMaterialType","setGeometryType","propFields","updateComponentFields","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","geometryOptions","defaultValue","onBlur","newName","blur","componentScriptID","log","getComponentProps","addComponent","option","newGeometry","updatedProps","MaterialInspector","InspectorPanel","Nav","newEntity","newLight","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","theme","newValue","defaultPath","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da00ed67.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport CameraManager from \"./CameraManager\"\nimport ComponentManager from \"./ComponentManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport SceneManager from \"./SceneManager\"\n\nclass EngineContext {\n  sceneManager: SceneManager\n  cameraManager: CameraManager\n  componentManager: ComponentManager\n  materialManager: MaterialManager\n  geometryManager: GeometryManager\n  controlsManager: ControlsManager\n  time = new THREE.Clock()\n  private _renderElement!: HTMLElement\n  private isInitialized = false\n\n  constructor() {\n    this.sceneManager = new SceneManager()\n    this.cameraManager = new CameraManager()\n    this.componentManager = new ComponentManager()\n    this.materialManager = new MaterialManager()\n    this.geometryManager = new GeometryManager()\n    this.controlsManager = new ControlsManager()\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return\n    this._renderElement = renderElement\n    if (payload) this.updateScenePayload(payload)\n    this.runEditMode()\n    this.isInitialized = true\n  }\n\n  runPlayMode() {\n    this.time.elapsedTime = 0\n    this.time.start()\n    this.sceneManager.runPlayScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  runEditMode() {\n    this.time.stop()\n    this.sceneManager.runEditScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload) {\n    this.sceneManager.setScenePayload(payload)\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps)\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity)\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY)\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID)\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity()\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload()\n  }\n}\n\nconst context = new EngineContext()\n\nexport default context\n","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport ComponentManager from \"./ComponentManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport SceneManager from \"./SceneManager\"\nimport { Color } from \"three\"\n\nexport default class Entity {\n  public name: string = \"\"\n  public type: Engine.EntityType | undefined\n  public mesh: THREE.Mesh | undefined\n  public light: THREE.Light | undefined\n  public readonly id: Engine.EntityID\n  public components: Record<Engine.ComponentType, Component> = {}\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id\n    this.name = props.name\n    this.init(props)\n  }\n\n  public init(props: Engine.EntityProps) {\n    this._initObject(props)\n    this._appendIdentifiers(props.id, props.name)\n    this._initComponents(props.components)\n  }\n\n  public start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents()\n    }\n  }\n\n  public update(deltaTime: number, elapsedTime: number) {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents()\n    }\n\n    const mat = this?.mesh?.material as any\n    if (mat?.uniforms) {\n      mat.uniforms.time.value = elapsedTime\n    }\n  }\n\n  // TODO: Implement\n  public destroy() {}\n\n  public getComponent(componentName: string): Component | undefined {\n    return this.components[componentName]\n  }\n\n  public getObject(): THREE.Object3D | undefined {\n    if (this.mesh) return this.mesh\n    else if (this.light) return this.light\n    return undefined\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n\n  private _initComponents(\n    components: Record<Engine.ComponentType, Engine.ComponentProps>\n  ) {\n    this.components = {}\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props)\n    })\n  }\n\n  private _initObject(props: Engine.EntityProps) {\n    if (props.type === \"basic\" && props.geometry && props.material) {\n      this._initMesh(props.material, props.geometry)\n    } else if (props.type === \"light\" && props.lightProps) {\n      this._initLight(props.lightProps)\n    }\n  }\n\n  private _initMesh(materialType: string, geometryType: string) {\n    const mat = MaterialManager.instance.getMaterial(materialType)\n    const geometry = GeometryManager.instance.getGeometry(geometryType)\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat)\n      this.mesh.castShadow = true\n      this.mesh.receiveShadow = true\n    } else {\n      this.mesh.geometry = geometry\n      this.mesh.material = mat\n    }\n  }\n\n  private _initLight(lightProps: Engine.LightProps) {\n    const createLight = (props: Engine.LightProps): THREE.Light => {\n      switch (props.type) {\n        case \"ambient\":\n          return new THREE.AmbientLight(props.color, props.intensity)\n        case \"directional\":\n          return new THREE.DirectionalLight(props.color, props.intensity)\n        case \"hemisphere\":\n          return new THREE.HemisphereLight(props.color, props.color2, props.intensity)\n        case \"point\":\n          return new THREE.PointLight(props.color, props.intensity)\n        default:\n          return new THREE.AmbientLight(props.color, props.intensity)\n      }\n    }\n    \n    if (!this.light) {\n      this.light = createLight(lightProps)\n    }\n\n    this.light.castShadow = true\n    \n    this.light.intensity = lightProps.intensity\n    const downcastedLight = this.light as any\n\n    if (downcastedLight.color) {\n      downcastedLight.color = new Color(lightProps.color)\n    }\n    \n    else if (downcastedLight.groundColor) {\n      downcastedLight.groundColor = new Color(lightProps.color)\n    }\n\n    if (downcastedLight.skyColor && lightProps.color2) {\n      downcastedLight.skyColor = new Color(lightProps.color2)\n    }\n  }\n\n  private _appendIdentifiers(id: string, name: string) {\n    const object: THREE.Object3D | undefined = this.getObject()\n    if (!object) return\n    object.uuid = id\n    object.name = name\n  }\n}\n","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(60, 6)\n  private _selectionHelper!: THREE.BoxHelper\n  private _lightHelpers: THREE.PointLightHelper[] = []\n\n  constructor() {\n    if (SceneManager.instance) {\n      return SceneManager.instance\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    this._selectionHelper = new THREE.BoxHelper(this._gridHelper, 0xffff00)\n    this._scene.add(this._selectionHelper)\n    this._selectionHelper.visible = false\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload) {\n    let shouldRecompileMaterials = true\n    // TODO: Optimize this so materials aren't over-compiled\n    this._scenePayload = payload\n    if (shouldRecompileMaterials) {\n      this._compileMaterials()\n    }\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    const object = this._entities[updateIndex].getObject()\n    if (object) {\n      if (object.type === \"Mesh\") {\n        this._selectionHelper?.setFromObject(object)\n      } else {\n        this._lightHelpers.forEach((helper) => {\n          helper.update()\n        })\n      }\n    }\n  }\n\n  updateScene(deltaTime: number, elapsedTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update(deltaTime, elapsedTime)\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._hideHelpers()\n    try {\n      // ControlsManager.instance.disableControls()\n      this._buildScene()\n      this._startEntities()\n\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    // ControlsManager.instance.enableControls()\n    this._showHelpers()\n    this._buildScene()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    const object = this._entities.find((e) => e.id === entityID)?.getObject() ?? undefined\n    if (object) ControlsManager.instance.lookAt(object.position)\n    this.select(object)\n  }\n\n  /** Sets Entity with corresponding object as selected,\n   *  if no object is passed, deselects any selected entity\n   * @param object THREE.Object3D\n   */\n  select(object?: THREE.Object3D) {\n    if (this.isPlaying) return\n    if (!object && this._selectionHelper?.visible && this._selectedEntityID) {\n      this._selectionHelper.visible = false\n      this._selectedEntityID = undefined\n      return\n    }\n\n    if (object) {\n      this._selectedEntityID = object.uuid\n      this._selectionHelper.setFromObject(object)\n      if (object.type === \"Mesh\") {\n        this._selectionHelper.visible = true\n      }\n    }\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    const entityObject = entity.getObject()\n    if (entityObject) {\n      this._scene.add(entityObject)\n      if (entityObject.type === \"PointLight\" && !this.isPlaying) {\n        const previouslyMadeHelper = this._lightHelpers.some(\n          (helper) => helper.uuid === props.id\n        )\n        if (!previouslyMadeHelper) {\n          const sphereSize = 1\n          const pointLightHelper = new THREE.PointLightHelper(\n            entityObject as THREE.PointLight,\n            sphereSize\n          )\n          pointLightHelper.uuid = entityObject.uuid\n          this._scene.add(pointLightHelper)\n          this._lightHelpers.push(pointLightHelper)\n        }\n      } else if (entityObject.type === \"DirectionalLight\") {\n        const light = entityObject as any;\n        this._scene.add(light.target)\n      }\n    }\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      const object = entity.getObject()\n      if (object) {\n        this._scene.remove(object)\n      }\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildScene() {\n    if (!this._scenePayload) return\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    this._buildEntities(localPayloadCopy.sceneConfig.entities)\n  }\n\n  private _buildEntities(entities: Engine.EntityProps[]) {\n    entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n\n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.Material = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n\n  private _hideHelpers() {\n    this._axes.visible = false\n    this._gridHelper.visible = false\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = false\n    }\n\n    this._lightHelpers.forEach((helper) => {\n      helper.dispose()\n      this._scene.remove(helper)\n    })\n    this._lightHelpers = []\n  }\n\n  private _showHelpers() {\n    this._axes.visible = true\n    this._gridHelper.visible = true\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = true\n    }\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}\n\nconst numberToHexadecimal = (value: number): Engine.Hexadecimal => {\n  return parseInt(`${value}`, 16);\n}\n\nexport const rgbToHexa = (r: number, g: number, b: number): Engine.Hexadecimal => {\n  const hexaR = numberToHexadecimal(r)\n  const hexaG = numberToHexadecimal(g)\n  const hexaB = numberToHexadecimal(b)\n  return parseInt(`0x${hexaR}${hexaG}${hexaB}`, 16)\n}","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport Entity from \"./Entity\"\ninterface ITransformProps {\n  position?: THREE.Vector3\n  rotation?: THREE.Euler\n  scale?: THREE.Vector3\n}\n\nexport default class Transform extends Component {\n  entity: Entity\n  _object: THREE.Object3D\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0)\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, \"XYZ\")\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1)\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity)\n    this.entity = entity\n    this._object = this.entity.getObject() as THREE.Object3D\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position\n    this.rotation = props?.rotation ?? this.rotation\n    this.scale = props?.scale ?? this.scale\n    this.applyMatrix()\n  }\n\n  start() {\n    this.applyMatrix()\n  }\n\n  private applyPosition() {\n    this._object.position.set(this.position.x, this.position.y, this.position.z)\n  }\n\n  private applyRotation() {\n    this._object.setRotationFromEuler(\n      new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z)\n    )\n  }\n\n  private applyScale() {\n    this._object.scale.set(this.scale.x, this.scale.y, this.scale.z)\n  }\n\n  private applyMatrix() {\n    if (!this.entity) {\n      return\n    }\n    this.applyPosition()\n    this.applyRotation()\n    this.applyScale()\n  }\n\n  update() {\n    this.applyMatrix()\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import * as THREE from \"three\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.Material): void {\n    const mat = materialPayload.material\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: { ...mat.uniforms, time: { value: 0.0 } },\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import * as THREE from 'three';\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.MaterialProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      )\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n        switch (event.code) {\n          case \"KeyW\":\n            dollyIn(0.3)\n            needsUpdate = true\n            break\n            case \"KeyS\":\n            dollyOut(0.3)\n            needsUpdate = true\n            break\n          case scope.keys.UP:\n          case \"Space\":\n            pan(0, scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.LEFT:\n          case \"KeyA\":\n            pan(scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n\n          case scope.keys.RIGHT || \"d\":\n          case \"KeyD\":\n            pan(-scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n          default:\n            break\n        }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(\n    type: Engine.ControlType,\n    camera: THREE.Camera,\n    domElement: HTMLElement\n  ) {\n    \n    if (this.controls) {\n      return;\n    }\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n  }\n\n  lookAt(target: THREE.Vector3) {\n    if (this.controls) {\n      // this.controls.target.copy(target)\n    }\n  }\n\n  enableControls() {\n    if (this.controls) this.controls.enabled = true\n  }\n\n  disableControls() {\n    if (this.controls) this.controls.enabled = false\n  }\n\n  _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false;\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\n\nconst planeBufferGeometry = new THREE.PlaneBufferGeometry(5, 5)\nplaneBufferGeometry.rotateX(-Math.PI / 2)\nplaneBufferGeometry.scale(5, 1, 5);\nexport default class GeometryManager {\n  public static instance: GeometryManager\n  geometries: Record<Engine.GeometryType, THREE.BufferGeometry> = {\n    box: new THREE.BoxBufferGeometry(),\n    sphere: new THREE.SphereBufferGeometry(1, 16, 16),\n    cylinder: new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1),\n    torus: new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3),\n    plane: planeBufferGeometry,\n    tetrahedron: new THREE.TetrahedronBufferGeometry(),\n    octahedron: new THREE.OctahedronBufferGeometry(),\n    dodecahedron: new THREE.DodecahedronBufferGeometry(),\n    icosahedron: new THREE.IcosahedronBufferGeometry(),\n  }\n\n  constructor() {\n    if (GeometryManager.instance) return\n    GeometryManager.instance = this\n  }\n\n  getGeometry(type: Engine.GeometryType): THREE.BufferGeometry {\n    return this.geometries[type] ?? this.geometries.box\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    geometry: 'box',\n    material: 'phong',\n    type: \"basic\",\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      }\n    },\n  };\n}\n\nexport const generateNewLight = (): Engine.EntityProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name: \"New Light\",\n    type: \"light\",\n    lightProps: {\n      intensity: 0.7,\n      type: \"point\",\n      color: \"rgb(255,255,0)\",\n    },\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 1, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 0.5, y: 0.5, z: 0.5 },\n      },\n    },\n  }\n}","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this._setCamera()\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderer.setSize(renderElement.clientWidth, renderElement.clientHeight)\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.renderer.toneMappingExposure = 2\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    \n    this.handleResize()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster\n      .intersectObjects(SceneManager.instance.getScene().children, true)\n      .filter(e => e.object.type === \"Mesh\" || e.object.type === \"PointLightHelper\")\n    if (intersects.length > 0) {\n      const objectSelect = intersects[0].object;\n      if (objectSelect.type === \"Mesh\") {\n        SceneManager.instance.select(objectSelect)\n      } else if (objectSelect.type === \"PointLightHelper\") {\n        SceneManager.instance.selectByID(objectSelect.uuid)\n      }\n    } else {\n      SceneManager.instance.select()\n    }\n  }\n\n  public lookAt(position: THREE.Vector3) {\n    console.debug('looking at', position)\n  }\n\n  private _setCamera() {\n    if (!this.renderElement) {\n      this.camera = new THREE.PerspectiveCamera(\n        this.fov,\n        window.innerWidth / window.innerHeight,\n        this.near,\n        this.far\n      )\n      this.camera.position.y = 10\n      this.camera.rotation.x = -0.1\n      this.camera.position.z = 50\n    }\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    this.camera.aspect = dimensions.width / dimensions.height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(dimensions.width, dimensions.height)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    // this.renderer.shadowMap.render([], SceneManager.instance.getScene(), this.camera)\n    const deltaTime = this.clock.getDelta()\n    const elapsedTime = this.clock.getElapsedTime()\n    SceneManager.instance.updateScene(deltaTime, elapsedTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","/* eslint-disable no-eval */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as three from \"three\"\nimport Component from \"../engine/core/Component\"\nimport ComponentManager from \"../engine/core/ComponentManager\"\nimport context from \"../engine/core/EngineContext\"\nimport SceneManager from \"../engine/core/SceneManager\"\nimport { generateNewEntity } from \"./entity.utils\"\nimport { formatScriptString, injectInitSection } from \"./script.utils\"\n// Helper for script compilation\n\nexport default class ScriptCompiler {\n  public static CompileScripts(scripts: Engine.Script[]) {\n    \n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          ScriptCompiler.CompileComponentScript(script)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  private static CompileComponentScript(script: Engine.Script) {\n    // References to be used when running eval\n    const THREE = three\n    const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n    const CreateEntity = generateNewEntity\n    const Time = context.time;\n\n    const scriptCopy = `${script.content}`\n    const removePrefix = scriptCopy.substring(scriptCopy.indexOf(\"// <public>\") + 11)\n    let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n    pureProps = pureProps.replaceAll(\";\", \",\")\n    pureProps = pureProps.replaceAll(\"=\", \":\")\n    let props: Record<string, Engine.ComponentType> = {}\n    if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n      pureProps = `{${pureProps}}`\n      props = eval(`(${pureProps})`) // ! <-- Eval\n    }\n    let formattedScript = formatScriptString(script)\n    formattedScript = injectInitSection(formattedScript, props)\n    const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n    Object.setPrototypeOf(NewComponent, Component)\n    ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n  }\n}\n","import { ReactElement, useEffect, useRef } from 'react';\nimport { createContext } from 'react';\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>;\n};\n\nconst initialValue: IEditorContext = {}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue);\n\nexport const EditorProvider = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  const contextValue = { renderElement };\n\n\n  return (\n    <EditorContext.Provider value={contextValue}>\n      {children}\n    </EditorContext.Provider>\n  );\n};","import * as THREE from \"three\"\nimport { ReactElement, useEffect, useMemo } from \"react\"\nimport { createContext } from \"react\"\nimport { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport context from \"../../engine/core/EngineContext\"\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig\n  setEntities: (entities: Engine.EntityProps[]) => void\n  selectedEntityID: string | null\n  setSelectedEntityID: (entityID: Engine.EntityID | null) => void\n  selectedMaterialID: string | null\n  setSelectedMaterialID: (materialID: Engine.MaterialID | null) => void\n  setCameraProps: (cameraProps: Engine.CameraProps) => void\n  materials: Record<string, Engine.MaterialProps>\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => void\n}\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType,\n    },\n    materials: [],\n  },\n  selectedEntityID: null,\n  selectedMaterialID: null,\n  setEntities: (entities: Engine.EntityProps[]) => {},\n  setSelectedEntityID: (entityID: string | null) => {},\n  setSelectedMaterialID: (materialID: string | null) => {},\n  setCameraProps: (cameraProps: Engine.CameraProps) => {},\n  materials: {},\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => {},\n}\n\nexport const SceneContext = createContext<ISceneContext>(initialValue)\n\nexport const SceneProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  // camera\n  const [cameraProps, setCameraProps] = useState<Engine.CameraProps>({\n    position: new THREE.Vector3(),\n    fov: 70,\n    near: 0.1,\n    far: 1000,\n    controls: \"orbit\" as Engine.ControlType,\n  })\n\n  // entities\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Ambient Light\",\n      type: \"light\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 6, y: 6, z: 6 },\n        },\n      },\n      lightProps: {\n        type: \"ambient\",\n        color: \"#ffffff\",\n        intensity: 0.4,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Directional Light\",\n      type: \"light\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 10, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      lightProps: {\n        type: \"directional\",\n        color: \"#ffffff\",\n        intensity: 0.1,\n      },\n    },\n    \n    {\n      id: uuidv4(),\n      name: \"Plane\",\n      type: \"basic\",\n      material: \"phong\",\n      geometry: \"plane\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null)\n\n  // materials\n  const [selectedMaterialID, setSelectedMaterialID] = useState<string | null>(null)\n  const [materials, setMaterials] = useState<Record<string, Engine.MaterialProps>>(\n    {} as Record<string, Engine.MaterialProps>\n  )\n\n  // lights\n  // const [lights, setLights] = useState<Engine.LightProps[]>([]);\n  // const [selectedLightID, setSelectedLightID] = useState<Engine.LightID | null>(null)\n\n  const sceneConfig: Engine.SceneConfig = useMemo(\n    () => ({\n      entities,\n      camera: cameraProps,\n      materials: Object.values(materials),\n    }),\n    [entities, cameraProps, materials]\n  )\n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find((e) => e.id === selectedEntityID)\n      if (!entityProps) return\n      context.updateSpecificEntity(selectedEntityID, entityProps)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    selectedMaterialID,\n    setEntities,\n    setCameraProps,\n    setSelectedEntityID,\n    setSelectedMaterialID,\n    materials,\n    setMaterials,\n  }\n  return <SceneContext.Provider value={contextValue}>{children}</SceneContext.Provider>\n}\n","import {  ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\n\ninterface IScriptContext {\n  scripts: Record<string, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<string, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<string, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport let scriptBody = \"\"\nexport const setScriptBody = (val: string) => {\n  scriptBody = val\n}\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<string, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n\n  const compileScripts = () => {\n    ScriptCompiler.CompileScripts(Object.values(scripts));\n  }\n\n  useEffect(() => {\n    compileScripts()\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport { generateNewEntity } from \"../../utils/entity.utils\"\nimport {  generateNewMaterial } from \"../../utils/script.utils\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n    selectedMaterialID,\n    setSelectedMaterialID,\n  } = useContext(SceneContext)\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedMaterialID(\"\")\n    setSelectedEntityID(id)\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const selectedMaterial: Engine.MaterialProps | null = useMemo(() => {\n    return sceneConfig.materials.find((e) => e.id === selectedMaterialID) ?? null\n  }, [sceneConfig, selectedMaterialID])\n  \n  // const selectedLight: Engine.LightProps | null = useMemo(() => {\n  //   return sceneConfig.lights.find((e) => e.id === selectedLightID) ?? null\n  // }, [sceneConfig, selectedLightID])\n\n  \n\n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = (entity: Engine.EntityProps) => {\n    setEntities([...sceneConfig.entities, entity])\n    context.addNewEntity(entity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID\n  ) => {\n    const updatedMaterialsObject = materials;\n    const newMaterial = generateNewMaterial(\n      materialName,\n      vertexShaderID,\n      fragmentShaderID\n    )\n    updatedMaterialsObject[materialName] = newMaterial;\n    setMaterials({...updatedMaterialsObject})\n  }\n\n  const selectMaterial = (materialID: Engine.MaterialID) => {\n    if (materialID === selectedMaterialID) {\n      setSelectedMaterialID(\"\")\n      return\n    }\n    setSelectedMaterialID(materialID)\n    setSelectedEntityID(\"\")\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    selectedMaterial,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n    selectMaterial,\n  }\n}\n\nexport default useScene\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","import { useContext } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { scriptBody, ScriptContext, setScriptBody } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n    // scriptBody,\n    // setScriptBody,\n  } = useContext(ScriptContext)\n\n  const loadScript = (\n    scriptName: string | Engine.ScriptID,\n    method: \"name\" | \"id\" = \"name\"\n  ) => {\n    let foundScript\n    if (method === \"name\") {\n      foundScript = scripts[scriptName]\n    } else if (method === \"id\") {\n      foundScript = Object.values(scripts).find((script) => script.id === scriptName)\n    }\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = []\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(\n        scriptPayload.name,\n        scriptPayload.language,\n        scriptPayload.type\n      )\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.name] = newScript\n    })\n\n    setScripts({ ...updatedScriptsObject })\n    return newScripts\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    // setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport { generateNewMaterial } from \"../../utils/script.utils\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = () => {\n  const { scripts } = useScripts()\n  const { sceneConfig, selectEntity } = useScene()\n  const { renderElement } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts }),\n    [sceneConfig, scripts]\n  )\n\n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload) {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n  }, [renderElement])\n\n  useEffect(() => {\n    context.updateScenePayload(scenePayload)\n  }, [scenePayload])\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus()\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n  }\n}\n\nexport default useEditor\n","interface Props {\n  field: Engine.ComponentPropType\n  updateField: (field: Engine.ComponentPropType) => void\n}\n\nconst ComponentFieldValue = ({ field, updateField }: Props): React.ReactElement => {\n  const handleUpdateField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof field === \"number\") {\n      updateField(Number(e.target.value))\n      return\n    }\n\n    if (typeof field === \"string\") {\n      updateField(e.target.value)\n    }\n  }\n\n  if (typeof field === \"number\" || typeof field === \"string\")\n    return (\n      <div className=\"bg-gray-700 text-white px-1  w-max\">\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={typeof field === \"number\" ? field : field}\n          onChange={handleUpdateField}\n          className=\"bg-gray-700 w-16 font-mono text-xs\"\n        />\n      </div>\n    )\n\n  if (Array.isArray(field)) return <div>array field</div>\n\n  return (\n    <div className=\"bg-gray-700 text-white px-2 grid grid-cols-3 gap-1\">\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">x:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.x}\n          onChange={(e) =>\n            updateField({\n              x: Number(e.target.value),\n              y: field?.y ?? 0,\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">y:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.y}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: Number(e.target.value),\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">z:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.z}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: field?.y ?? 0,\n              z: Number(e.target.value),\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n    </div>\n  )\n}\n\nexport default ComponentFieldValue\n","import useScripts from \"../../../../state/scripts/useScripts\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  componentScriptID: Engine.ScriptID\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n  const { loadScript } = useScripts()\n  return (\n    <div className=\"bg-gray-800 text-white pb-4\">\n      <div className=\"flex w-full justify-between items-center mb-2\">\n        <h3>{componentType}</h3>\n        {componentType !== \"Transform\" && (\n          <small\n            className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n            onClick={() => {\n              loadScript(componentType)\n            }}\n          >\n            Open in editor\n          </small>\n        )}\n      </div>\n      <div className=\"space-y-2\">\n        {Object.entries(componentProps).map(([fieldName, fieldValue]) => (\n          <div key={fieldName} className=\"flex space-x-2\">\n            <p className=\"inspector-field-label\">{fieldName}</p>\n            <ComponentFieldValue\n              field={fieldValue}\n              updateField={(e) => updateComponent(componentType, fieldName, e)}\n            />\n          </div>\n        ))}\n      </div>\n      <hr className=\"mt-4\" />\n    </div>\n  )\n}\n\nexport default ComponentNode\n","import { Color } from \"three\"\nimport { ReactElement } from \"react\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  lightProps: Engine.LightProps\n  updateLightProps: (updated: Engine.LightProps) => void\n}\n\nexport default function LightNode({ lightProps, updateLightProps }: Props): ReactElement {\n  const setLightProps = (value: any, fieldName: string) => {\n    const updatedLightProps = {\n      ...lightProps,\n    } as any\n    updatedLightProps[fieldName] = value\n    updateLightProps(updatedLightProps)\n  }\n\n  const colorToHexString = (color: string) => {\n    return `#${new Color(lightProps.color).getHexString()}`\n  }\n\n  return (\n    <>\n      <h3>Light</h3>\n      <div className=\"space-y-2 pt-2\">\n        <section className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Intensity</p>\n          <ComponentFieldValue\n            field={lightProps.intensity}\n            updateField={(e) => setLightProps(e, \"intensity\")}\n          />\n        </section>\n        <section className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Color</p>\n          <input\n            type=\"color\"\n            value={colorToHexString(lightProps.color as string)}\n            onChange={(e) => setLightProps(e.target.value, \"color\")}\n          />\n        </section>\n      </div>\n    </>\n  )\n}\n","import { ReactElement, useEffect, useState } from \"react\"\nimport ComponentManager from \"../../../engine/core/ComponentManager\"\nimport GeometryManager from \"../../../engine/core/GeometryManager\"\nimport MaterialManager from \"../../../engine/core/MaterialManager\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport ComponentNode from \"./entity/ComponentNode\"\nimport LightNode from \"./entity/LightNode\"\n\ninterface Props {\n  selectedEntity: Engine.EntityProps\n}\n\ninterface SelectOption {\n  label: string\n  value: string\n}\n\nexport default function EntityInspector({ selectedEntity }: Props): ReactElement {\n  const { updateEntity, sceneConfig } = useScene()\n  const { isRunning } = useEditor()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n  >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material ?? \"\")\n    setGeometryType(selectedEntity.geometry ?? \"\")\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const handleChangeName = (newName: string) => {\n    if (!selectedEntity) return\n    updateEntity({ ...selectedEntity, name: newName })\n  }\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): SelectOption[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const updateLightProps = (updatedProps: Engine.LightProps) => {\n    if (selectedEntity) {\n      selectedEntity.lightProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  // #region -- mesh --\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getMaterialOptions = (): SelectOption[] => {\n    return Object.keys(MaterialManager.instance.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n\n  const materialOptions: SelectOption[] = getMaterialOptions()\n\n  const getGeometryOptions = (): SelectOption[] => {\n    return Object.keys(GeometryManager.instance.geometries).map((geometry) => ({\n      label: geometry,\n      value: geometry,\n    }))\n  }\n\n  const geometryOptions: SelectOption[] = getGeometryOptions()\n  // #endregion\n\n  return (\n    <Panel label=\"Inspector\">\n      <h1>\n        <input\n          className=\"transition bg-gray-800 hover:bg-gray-700 focus:bg-gray-900\"\n          type=\"text\"\n          defaultValue={selectedEntity?.name}\n          key={selectedEntity?.id ?? ''}\n          onBlur={(e) => handleChangeName(e.target.value)}\n          // @ts-ignore\n          onKeyDown={(e) => e.key === \"Enter\" && e.target.blur()}\n        />\n      </h1>\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={type}\n            componentScriptID={\"\"}\n            updateComponent={updateComponent}\n          />\n        ))}\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      {selectedEntity.type === \"basic\" && (\n        <section>\n          <div className=\"bg-gray-800 text-white\">\n            <h3>Mesh</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Material</p>\n                <select\n                  onChange={(e) => updateMaterial(e.target.value)}\n                  value={materialType}\n                >\n                  {materialOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Geometry</p>\n                <select\n                  onChange={(e) => updateGeometry(e.target.value)}\n                  value={geometryType}\n                >\n                  {geometryOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Light */}\n      {selectedEntity.type === \"light\" && selectedEntity.lightProps && (\n        <LightNode\n          lightProps={selectedEntity.lightProps}\n          updateLightProps={updateLightProps}\n        />\n      )}\n    </Panel>\n  )\n}\n","import { ReactElement } from 'react'\nimport useScripts from '../../../state/scripts/useScripts'\nimport Panel from '../Panel'\n\ninterface Props {\n  selectedMaterial: Engine.MaterialProps\n}\n\nexport default function MaterialInspector({ selectedMaterial }: Props): ReactElement {\n  const { loadScript } = useScripts()\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedMaterial.name}</h1>\n      <section>\n        Fragment shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.fragmentShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n      <section>\n        Vertex shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.vertexShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n    </Panel>\n  )\n}\n","import useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport EntityInspector from \"./EntityInspector\"\nimport MaterialInspector from \"./MaterialInspector\"\n\nexport default function InspectorPanel() {\n  const { selectedEntity, selectedMaterial} = useScene()\n  \n  if (selectedMaterial) return (\n    <MaterialInspector selectedMaterial={selectedMaterial} />\n  )\n  else if (selectedEntity) return (\n    <EntityInspector selectedEntity={selectedEntity} />\n  )\n  else return <Panel label=\"Inspector\" />\n\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport { generateNewEntity, generateNewLight } from \"../../../utils/entity.utils\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity,  createMaterial } = useScene()\n  const { toggleRun, isRunning } = useEditor()\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleCreateEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    createEntity(newEntity);\n\n  }\n\n  const handleCreateLight = () => {\n    const newLight: Engine.EntityProps = generateNewLight()\n    createEntity(newLight)\n  }\n\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n  return (\n    <div>\n      <header className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`} />\n      <nav className=\"bg-gray-900 p-2 flex w-full\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={handleCreateEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateLight} className=\"secondary\">\n            Add Light\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n              defaultPath=\"/src/modal\"\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onClick={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n    `}\n      onClick={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig, selectedMaterial, selectMaterial } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.name)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {sceneConfig.materials.map((material) => (\n          <div\n            key={material.id}\n            className={`project-node ${\n              selectedMaterial?.id === material.id && \"bg-gray-500\"\n            }\n          ${\n            selectedMaterial?.id === material.id\n              ? \"hover:bg-gray-600\"\n              : \"hover:bg-gray-500\"\n              }`}\n            onClick={() => selectMaterial(material.id)}\n          >\n            {material.name}\n          </div>\n        ))}\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import  { ReactElement } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\n\nexport default function BrowserEngine(): ReactElement {\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"1fr 14rem 14rem\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n        </div>\n        <aside className=\"grid grid-rows-5\">\n          <div className=\"row-span-3\">\n            <HierarchyPanel />\n          </div>\n          <div className=\"row-span-2\">\n            <ProjectPanel />\n          </div>\n        </aside>\n        <aside className=\"grid\">\n          <InspectorPanel />\n        </aside>\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}