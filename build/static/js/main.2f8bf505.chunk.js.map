{"version":3,"sources":["engine/core/EngineContext.ts","engine/core/Entity.ts","engine/core/SceneManager.ts","utils/index.ts","engine/core/Transform.ts","engine/core/ComponentManager.ts","engine/core/MaterialManager.ts","engine/core/CameraManager.ts","utils/script.utils.ts","engine/controls/FlyControls.js","engine/controls/OrbitControls.js","engine/core/ControlsManager.ts","engine/core/GeometryManager.ts","utils/entity.utils.ts","engine/core/Component.ts","utils/ScriptCompiler.ts","state/editor/EditorContext.tsx","state/scene/SceneContext.tsx","state/scripts/ScriptContext.tsx","state/scene/useScene.tsx","ui/panels/Panel.tsx","state/scripts/useScripts.tsx","state/editor/useEditor.tsx","ui/panels/inspector/entity/ComponentFieldValue.tsx","ui/panels/inspector/entity/ComponentNode.tsx","ui/panels/inspector/entity/LightNode.tsx","ui/panels/inspector/EntityInspector.tsx","ui/panels/inspector/MaterialInspector.tsx","ui/panels/inspector/InspectorPanel.tsx","ui/panels/nav/Nav.tsx","ui/panels/editor/EditorPanel.tsx","ui/panels/scene/ScenePanel.tsx","ui/panels/hierarchy/HierarchyNode.tsx","ui/panels/hierarchy/HierarchyPanel.tsx","ui/panels/project/ProjectNode.tsx","ui/panels/project/ProjectPanel.tsx","ui/base/BrowserEngine.tsx","App.tsx","index.tsx"],"names":["context","sceneManager","cameraManager","componentManager","materialManager","geometryManager","controlsManager","time","THREE","_renderElement","isInitialized","this","SceneManager","CameraManager","ComponentManager","MaterialManager","GeometryManager","ControlsManager","renderElement","payload","updateScenePayload","runEditMode","elapsedTime","start","runPlayScene","setup","getScene","stop","runEditScene","forInitialization","setScenePayload","entityID","entityProps","updateEntityPayload","entity","buildEntity","isPlaying","mouseX","mouseY","handleClick","selectByID","getSelectedEntity","getSelectedEntityPayload","Entity","props","id","name","type","components","mesh","light","camera","init","_initObject","_appendIdentifiers","_initComponents","_startComponents","deltaTime","_updateComponents","mat","material","uniforms","value","componentName","Object","values","forEach","component","update","entries","instance","setComponent","geometry","_initMesh","lightProps","_initLight","cameraProps","_initCamera","obj","getObject","visible","castShadow","receiveShadow","materialType","geometryType","getMaterial","getGeometry","cam","fov","aspect","getAspect","near","far","color","intensity","color2","createLight","downcastedLight","Color","groundColor","skyColor","object","uuid","_scene","_entities","_scenePayload","_scenePayloadInitialized","_selectedEntityID","_axes","_gridHelper","_selectionHelper","_lightHelpers","add","load","texture","rt","image","height","fromEquirectangularTexture","renderer","background","forInit","_compileMaterials","sceneConfig","entities","find","e","updateIndex","findIndex","setFromObject","helper","_resetScene","_hideHelpers","_buildScene","_startEntities","error","console","_showHelpers","undefined","lookAt","position","select","push","entityObject","target","some","pointLightHelper","remove","destroy","input","localPayloadCopy","JSON","parse","stringify","_buildEntities","materials","associatedVertexShader","scripts","script","vertexShaderID","associatedFragmentShader","fragmentShaderID","materialPayload","vertexShader","content","fragmentShader","addCustomMaterial","dispose","Transform","_object","rotation","scale","applyMatrix","set","x","y","z","setRotationFromEuler","applyPosition","applyRotation","applyScale","Component","registerComponent","constructor","componentProps","componentType","getComponent","prop","Array","isArray","length","componentInstance","normal","basic","phong","lambert","wireframe","antialias","alpha","raycaster","currentControls","clock","_setCamera","window","addEventListener","handleResize","scene","setSize","clientWidth","clientHeight","appendChild","domElement","toneMapping","toneMappingExposure","shadowMap","enabled","_setControls","_setRaycaster","_runSceneLoop","pointer","setFromCamera","intersects","intersectObjects","children","filter","objectSelect","innerWidth","innerHeight","setAnimationLoop","setControls","dimensions","getBoundingClientRect","w","offsetParent","width","h","updateProjectionMatrix","setPixelRatio","devicePixelRatio","render","getDelta","getElapsedTime","updateScene","updateControls","COMPONENT_DEF","BASE_COMPONENT_SCRIPT_CONTENT","generateNewScript","language","uuidv4","initPropPlaceholder","formatScriptString","replace","injectInitSection","scriptBody","actualInitSection","map","key","join","generateNewMaterial","_changeEvent","FlyControls","warn","document","movementSpeed","rollSpeed","dragToLook","autoForward","scope","EPS","lastQuaternion","Quaternion","lastPosition","Vector3","tmpQuaternion","mouseStatus","moveState","up","down","left","right","forward","back","pitchUp","pitchDown","yawLeft","yawRight","rollLeft","rollRight","moveVector","rotationVector","keydown","event","altKey","code","movementSpeedMultiplier","updateMovementVector","updateRotationVector","keyup","mousedown","button","mousemove","container","getContainerDimensions","halfWidth","size","halfHeight","pageX","offset","pageY","mouseup","delta","moveMult","rotMult","translateX","translateY","translateZ","normalize","quaternion","multiply","distanceToSquared","dot","dispatchEvent","copy","offsetWidth","offsetHeight","offsetLeft","offsetTop","removeEventListener","contextmenu","_mousedown","_mousemove","_mouseup","_keydown","_keyup","bind","EventDispatcher","preventDefault","_startEvent","_endEvent","OrbitControls","style","touchAction","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","onKeyDown","saveState","reset","state","STATE","NONE","quat","setFromUnitVectors","quatInverse","invert","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","addScaledVector","panOffset","setFromSpherical","multiplyScalar","zoomChanged","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","matrix","isOrthographicCamera","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","handleMouseWheel","needsUpdate","activeElement","handleKeyDown","i","splice","passive","controls","_setFlyControls","_setOrbitControls","planeBufferGeometry","rotateX","geometries","box","sphere","cylinder","torus","plane","tetrahedron","octahedron","dodecahedron","icosahedron","generateNewEntity","generateNewLight","ScriptCompiler","CompileComponentScript","err","three","Instantiate","CreateEntity","Time","scriptCopy","removePrefix","substring","indexOf","pureProps","replaceAll","eval","formattedScript","NewComponent","setPrototypeOf","initialValue","localScenePayload","EditorContext","createContext","EditorProvider","contextValue","useRef","useMemo","fromLocalStorage","localStorage","getItem","Provider","selectedEntityID","selectedMaterialID","setEntities","setSelectedEntityID","setSelectedMaterialID","materialID","setCameraProps","setMaterials","SceneContext","SceneProvider","useState","useEffect","updateSpecificEntity","selectedScript","setScriptBody","setScripts","setSelectedScript","compileScripts","ScriptContext","val","ScriptProvider","CompileScripts","useScene","useContext","selectedEntity","selectedMaterial","createEntity","addNewEntity","selectEntity","updateEntity","index","updateEntityParent","child","newParent","createMaterial","materialName","updatedMaterialsObject","newMaterial","selectMaterial","_setEntities","_setMaterials","Panel","label","bodyClass","className","useScripts","_setScripts","loadScript","scriptName","foundScript","method","saveScript","s","createScript","scriptsPayload","newScripts","updatedScriptsObject","scriptPayload","newScript","_compileScripts","useEditor","rootHook","isRunning","setIsRunning","fromEntries","materialsPayload","m","scenePayload","current","toggleRun","runPlayMode","handleClickScene","canvas","focus","domRect","saveScene","setItem","ComponentFieldValue","field","updateField","onChange","Number","ComponentNode","updateComponent","onClick","fieldName","fieldValue","LightNode","updateLightProps","setLightProps","updatedLightProps","getHexString","EntityInspector","setMaterialType","setGeometryType","propFields","updateComponentFields","newControls","componentOptions","getComponents","currentComponents","c","includes","getComponentOptions","materialOptions","geometryOptions","defaultValue","onBlur","newName","blur","checked","componentScriptID","log","getComponentProps","addComponent","option","newGeometry","updatedProps","MaterialInspector","InspectorPanel","Nav","newEntity","newLight","vShader","fShader","EditorPanel","defaultLanguage","getLanguage","theme","newValue","defaultPath","ScenePanel","ref","tabIndex","HierarchyNode","isSelected","isHidden","stopPropagation","HierarchyPanel","ProjectNode","title","ProjectPanel","BrowserEngine","gridTemplateColumns","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f8bf505.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport CameraManager from \"./CameraManager\"\nimport ComponentManager from \"./ComponentManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport SceneManager from \"./SceneManager\"\n\nclass EngineContext {\n  sceneManager: SceneManager\n  cameraManager: CameraManager\n  componentManager: ComponentManager\n  materialManager: MaterialManager\n  geometryManager: GeometryManager\n  controlsManager: ControlsManager\n  time = new THREE.Clock()\n  private _renderElement!: HTMLElement\n  private isInitialized = false\n\n  constructor() {\n    this.sceneManager = new SceneManager()\n    this.cameraManager = new CameraManager()\n    this.componentManager = new ComponentManager()\n    this.materialManager = new MaterialManager()\n    this.geometryManager = new GeometryManager()\n    this.controlsManager = new ControlsManager()\n  }\n\n  init(renderElement: HTMLElement, payload?: Engine.ScenePayload) {\n    if (this.isInitialized) return\n    this._renderElement = renderElement\n    if (payload) this.updateScenePayload(payload, true)\n    this.runEditMode()\n    this.isInitialized = true\n  }\n\n  runPlayMode() {\n    this.time.elapsedTime = 0\n    this.time.start()\n    this.sceneManager.runPlayScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  runEditMode() {\n    this.time.stop()\n    this.sceneManager.runEditScene()\n    this.cameraManager.setup(this._renderElement, this.sceneManager.getScene())\n  }\n\n  updateScenePayload(payload: Engine.ScenePayload, forInitialization = false) {\n    this.sceneManager.setScenePayload(payload, forInitialization)\n  }\n\n  updateSpecificEntity(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    this.sceneManager.updateEntityPayload(entityID, entityProps)\n  }\n\n  addNewEntity(entity: Engine.EntityProps) {\n    this.sceneManager.buildEntity(entity)\n  }\n\n  isPlaying(): boolean {\n    return SceneManager.isPlaying() ?? false\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    this.cameraManager.handleClick(mouseX, mouseY)\n  }\n\n  selectEntity(entityID: Engine.EntityID) {\n    this.sceneManager.selectByID(entityID)\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this.sceneManager.getSelectedEntity()\n  }\n\n  getSelectedEntityProps(): Engine.EntityProps | undefined {\n    return this.sceneManager.getSelectedEntityPayload()\n  }\n}\n\nconst context = new EngineContext()\n\nexport default context\n","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport ComponentManager from \"./ComponentManager\"\nimport MaterialManager from \"./MaterialManager\"\nimport GeometryManager from \"./GeometryManager\"\nimport SceneManager from \"./SceneManager\"\nimport { Color } from \"three\"\nimport CameraManager from \"./CameraManager\"\n\nexport default class Entity {\n  public readonly id: Engine.EntityID\n  public name: string = \"\"\n  public type: Engine.EntityType | undefined\n  public components: Record<Engine.ComponentType, Component> = {}\n  \n  // Based on \"type\", an entity either has a mesh, light, or camera.\n  private mesh: THREE.Mesh | undefined\n  private light: THREE.Light | undefined\n  private camera: THREE.Camera | undefined\n\n  constructor(props: Engine.EntityProps) {\n    this.id = props.id\n    this.name = props.name\n    this.type = props.type\n    this.init(props)\n  }\n\n  public init(props: Engine.EntityProps) {\n    this._initObject(props)\n    this._appendIdentifiers(props.id, props.name)\n    this._initComponents(props.components)\n  }\n\n  public start() {\n    if (SceneManager.isPlaying()) {\n      this._startComponents()\n    }\n  }\n\n  public update(deltaTime: number, elapsedTime: number) {\n    if (SceneManager.isPlaying()) {\n      this._updateComponents()\n    }\n\n    const mat = this?.mesh?.material as any\n    if (mat?.uniforms) {\n      mat.uniforms.time.value = elapsedTime\n    }\n  }\n\n  public destroy() {\n    // TODO: Implement\n  }\n\n  public getComponent(componentName: string): Component | undefined {\n    return this.components[componentName]\n  }\n\n  public getObject(): THREE.Object3D | undefined {\n    return this.mesh || this.light || this.camera\n  }\n\n  private _startComponents() {\n    Object.values(this.components).forEach((component) => component.start())\n  }\n\n  private _updateComponents() {\n    Object.values(this.components).forEach((component) => component.update())\n  }\n\n  private _initComponents(\n    components: Record<Engine.ComponentType, Engine.ComponentProps>\n  ) {\n    this.components = {}\n    Object.entries(components).forEach(([type, props]) => {\n      ComponentManager.instance.setComponent(this, type, props)\n    })\n  }\n\n  private _initObject(props: Engine.EntityProps) {\n    if (props.type === \"basic\" && props.geometry && props.material) {\n      this._initMesh(props.material, props.geometry)\n    } else if (props.type === \"light\" && props.lightProps) {\n      this._initLight(props.lightProps)\n    } else if (props.type === \"camera\" && props.cameraProps) {\n      this._initCamera(props.cameraProps)\n    }\n    \n    const obj = this.getObject();\n    if (obj) {\n      obj.visible = props.visible;\n      obj.castShadow = props.castShadow;\n      obj.receiveShadow = props.receiveShadow;\n    }\n  }\n\n  private _initMesh(materialType: string, geometryType: string) {\n    const mat = MaterialManager.instance.getMaterial(materialType)\n    const geometry = GeometryManager.instance.getGeometry(geometryType)\n    if (!this.mesh) {\n      this.mesh = new THREE.Mesh(geometry, mat)\n    } else {\n      this.mesh.geometry = geometry\n      this.mesh.material = mat\n    }\n  }\n\n  private _initCamera(cameraProps: Engine.CameraProps) {\n    if (!this.camera) {\n      this.camera = new THREE.PerspectiveCamera(\n        cameraProps.fov,\n        CameraManager.instance.getAspect(),\n        cameraProps.near,\n        cameraProps.far\n      )\n    } else {\n      const cam = this.camera as THREE.PerspectiveCamera;\n      cam.fov = cameraProps.fov\n      cam.aspect = CameraManager.instance.getAspect()\n      cam.near = cameraProps.near\n      cam.far = cameraProps.far\n    }\n  }\n\n  private _initLight(lightProps: Engine.LightProps) {\n    const createLight = (props: Engine.LightProps): THREE.Light => {\n      switch (props.type) {\n        case \"ambient\":\n          return new THREE.AmbientLight(props.color, props.intensity)\n        case \"directional\":\n          return new THREE.DirectionalLight(props.color, props.intensity)\n        case \"hemisphere\":\n          return new THREE.HemisphereLight(props.color, props.color2, props.intensity)\n        case \"point\":\n          return new THREE.PointLight(props.color, props.intensity)\n        default:\n          return new THREE.AmbientLight(props.color, props.intensity)\n      }\n    }\n    \n    if (!this.light) {\n      this.light = createLight(lightProps)\n    }\n    \n    this.light.intensity = lightProps.intensity\n    const downcastedLight = this.light as any\n\n    if (downcastedLight.color) {\n      downcastedLight.color = new Color(lightProps.color)\n    }\n    \n    else if (downcastedLight.groundColor) {\n      downcastedLight.groundColor = new Color(lightProps.color)\n    }\n\n    if (downcastedLight.skyColor && lightProps.color2) {\n      downcastedLight.skyColor = new Color(lightProps.color2)\n    }\n  }\n\n  private _appendIdentifiers(id: string, name: string) {\n    const object: THREE.Object3D | undefined = this.getObject()\n    if (!object) return\n    object.uuid = id\n    object.name = name\n  }\n}\n","import * as THREE from \"three\"\nimport { deepClone } from \"../../utils\"\nimport CameraManager from \"./CameraManager\"\nimport ControlsManager from \"./ControlsManager\"\nimport Entity from \"./Entity\"\nimport MaterialManager from \"./MaterialManager\"\nexport default class SceneManager {\n  public static instance: SceneManager\n  private isPlaying: boolean = false // If true, in play mode, else in edit mode\n  private _scene!: THREE.Scene\n  private _entities: Entity[] = []\n  private _scenePayload: Engine.ScenePayload | undefined\n  private _scenePayloadInitialized = false;\n\n  // Selection\n  private _selectedEntityID: Engine.EntityID | undefined\n\n  // Helpers\n  private _axes = new THREE.AxesHelper(2)\n  private _gridHelper = new THREE.GridHelper(60, 6)\n  private _selectionHelper!: THREE.BoxHelper\n  private _lightHelpers: THREE.PointLightHelper[] = []\n\n  constructor() {\n    if (SceneManager.instance) {\n      return SceneManager.instance\n    }\n    SceneManager.instance = this\n    this._scene = new THREE.Scene()\n    this._scene.add(this._axes)\n    this._scene.add(this._gridHelper)\n    this._selectionHelper = new THREE.BoxHelper(this._gridHelper, 0xffff00)\n    this._scene.add(this._selectionHelper)\n    this._selectionHelper.visible = false\n    const loader = new THREE.TextureLoader()\n    loader.load(\"/browser-engine/resources/skybox.png\", (texture) => {\n      const rt = new THREE.WebGLCubeRenderTarget(texture.image.height)\n      rt.fromEquirectangularTexture(CameraManager.instance.renderer, texture)\n      this._scene.background = rt.texture\n    })\n  }\n\n  static isPlaying() {\n    return SceneManager.instance.isPlaying\n  }\n\n  getScene(): THREE.Scene {\n    return this._scene\n  }\n\n  setScenePayload(payload: Engine.ScenePayload, forInit?: boolean) {\n    if (forInit && this._scenePayloadInitialized) return\n    this._scenePayload = payload\n    this._compileMaterials()\n    if (forInit) {\n      this._scenePayloadInitialized = true\n    }\n  }\n\n  getSelectedEntityPayload(): Engine.EntityProps | undefined {\n    return this._scenePayload?.sceneConfig.entities.find(\n      (e) => e.id === this._selectedEntityID\n    )\n  }\n\n  updateEntityPayload(entityID: Engine.EntityID, entityProps: Engine.EntityProps) {\n    const updateIndex = this._entities.findIndex((e) => e.id === entityID)\n    if (updateIndex === -1) return\n    this._entities[updateIndex].init(entityProps)\n    const object = this._entities[updateIndex].getObject()\n    if (object) {\n      if (object.type === \"Mesh\") {\n        this._selectionHelper?.setFromObject(object)\n      } else {\n        this._lightHelpers.forEach((helper) => {\n          helper.update()\n        })\n      }\n    }\n  }\n\n  updateScene(deltaTime: number, elapsedTime: number) {\n    this._entities.forEach((entity) => {\n      entity.update(deltaTime, elapsedTime)\n    })\n  }\n\n  /** Runs scene in play mode.\n   *\n   *  In play mode, the components in all\n   *  entities are updated each frame.\n   */\n  runPlayScene() {\n    this.isPlaying = true\n    this._resetScene()\n    this._hideHelpers()\n    try {\n      // ControlsManager.instance.disableControls()\n      this._buildScene()\n      this._startEntities()\n\n    } catch (error) {\n      console.error(\"Error whilst setting up play scene\")\n    }\n  }\n\n  /** Runs scene in edit mode\n   *\n   *  In edit mode, the scene is reset and all\n   *  entities are reverted to their initial states,\n   *  based on the scenePayload.\n   */\n  runEditScene() {\n    this.isPlaying = false\n    this._resetScene()\n    // ControlsManager.instance.enableControls()\n    this._showHelpers()\n    this._buildScene()\n  }\n\n  /** Select an entity by ID */\n  selectByID(entityID: Engine.EntityID) {\n    const object = this._entities.find((e) => e.id === entityID)?.getObject() ?? undefined\n    if (object) ControlsManager.instance.lookAt(object.position)\n    this.select(object)\n  }\n\n  /** Sets Entity with corresponding object as selected,\n   *  if no object is passed, deselects any selected entity\n   * @param object THREE.Object3D\n   */\n  select(object?: THREE.Object3D) {\n    if (this.isPlaying) return\n    if (!object && this._selectionHelper?.visible && this._selectedEntityID) {\n      this._selectionHelper.visible = false\n      this._selectedEntityID = undefined\n      return\n    }\n\n    if (object) {\n      this._selectedEntityID = object.uuid\n      this._selectionHelper.setFromObject(object)\n      if (object.type === \"Mesh\") {\n        this._selectionHelper.visible = true\n      }\n    }\n  }\n\n  getSelectedEntity(): Engine.EntityID | undefined {\n    return this._selectedEntityID\n  }\n\n  buildEntity(props: Engine.EntityProps): Entity {\n    const entity = new Entity(props)\n    this._entities.push(entity)\n    const entityObject = entity.getObject()\n    if (entityObject) {\n      this._scene.add(entityObject)\n      if (entityObject.type === \"PointLight\" && !this.isPlaying) {\n        const previouslyMadeHelper = this._lightHelpers.some(\n          (helper) => helper.uuid === props.id\n        )\n        if (!previouslyMadeHelper) {\n          const sphereSize = 1\n          const pointLightHelper = new THREE.PointLightHelper(\n            entityObject as THREE.PointLight,\n            sphereSize\n          )\n          pointLightHelper.uuid = entityObject.uuid\n          this._scene.add(pointLightHelper)\n          this._lightHelpers.push(pointLightHelper)\n        }\n      } else if (entityObject.type === \"DirectionalLight\") {\n        const light = entityObject as any;\n        this._scene.add(light.target)\n      }\n    }\n    return entity\n  }\n\n  private _startEntities() {\n    this._entities.forEach((entity) => {\n      entity.start()\n    })\n  }\n\n  private _resetScene() {\n    this._entities.forEach((entity) => {\n      const object = entity.getObject()\n      if (object) {\n        this._scene.remove(object)\n      }\n      entity.destroy()\n    })\n    this._entities = []\n  }\n\n  private _buildScene() {\n    if (!this._scenePayload) return\n    const localPayloadCopy = deepClone<Engine.ScenePayload>(this._scenePayload)\n    this._buildEntities(localPayloadCopy.sceneConfig.entities)\n  }\n\n  private _buildEntities(entities: Engine.EntityProps[]) {\n    entities.forEach((entityProps) => {\n      this.buildEntity(entityProps)\n    })\n  }\n\n  private _compileMaterials() {\n    if (!this._scenePayload) return\n    this._scenePayload.sceneConfig.materials.forEach((material) => {\n      const associatedVertexShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.vertexShaderID\n      )\n\n      const associatedFragmentShader = this._scenePayload?.scripts.find(\n        (script) => script.id === material.fragmentShaderID\n      )\n\n      if (!associatedVertexShader || !associatedFragmentShader) return\n      const materialPayload: Engine.Material = {\n        material,\n        vertexShader: associatedVertexShader.content,\n        fragmentShader: associatedFragmentShader.content,\n      }\n      MaterialManager.instance.addCustomMaterial(materialPayload)\n    })\n  }\n\n  private _hideHelpers() {\n    this._axes.visible = false\n    this._gridHelper.visible = false\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = false\n    }\n\n    this._lightHelpers.forEach((helper) => {\n      helper.dispose()\n      this._scene.remove(helper)\n    })\n    this._lightHelpers = []\n  }\n\n  private _showHelpers() {\n    this._axes.visible = true\n    this._gridHelper.visible = true\n\n    if (this._selectionHelper) {\n      this._selectionHelper.visible = true\n    }\n  }\n}\n","export const deepClone = <T>(input: T): T => {\n  return JSON.parse(JSON.stringify(input)) as T\n}\n\nconst numberToHexadecimal = (value: number): Engine.Hexadecimal => {\n  return parseInt(`${value}`, 16);\n}\n\nexport const rgbToHexa = (r: number, g: number, b: number): Engine.Hexadecimal => {\n  const hexaR = numberToHexadecimal(r)\n  const hexaG = numberToHexadecimal(g)\n  const hexaB = numberToHexadecimal(b)\n  return parseInt(`0x${hexaR}${hexaG}${hexaB}`, 16)\n}","import * as THREE from \"three\"\nimport Component from \"./Component\"\nimport Entity from \"./Entity\"\ninterface ITransformProps {\n  position?: THREE.Vector3\n  rotation?: THREE.Euler\n  scale?: THREE.Vector3\n}\n\nexport default class Transform extends Component {\n  entity: Entity\n  _object: THREE.Object3D\n\n  // <@public>\n  public position: THREE.Vector3 = new THREE.Vector3(0, 0, 0)\n  public rotation: THREE.Euler = new THREE.Euler(0, 0, 0, \"XYZ\")\n  public scale: THREE.Vector3 = new THREE.Vector3(1, 1, 1)\n  // </@public>\n\n  constructor(entity: Entity) {\n    super(entity)\n    this.entity = entity\n    this._object = this.entity.getObject() as THREE.Object3D\n  }\n\n  init(props?: ITransformProps) {\n    this.position = props?.position ?? this.position\n    this.rotation = props?.rotation ?? this.rotation\n    this.scale = props?.scale ?? this.scale\n    this.applyMatrix()\n  }\n\n  start() {\n    this.applyMatrix()\n  }\n\n  private applyPosition() {\n    this._object.position.set(this.position.x, this.position.y, this.position.z)\n  }\n\n  private applyRotation() {\n    this._object.setRotationFromEuler(\n      new THREE.Euler(this.rotation.x, this.rotation.y, this.rotation.z)\n    )\n  }\n\n  private applyScale() {\n    this._object.scale.set(this.scale.x, this.scale.y, this.scale.z)\n  }\n\n  private applyMatrix() {\n    if (!this.entity) {\n      return\n    }\n    this.applyPosition()\n    this.applyRotation()\n    this.applyScale()\n  }\n\n  update() {\n    this.applyMatrix()\n  }\n}\n","import * as THREE from 'three';\nimport Transform from \"./Transform\";\nimport { BaseComponentType } from \"./Component\";\nimport Entity from \"./Entity\";\nexport default class ComponentManager {\n  public static instance: ComponentManager;\n  private components: { [key: string]: { constructor: BaseComponentType, props: Engine.ComponentProps } } = {};\n\n  constructor() {\n    if (ComponentManager.instance) return;\n    ComponentManager.instance = this;\n\n    this.registerComponent(\"Transform\", Transform, {\n      position: { x: 0, y: 0, z: 0 },\n      rotation: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n    });\n  }\n\n  public getComponents() {\n    return { ...this.components };\n  };\n\n  public registerComponent(componentName: string, component: BaseComponentType, props: Engine.ComponentProps): void {\n    this.components[componentName] = { constructor: component, props };\n  };\n\n  public getComponentProps(name: Engine.ComponentType): Engine.ComponentProps | null {\n    const componentProps = this.components[name].props ?? null;\n    if (!componentProps) {\n      return null;\n    }\n    return componentProps;\n  }\n\n  private getComponent(name: Engine.ComponentType): BaseComponentType | null {\n    return this.components[name].constructor ?? null;\n  }\n\n  public setComponent(entity: Entity, componentType: Engine.ComponentType, componentProps: Engine.ComponentProps): void {\n    \n    const component = this.getComponent(componentType);\n    if (!component) {\n      console.error(`Component ${componentType} not found`);\n      return;\n    }\n\n    // Translate vector props \n    Object.entries(componentProps).forEach(([name, prop]) => {\n      if (Array.isArray(prop)) {\n        if (prop.length === 3) {\n          componentProps[name] = new THREE.Vector3(prop[0], prop[1], prop[2]) as any;\n        }\n        else if (prop.length === 2) {\n          componentProps[name] = new THREE.Vector2(prop[0], prop[1]) as any;\n        }\n      }\n    });\n    const componentInstance = new component(entity);\n    try {\n      componentInstance.init(componentProps);\n      entity.components[componentType] = componentInstance;\n    } catch (e) {\n      console.error('Error whilst initializing component', e);\n    }\n  }\n}","import * as THREE from \"three\"\n\nexport default class MaterialManager {\n  public static instance: MaterialManager\n  materials: Record<Engine.MaterialType, THREE.Material> = {\n    normal: new THREE.MeshNormalMaterial(),\n    basic: new THREE.MeshBasicMaterial(),\n    phong: new THREE.MeshPhongMaterial(),\n    lambert: new THREE.MeshLambertMaterial(),\n    wireframe: new THREE.MeshBasicMaterial({ wireframe: true }),\n  }\n\n  constructor() {\n    if (MaterialManager.instance) return\n    MaterialManager.instance = this\n  }\n\n  getMaterial(type: Engine.MaterialType): THREE.Material {\n    return this.materials[type] ?? this.materials.basic\n  }\n\n  addCustomMaterial(materialPayload: Engine.Material): void {\n    const mat = materialPayload.material\n    this.materials[mat.name] = new THREE.ShaderMaterial({\n      uniforms: { ...mat.uniforms, time: { value: 0.0 } },\n      vertexShader: materialPayload.vertexShader,\n      fragmentShader: materialPayload.fragmentShader,\n    })\n  }\n}\n","import * as THREE from \"three\"\nimport ControlsManager from \"./ControlsManager\"\nimport SceneManager from \"./SceneManager\"\n\nexport default class CameraManager {\n  public static instance: CameraManager\n  public renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true })\n  private renderElement: HTMLElement | undefined\n  private raycaster: THREE.Raycaster = new THREE.Raycaster()\n  private fov = 60\n  private near = 0.01\n  private far = 20000\n  private camera!: THREE.PerspectiveCamera\n  private currentControls: Engine.ControlType = \"orbit\"\n  private clock = new THREE.Clock()\n\n  constructor() {\n    if (CameraManager.instance) return CameraManager.instance\n    CameraManager.instance = this\n    this._setCamera()\n    window.addEventListener(\"resize\", () => this.handleResize())\n  }\n\n  setup(renderElement: HTMLElement, scene: THREE.Scene) {\n    this.renderer.setSize(renderElement.clientWidth, renderElement.clientHeight)\n    this.renderElement = renderElement\n    this.renderElement.appendChild(this.renderer.domElement)\n    this.renderer.toneMapping = THREE.ReinhardToneMapping\n    this.renderer.toneMappingExposure = 2\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    \n    this.handleResize()\n    this._setControls()\n    this._setRaycaster()\n    this._runSceneLoop(scene)\n  }\n\n  handleClick(mouseX: number, mouseY: number) {\n    const pointer = new THREE.Vector2(mouseX, mouseY)\n    this.raycaster.setFromCamera(pointer, this.camera)\n    const intersects = this.raycaster\n      .intersectObjects(SceneManager.instance.getScene().children, true)\n      .filter(e => e.object.type === \"Mesh\" || e.object.type === \"PointLightHelper\")\n    if (intersects.length > 0) {\n      const objectSelect = intersects[0].object;\n      if (objectSelect.type === \"Mesh\") {\n        SceneManager.instance.select(objectSelect)\n      } else if (objectSelect.type === \"PointLightHelper\") {\n        SceneManager.instance.selectByID(objectSelect.uuid)\n      }\n    } else {\n      SceneManager.instance.select()\n    }\n  }\n\n\n  private _setCamera() {\n    if (!this.renderElement) {\n      this.camera = new THREE.PerspectiveCamera(\n        this.fov,\n        window.innerWidth / window.innerHeight,\n        this.near,\n        this.far\n      )\n      this.camera.position.y = 10\n      this.camera.rotation.x = -0.1\n      this.camera.position.z = 50\n    }\n  }\n\n  private _runSceneLoop(scene: THREE.Scene) {\n    this.renderer.setAnimationLoop((time: number) => this.update(scene))\n  }\n\n  private _setRaycaster() {\n    this.raycaster = new THREE.Raycaster()\n  }\n\n  private _setControls() {\n    if (!this.renderElement) {\n      return\n    }\n    ControlsManager.instance.setControls(\n      this.currentControls,\n      this.camera,\n      this.renderer.domElement\n    )\n  }\n\n  getAspect() {\n    return this.camera.aspect\n  }\n\n  handleResize() {\n    if (!this.renderElement) return\n    const dimensions = this.renderElement.getBoundingClientRect()\n    const w = this.renderElement?.offsetParent?.clientWidth ?? dimensions.width;\n    const h = this.renderElement?.offsetParent?.clientHeight ?? dimensions.height;\n    this.camera.aspect = w / h\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(w, h)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n  }\n\n  update(scene: THREE.Scene) {\n    this.renderer.render(scene, this.camera)\n    const deltaTime = this.clock.getDelta()\n    const elapsedTime = this.clock.getElapsedTime()\n    SceneManager.instance.updateScene(deltaTime, elapsedTime)\n    ControlsManager.instance.updateControls(deltaTime)\n  }\n}\n","import * as THREE from 'three';\nimport { v4 as uuidv4 } from \"uuid\"\n\nconst COMPONENT_DEF = `// @defineComponent`\nconst BASE_COMPONENT_SCRIPT_CONTENT = `class Component {\n  \n  // <public>\n\n  // </public>\n\n  ${COMPONENT_DEF}\n\n  start() {\n    \n  }\n\n  update() {\n\n  }\n}`\n\nconst BASE_VERTEX_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}`\n\nconst BASE_FRAGMENT_SHADER_CONTENT = `uniform float time;\n\nvoid main() {\n  gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n}`\n\nexport const generateNewScript = (\n  name: string,\n  language: Engine.Language,\n  type: Engine.ScriptType\n): Engine.Script => {\n  const id = uuidv4()\n  let content = BASE_COMPONENT_SCRIPT_CONTENT\n\n  switch (type) {\n    case \"component\":\n      content = BASE_COMPONENT_SCRIPT_CONTENT\n      break\n    case \"vertex\":\n      content = BASE_VERTEX_SHADER_CONTENT\n      break\n    case \"fragment\":\n      content = BASE_FRAGMENT_SHADER_CONTENT\n      break\n    default:\n      break\n  }\n\n  return {\n    id,\n    name,\n    language,\n    content,\n    type,\n  }\n}\n\nconst initPropPlaceholder = \"// <initPropPlaceholder />\"\n\nexport const formatScriptString = (script: Engine.Script): string => {\n  const formatted = `(${script.content})`\n  return formatted.replace(\n    COMPONENT_DEF,\n    `\n          entity;\n        \n          constructor(entity) {\n            this.entity = entity;\n          }\n\n          ${initPropPlaceholder}\n        `\n  )\n}\n\nexport const injectInitSection = (\n  scriptBody: string,\n  props: Record<string, Engine.ComponentPropType>\n): string => {\n  const actualInitSection = `\n  init(props) {\n    this.transform = this.entity.getComponent('Transform');\n    ${Object.entries(props)\n      .map(([key, value]) => `this.${key} = props?.${key} ?? ${value};`)\n      .join(\"\\n\")}\n  }`\n  return scriptBody.replace(initPropPlaceholder, actualInitSection)\n}\n\nexport const generateNewMaterial = (\n  name: string,\n  vertexShaderID: string,\n  fragmentShaderID: string\n): Engine.MaterialProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name,\n    vertexShaderID: vertexShaderID,\n    fragmentShaderID: fragmentShaderID,\n    uniforms: {},\n  }\n}\n","import { EventDispatcher, Quaternion, Vector3 } from \"three\"\n\nconst _changeEvent = { type: \"change\" }\n\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn(\n        'THREE.FlyControls: The second parameter \"domElement\" is now mandatory.'\n      )\n      domElement = document\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    // API\n\n    this.movementSpeed = 1.0\n    this.rollSpeed = 0.005\n\n    this.dragToLook = false\n    this.autoForward = false\n\n    // disable default target object behavior\n\n    // internals\n\n    const scope = this\n\n    const EPS = 0.000001\n\n    const lastQuaternion = new Quaternion()\n    const lastPosition = new Vector3()\n\n    this.tmpQuaternion = new Quaternion()\n\n    this.mouseStatus = 0\n\n    this.moveState = {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0,\n    }\n    this.moveVector = new Vector3(0, 0, 0)\n    this.rotationVector = new Vector3(0, 0, 0)\n\n    this.keydown = function (event) {\n      if (event.altKey) {\n        return\n      }\n\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 1\n          break\n        case \"KeyS\":\n          this.moveState.back = 1\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 1\n          break\n        case \"KeyD\":\n          this.moveState.right = 1\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 1\n          break\n        case \"KeyF\":\n          this.moveState.down = 1\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 1\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.keyup = function (event) {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1\n          break\n\n        case \"KeyW\":\n          this.moveState.forward = 0\n          break\n        case \"KeyS\":\n          this.moveState.back = 0\n          break\n\n        case \"KeyA\":\n          this.moveState.left = 0\n          break\n        case \"KeyD\":\n          this.moveState.right = 0\n          break\n\n        case \"KeyR\":\n          this.moveState.up = 0\n          break\n        case \"KeyF\":\n          this.moveState.down = 0\n          break\n\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0\n          break\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0\n          break\n\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0\n          break\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0\n          break\n\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0\n          break\n        case \"KeyE\":\n          this.moveState.rollRight = 0\n          break\n      }\n\n      this.updateMovementVector()\n      this.updateRotationVector()\n    }\n\n    this.mousedown = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus++\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1\n            break\n          case 2:\n            this.moveState.back = 1\n            break\n        }\n\n        this.updateMovementVector()\n      }\n    }\n\n    this.mousemove = function (event) {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions()\n        const halfWidth = container.size[0] / 2\n        const halfHeight = container.size[1] / 2\n\n        this.moveState.yawLeft =\n          -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n        this.moveState.pitchDown =\n          (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n        this.updateRotationVector()\n      }\n    }\n\n    this.mouseup = function (event) {\n      if (this.dragToLook) {\n        this.mouseStatus--\n\n        this.moveState.yawLeft = this.moveState.pitchDown = 0\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0\n            break\n          case 2:\n            this.moveState.back = 0\n            break\n        }\n\n        this.updateMovementVector()\n      }\n\n      this.updateRotationVector()\n    }\n\n    this.update = function (delta) {\n      const moveMult = delta * scope.movementSpeed\n      const rotMult = delta * scope.rollSpeed\n\n      scope.object.translateX(scope.moveVector.x * moveMult)\n      scope.object.translateY(scope.moveVector.y * moveMult)\n      scope.object.translateZ(scope.moveVector.z * moveMult)\n\n      scope.tmpQuaternion\n        .set(\n          scope.rotationVector.x * rotMult,\n          scope.rotationVector.y * rotMult,\n          scope.rotationVector.z * rotMult,\n          1\n        )\n        .normalize()\n      scope.object.quaternion.multiply(scope.tmpQuaternion)\n\n      if (\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(_changeEvent)\n        lastQuaternion.copy(scope.object.quaternion)\n        lastPosition.copy(scope.object.position)\n      }\n    }\n\n    this.updateMovementVector = function () {\n      const forward =\n        this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n      this.moveVector.x = -this.moveState.left + this.moveState.right\n      this.moveVector.y = -this.moveState.down + this.moveState.up\n      this.moveVector.z = -forward + this.moveState.back\n    }\n\n    this.updateRotationVector = function () {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n    }\n\n    this.getContainerDimensions = function () {\n      if (this.domElement != document) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n        }\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0],\n        }\n      }\n    }\n\n    this.dispose = function () {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu)\n      this.domElement.removeEventListener(\"mousedown\", _mousedown)\n      this.domElement.removeEventListener(\"mousemove\", _mousemove)\n      this.domElement.removeEventListener(\"mouseup\", _mouseup)\n\n      window.removeEventListener(\"keydown\", _keydown)\n      window.removeEventListener(\"keyup\", _keyup)\n    }\n\n    const _mousemove = this.mousemove.bind(this)\n    const _mousedown = this.mousedown.bind(this)\n    const _mouseup = this.mouseup.bind(this)\n    const _keydown = this.keydown.bind(this)\n    const _keyup = this.keyup.bind(this)\n\n    this.domElement.addEventListener(\"contextmenu\", contextmenu)\n\n    this.domElement.addEventListener(\"mousemove\", _mousemove)\n    this.domElement.addEventListener(\"mousedown\", _mousedown)\n    this.domElement.addEventListener(\"mouseup\", _mouseup)\n\n    window.addEventListener(\"keydown\", _keydown)\n    window.addEventListener(\"keyup\", _keyup)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n}\n\nfunction contextmenu(event) {\n  event.preventDefault()\n}\n\nexport { FlyControls }\n","import {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\"\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: \"change\" }\nconst _startEvent = { type: \"start\" }\nconst _endEvent = { type: \"end\" }\n\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super()\n\n    if (domElement === undefined)\n      console.warn(\n        'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n      )\n    if (domElement === document)\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n      )\n\n    this.object = object\n    this.domElement = domElement\n    this.domElement.style.touchAction = \"none\" // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3()\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0\n    this.maxDistance = Infinity\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0\n    this.maxZoom = Infinity\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity // radians\n    this.maxAzimuthAngle = Infinity // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false\n    this.dampingFactor = 0.05\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true\n    this.zoomSpeed = 1.0\n\n    // Set to false to disable rotating\n    this.enableRotate = true\n    this.rotateSpeed = 1.0\n\n    // Set to false to disable panning\n    this.enablePan = true\n    this.panSpeed = 7.0\n    this.screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 15 // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false\n    this.autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\",\n    }\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi\n    }\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta\n    }\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target)\n    }\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener(\"keydown\", onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = function () {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n\n      scope.object.updateProjectionMatrix()\n      scope.dispatchEvent(_changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n      const offset = new Vector3()\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(\n        object.up,\n        new Vector3(0, 1, 0)\n      )\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update() {\n        const position = scope.object.position\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2\n                ? Math.max(min, spherical.theta)\n                : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        )\n\n        spherical.makeSafe()\n\n        spherical.radius *= scale\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        )\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        scale = 1\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(_changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu)\n\n      scope.domElement.removeEventListener(\"pointerdown\", onPointerDown)\n      scope.domElement.removeEventListener(\"pointercancel\", onPointerCancel)\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel)\n\n      scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n      scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown)\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n    let zoomChanged = false\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const pointers = []\n    const pointerPositions = {}\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle\n    }\n\n    const panLeft = (function () {\n      const v = new Vector3()\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (function () {\n      const v = new Vector3()\n\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (function () {\n      const offset = new Vector3()\n\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          )\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          )\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        )\n        scope.object.updateProjectionMatrix()\n        zoomChanged = true\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        )\n        scope.enableZoom = false\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY)\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY)\n\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n\n      scope.update()\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY)\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n\n      scope.update()\n    }\n\n    function handleMouseUp(/*event*/) {\n      // no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false\n      if (document.activeElement.id !== \"scene\") return\n        switch (event.code) {\n          case \"KeyW\":\n            dollyIn(0.3)\n            needsUpdate = true\n            break\n            case \"KeyS\":\n            dollyOut(0.3)\n            needsUpdate = true\n            break\n          case scope.keys.UP:\n          case \"Space\":\n            pan(0, scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.BOTTOM:\n            pan(0, -scope.keyPanSpeed)\n            needsUpdate = true\n            break\n\n          case scope.keys.LEFT:\n          case \"KeyA\":\n            pan(scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n\n          case scope.keys.RIGHT || \"d\":\n          case \"KeyD\":\n            pan(-scope.keyPanSpeed, 0)\n            needsUpdate = true\n            break\n          default:\n            break\n        }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta\n        .subVectors(rotateEnd, rotateStart)\n        .multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n      rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n      pan(panDelta.x, panDelta.y)\n\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event)\n\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n      dollyOut(dollyDelta.y)\n\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    function handleTouchEnd(/*event*/) {\n      // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId)\n\n        scope.domElement.addEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.addEventListener(\"pointerup\", onPointerUp)\n      }\n\n      //\n\n      addPointer(event)\n\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === \"touch\") {\n        onTouchEnd()\n      } else {\n        onMouseUp(event)\n      }\n\n      removePointer(event)\n\n      //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId)\n\n        scope.domElement.removeEventListener(\"pointermove\", onPointerMove)\n        scope.domElement.removeEventListener(\"pointerup\", onPointerUp)\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseDownDolly(event)\n\n          state = STATE.DOLLY\n\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          }\n\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n\n            handleMouseDownRotate(event)\n\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n\n            handleMouseDownPan(event)\n\n            state = STATE.PAN\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleMouseMoveRotate(event)\n\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n\n          handleMouseMoveDolly(event)\n\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n\n          handleMouseMovePan(event)\n\n          break\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return\n\n      event.preventDefault()\n\n      scope.dispatchEvent(_startEvent)\n\n      handleMouseWheel(event)\n\n      scope.dispatchEvent(_endEvent)\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n\n              handleTouchStartRotate()\n\n              state = STATE.TOUCH_ROTATE\n\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n\n              handleTouchStartPan()\n\n              state = STATE.TOUCH_PAN\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n\n              handleTouchStartDollyPan()\n\n              state = STATE.TOUCH_DOLLY_PAN\n\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n\n              handleTouchStartDollyRotate()\n\n              state = STATE.TOUCH_DOLLY_ROTATE\n\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent)\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n\n          handleTouchMoveRotate(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n\n          handleTouchMovePan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n\n          handleTouchMoveDollyPan(event)\n\n          scope.update()\n\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n\n          handleTouchMoveDollyRotate(event)\n\n          scope.update()\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event)\n\n      scope.dispatchEvent(_endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return\n\n      event.preventDefault()\n    }\n\n    function addPointer(event) {\n      pointers.push(event)\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer =\n        event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n\n      return pointerPositions[pointer.pointerId]\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu)\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown)\n    scope.domElement.addEventListener(\"pointercancel\", onPointerCancel)\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n      passive: false,\n    })\n\n    // force an update at start\n\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { FlyControls } from \"../controls/FlyControls\"\nimport { OrbitControls } from \"../controls/OrbitControls\"\n\nexport default class ControlsManager {\n  public static instance: ControlsManager\n  private controls: any\n\n  constructor() {\n    if (ControlsManager.instance) return\n    ControlsManager.instance = this\n  }\n\n  setControls(\n    type: Engine.ControlType,\n    camera: THREE.Camera,\n    domElement: HTMLElement\n  ) {\n    \n    if (this.controls) {\n      return;\n    }\n    switch (type) {\n      case \"fly\":\n        this._setFlyControls(camera, domElement)\n        break\n      case \"orbit\":\n        this._setOrbitControls(camera, domElement)\n        break\n      default:\n        console.warn(`Control type: ${type} not found`)\n        break\n    }\n  }\n\n  lookAt(target: THREE.Vector3) {\n    if (this.controls) {\n      // this.controls.target.copy(target)\n    }\n  }\n\n  enableControls() {\n    if (this.controls) this.controls.enabled = true\n  }\n\n  disableControls() {\n    if (this.controls) this.controls.enabled = false\n  }\n\n  _setFlyControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false\n    this.controls = new FlyControls(camera, domElement)\n    this.controls.movementSpeed = 33\n  }\n\n  _setOrbitControls(camera: THREE.Camera, domElement: HTMLElement) {\n    if (this.controls) this.controls.enabled = false;\n    this.controls = new OrbitControls(camera, domElement)\n    this.controls.listenToKeyEvents(window)\n  }\n\n  updateControls(deltaTime: number) {\n    if (this.controls) this.controls.update(deltaTime)\n  }\n}\n","import * as THREE from \"three\"\n\nconst planeBufferGeometry = new THREE.PlaneBufferGeometry(5, 5)\nplaneBufferGeometry.rotateX(-Math.PI / 2)\nplaneBufferGeometry.scale(5, 1, 5);\nexport default class GeometryManager {\n  public static instance: GeometryManager\n  geometries: Record<Engine.GeometryType, THREE.BufferGeometry> = {\n    box: new THREE.BoxBufferGeometry(),\n    sphere: new THREE.SphereBufferGeometry(1, 16, 16),\n    cylinder: new THREE.CylinderBufferGeometry(1, 1, 1, 16, 1),\n    torus: new THREE.TorusBufferGeometry(6, 1.1, 10, 32, 6.3),\n    plane: planeBufferGeometry,\n    tetrahedron: new THREE.TetrahedronBufferGeometry(),\n    octahedron: new THREE.OctahedronBufferGeometry(),\n    dodecahedron: new THREE.DodecahedronBufferGeometry(),\n    icosahedron: new THREE.IcosahedronBufferGeometry(),\n  }\n\n  constructor() {\n    if (GeometryManager.instance) return\n    GeometryManager.instance = this\n  }\n\n  getGeometry(type: Engine.GeometryType): THREE.BufferGeometry {\n    return this.geometries[type] ?? this.geometries.box\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nexport const generateNewEntity = (): Engine.EntityProps => {\n  const id = uuidv4();\n  return {\n    id,\n    name: \"New Entity\",\n    type: \"basic\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    geometry: \"box\",\n    material: \"phong\",\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 0.5, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 1, y: 1, z: 1 },\n      },\n    },\n  }\n}\n\nexport const generateNewLight = (): Engine.EntityProps => {\n  const id = uuidv4()\n  return {\n    id,\n    name: \"New Light\",\n    type: \"light\",\n    visible: true,\n    castShadow: true,\n    receiveShadow: true,\n    children: [],\n    components: {\n      Transform: {\n        position: { x: 0, y: 1, z: 0 },\n        rotation: { x: 0, y: 0, z: 0 },\n        scale: { x: 0.5, y: 0.5, z: 0.5 },\n      },\n    },\n    lightProps: {\n      intensity: 0.7,\n      type: \"point\",\n      color: \"rgb(255,255,0)\",\n    },\n  }\n}","import Entity from \"./Entity\";\n\nexport default abstract class Component {\n  entity: Entity;\n\n  constructor(entity: Entity) {\n    this.entity = entity;\n  }\n\n  abstract init(props: Engine.ComponentProps): void;\n\n  abstract start(): void;\n\n  abstract update(): void;\n}\n\n// This is only used for generating the BaseComponentType for internal use, \n// when creating Components, extend the abstract Component class instead.\nclass BaseComponent extends Component {\n  entity!: Entity;\n\n  init(props: Engine.ComponentProps) { }\n\n  start() { }\n\n  update() { }\n}\n\nexport type BaseComponentType = typeof BaseComponent;","/* eslint-disable no-eval */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as three from \"three\"\nimport Component from \"../engine/core/Component\"\nimport ComponentManager from \"../engine/core/ComponentManager\"\nimport context from \"../engine/core/EngineContext\"\nimport SceneManager from \"../engine/core/SceneManager\"\nimport { generateNewEntity } from \"./entity.utils\"\nimport { formatScriptString, injectInitSection } from \"./script.utils\"\n// Helper for script compilation\n\nexport default class ScriptCompiler {\n  public static CompileScripts(scripts: Engine.Script[]) {\n    \n    Object.values(scripts).forEach((script) => {\n      try {\n        if (script.type === \"component\") {\n          ScriptCompiler.CompileComponentScript(script)\n        }\n      } catch (err) {\n        console.error(err)\n      }\n    })\n  }\n\n  private static CompileComponentScript(script: Engine.Script) {\n    // References to be used when running eval\n    const THREE = three\n    const Instantiate = SceneManager.instance.buildEntity.bind(SceneManager.instance)\n    const CreateEntity = generateNewEntity\n    const Time = context.time;\n\n    const scriptCopy = `${script.content}`\n    const removePrefix = scriptCopy.substring(scriptCopy.indexOf(\"// <public>\") + 11)\n    let pureProps = removePrefix.substring(0, removePrefix.indexOf(\"// </public>\"))\n    pureProps = pureProps.replaceAll(\";\", \",\")\n    pureProps = pureProps.replaceAll(\"=\", \":\")\n    let props: Record<string, Engine.ComponentType> = {}\n    if (`${pureProps}`.replace(/\\s/g, \"\").length) {\n      pureProps = `{${pureProps}}`\n      props = eval(`(${pureProps})`) // ! <-- Eval\n    }\n    let formattedScript = formatScriptString(script)\n    formattedScript = injectInitSection(formattedScript, props)\n    const NewComponent: any = eval(`(${formattedScript})`) // ! <-- Eval\n    Object.setPrototypeOf(NewComponent, Component)\n    ComponentManager.instance.registerComponent(script.name, NewComponent, props)\n  }\n}\n","import { ReactElement, useEffect, useMemo, useRef } from \"react\"\nimport { createContext } from \"react\"\n\ninterface IEditorContext {\n  renderElement?: React.MutableRefObject<HTMLDivElement | null>\n  localScenePayload: Engine.ScenePayload | null\n}\n\nconst initialValue: IEditorContext = {\n  localScenePayload: null,\n}\n\nexport const EditorContext = createContext<IEditorContext>(initialValue)\n\nexport const EditorProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const renderElement = useRef<HTMLDivElement>(null)\n  \n  const localScenePayload: Engine.ScenePayload | null = useMemo(() => {\n    const fromLocalStorage = localStorage.getItem(\"scenePayload\")\n    if (!fromLocalStorage) return null\n    return JSON.parse(fromLocalStorage)\n  }, [])\n\n  const contextValue = { renderElement, localScenePayload }\n\n  return <EditorContext.Provider value={contextValue}>{children}</EditorContext.Provider>\n}\n","import * as THREE from \"three\"\nimport { ReactElement, useEffect, useMemo } from \"react\"\nimport { createContext } from \"react\"\nimport { useState } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport context from \"../../engine/core/EngineContext\"\n\ninterface ISceneContext {\n  sceneConfig: Engine.SceneConfig\n  setEntities: (entities: Engine.EntityProps[]) => void\n  selectedEntityID: string | null\n  setSelectedEntityID: (entityID: Engine.EntityID | null) => void\n  selectedMaterialID: string | null\n  setSelectedMaterialID: (materialID: Engine.MaterialID | null) => void\n  materials: Record<string, Engine.MaterialProps>\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => void\n}\n\nconst initialValue = {\n  sceneConfig: {\n    entities: [] as Engine.EntityProps[],\n    camera: {\n      position: new THREE.Vector3(),\n      fov: 70,\n      near: 0.1,\n      far: 1000,\n      controls: \"orbit\" as Engine.ControlType,\n    },\n    materials: [],\n  },\n  selectedEntityID: null,\n  selectedMaterialID: null,\n  setEntities: (entities: Engine.EntityProps[]) => {},\n  setSelectedEntityID: (entityID: string | null) => {},\n  setSelectedMaterialID: (materialID: string | null) => {},\n  setCameraProps: (cameraProps: Engine.CameraProps) => {},\n  materials: {},\n  setMaterials: (materials: Record<string, Engine.MaterialProps>) => {},\n}\n\nexport const SceneContext = createContext<ISceneContext>(initialValue)\n\nexport const SceneProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  // entities\n  const [entities, setEntities] = useState<Engine.EntityProps[]>([\n    {\n      id: uuidv4(),\n      name: \"Main Camera\",\n      type: \"camera\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 5, z: -5 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      cameraProps: {\n        fov: 70,\n        near: 0.1,\n        far: 1000,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Ambient Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: false,\n      receiveShadow: false,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 6, y: 6, z: 6 },\n        },\n      },\n      lightProps: {\n        type: \"ambient\",\n        color: \"#ffffff\",\n        intensity: 0.4,\n      },\n    },\n    {\n      id: uuidv4(),\n      name: \"Directional Light\",\n      type: \"light\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 10, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n      lightProps: {\n        type: \"directional\",\n        color: \"#ffffff\",\n        intensity: 0.1,\n      },\n    },\n\n    {\n      id: uuidv4(),\n      name: \"Plane\",\n      type: \"basic\",\n      visible: true,\n      castShadow: true,\n      receiveShadow: true,\n      material: \"phong\",\n      geometry: \"plane\",\n      children: [],\n      components: {\n        Transform: {\n          position: { x: 0, y: 0, z: 0 },\n          rotation: { x: 0, y: 0, z: 0 },\n          scale: { x: 1, y: 1, z: 1 },\n        },\n      },\n    },\n  ])\n  const [selectedEntityID, setSelectedEntityID] = useState<string | null>(null)\n\n  // materials\n  const [selectedMaterialID, setSelectedMaterialID] = useState<string | null>(null)\n  const [materials, setMaterials] = useState<Record<string, Engine.MaterialProps>>(\n    {} as Record<string, Engine.MaterialProps>\n  )\n\n  const sceneConfig: Engine.SceneConfig = useMemo(\n    () => ({\n      entities,\n      // camera: cameraProps,\n      materials: Object.values(materials),\n    }),\n    [entities, materials]\n  )\n\n  useEffect(() => {\n    if (selectedEntityID) {\n      const entityProps = entities.find((e) => e.id === selectedEntityID)\n      if (!entityProps) return\n      context.updateSpecificEntity(selectedEntityID, entityProps)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneConfig])\n\n  const contextValue = {\n    sceneConfig,\n    selectedEntityID,\n    selectedMaterialID,\n    setEntities,\n    setSelectedEntityID,\n    setSelectedMaterialID,\n    materials,\n    setMaterials,\n  }\n  return <SceneContext.Provider value={contextValue}>{children}</SceneContext.Provider>\n}\n","import {  ReactElement, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\n\ninterface IScriptContext {\n  scripts: Record<string, Engine.Script>\n  selectedScript: Engine.Script | undefined\n  scriptBody: string\n  setScriptBody: (scriptBody: string) => void\n  setScripts: (scripts: Record<string, Engine.Script>) => void\n  setSelectedScript: (script: Engine.Script | undefined) => void\n  compileScripts: () => void\n}\n\nconst initialValue: IScriptContext = {\n  scripts: {},\n  selectedScript: undefined,\n  scriptBody: \"\",\n  setScriptBody: (scriptBody: string) => {},\n  setScripts: (scripts: Record<string, Engine.Script>) => {},\n  setSelectedScript: (script: Engine.Script | undefined) => {},\n  compileScripts: () => {},\n}\n\nexport const ScriptContext = createContext<IScriptContext>(initialValue)\n\nexport let scriptBody = \"\"\nexport const setScriptBody = (val: string) => {\n  scriptBody = val\n}\nexport const ScriptProvider = ({\n  children,\n}: {\n  children: ReactElement | ReactElement[]\n}) => {\n  const [scripts, setScripts] = useState<Record<string, Engine.Script>>({})\n  const [selectedScript, setSelectedScript] = useState<Engine.Script | undefined>()\n\n  const compileScripts = () => {\n    ScriptCompiler.CompileScripts(Object.values(scripts));\n  }\n\n  useEffect(() => {\n    compileScripts()\n  }, [scripts])\n\n  const contextValue = {\n    scripts,\n    setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  }\n\n  return (\n    <ScriptContext.Provider value={contextValue}>{children}</ScriptContext.Provider>\n  )\n}\n","import { useContext, useMemo } from \"react\"\nimport { SceneContext } from \"./SceneContext\"\nimport context from \"../../engine/core/EngineContext\"\nimport {  generateNewMaterial } from \"../../utils/script.utils\"\n\nconst useScene = () => {\n  const {\n    sceneConfig,\n    setEntities,\n    selectedEntityID,\n    setSelectedEntityID,\n    materials,\n    setMaterials,\n    selectedMaterialID,\n    setSelectedMaterialID,\n  } = useContext(SceneContext)\n\n  const selectEntity = (id: Engine.EntityID) => {\n    if (id === selectedEntityID) {\n      context.selectEntity(\"\")\n      setSelectedEntityID(\"\")\n      return\n    }\n    context.selectEntity(id)\n    setSelectedMaterialID(\"\")\n    setSelectedEntityID(id)\n  }\n\n  const selectedEntity: Engine.EntityProps | null = useMemo(() => {\n    return sceneConfig.entities.find((e) => e.id === selectedEntityID) ?? null\n  }, [sceneConfig, selectedEntityID])\n\n  const selectedMaterial: Engine.MaterialProps | null = useMemo(() => {\n    return sceneConfig.materials.find((e) => e.id === selectedMaterialID) ?? null\n  }, [sceneConfig, selectedMaterialID])\n  \n  const updateEntity = (entity: Engine.EntityProps) => {\n    const index = sceneConfig.entities.findIndex((e) => e.id === entity.id)\n    if (index === -1) {\n      console.error(`Couldn't find ${entity.id} in sceneConfig.entities`)\n    }\n    sceneConfig.entities[index] = entity\n    setEntities([...sceneConfig.entities])\n  }\n\n  const updateEntityParent = (\n    child: Engine.EntityID,\n    newParent: Engine.EntityID | null\n  ) => {\n    // TODO: Implement this\n  }\n\n  const createEntity = (entity: Engine.EntityProps) => {\n    setEntities([...sceneConfig.entities, entity])\n    context.addNewEntity(entity)\n  }\n\n  const createMaterial = (\n    materialName: string,\n    vertexShaderID: Engine.ScriptID,\n    fragmentShaderID: Engine.ScriptID\n  ) => {\n    const updatedMaterialsObject = materials;\n    const newMaterial = generateNewMaterial(\n      materialName,\n      vertexShaderID,\n      fragmentShaderID\n    )\n    updatedMaterialsObject[materialName] = newMaterial;\n    setMaterials({...updatedMaterialsObject})\n  }\n\n  const selectMaterial = (materialID: Engine.MaterialID) => {\n    if (materialID === selectedMaterialID) {\n      setSelectedMaterialID(\"\")\n      return\n    }\n    setSelectedMaterialID(materialID)\n    setSelectedEntityID(\"\")\n  }\n\n  return {\n    sceneConfig,\n    selectedEntity,\n    selectedMaterial,\n    createEntity,\n    selectEntity,\n    updateEntity,\n    updateEntityParent,\n    createMaterial,\n    selectMaterial,\n    _setEntities: setEntities,\n    _setMaterials: setMaterials,\n  }\n}\n\nexport default useScene\n","import { ReactElement } from \"react\"\n\ninterface Props {\n  label: string\n  bodyClass?: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function Panel({ label, bodyClass, children }: Props): ReactElement {\n  return (\n    <div className=\"bg-gray-800 p-1 h-full border border-gray-900 text-white\">\n      <h4 className=\"font-mono text-xs text-red-500 mb-1\">{label}</h4>\n      <div className={`${bodyClass ?? \"\"} space-y-1`}>{children}</div>\n    </div>\n  )\n}\n","import { useContext } from \"react\"\nimport { generateNewScript } from \"../../utils/script.utils\"\nimport { scriptBody, ScriptContext, setScriptBody } from \"./ScriptContext\"\n\nconst useScripts = () => {\n  const {\n    scripts,\n    setScripts,\n    selectedScript,\n    setSelectedScript,\n    compileScripts,\n  } = useContext(ScriptContext)\n\n  const loadScript = (\n    scriptName: string | Engine.ScriptID,\n    method: \"name\" | \"id\" = \"name\"\n  ) => {\n    let foundScript\n    if (method === \"name\") {\n      foundScript = scripts[scriptName]\n    } else if (method === \"id\") {\n      foundScript = Object.values(scripts).find((script) => script.id === scriptName)\n    }\n    setSelectedScript(foundScript)\n    setScriptBody(foundScript?.content ?? \"\")\n  }\n\n  const saveScript = (script: Engine.Script) => {\n    const foundScript = Object.values(scripts).find((s) => s.id === script.id)\n    if (!foundScript) return\n    foundScript.content = scriptBody\n    compileScripts()\n  }\n\n  interface CreateScriptPayload {\n    name: string\n    language: Engine.Language\n    type: Engine.ScriptType\n  }\n\n  const createScript = (scriptsPayload: CreateScriptPayload[]): Engine.Script[] => {\n    const newScripts: Engine.Script[] = []\n    const updatedScriptsObject = scripts\n    scriptsPayload.forEach((scriptPayload) => {\n      const newScript = generateNewScript(\n        scriptPayload.name,\n        scriptPayload.language,\n        scriptPayload.type\n      )\n      newScripts.push(newScript)\n      updatedScriptsObject[newScript.name] = newScript\n    })\n\n    setScripts({ ...updatedScriptsObject })\n    return newScripts\n  }\n\n  return {\n    scripts: Object.values(scripts),\n    _setScripts: setScripts,\n    scriptBody,\n    setScriptBody,\n    selectedScript,\n    setSelectedScript,\n    loadScript,\n    saveScript,\n    createScript,\n    _compileScripts :compileScripts,\n  }\n}\n\nexport default useScripts\n","import { useContext, useEffect, useMemo, useState } from \"react\"\nimport context from \"../../engine/core/EngineContext\"\nimport SceneManager from \"../../engine/core/SceneManager\"\nimport ScriptCompiler from \"../../utils/ScriptCompiler\"\nimport useScene from \"../scene/useScene\"\nimport useScripts from \"../scripts/useScripts\"\nimport { EditorContext } from \"./EditorContext\"\n\nconst useEditor = (rootHook?: boolean) => {\n  const { scripts, _setScripts, _compileScripts } = useScripts()\n  const { sceneConfig, selectEntity, _setEntities, _setMaterials } =\n    useScene()\n  const { renderElement, localScenePayload } = useContext(EditorContext)\n  const [isRunning, setIsRunning] = useState(context.isPlaying())\n\n  useEffect(() => {\n    if (!localScenePayload || !rootHook) return\n\n    const scriptsPayload = Object.fromEntries(\n      localScenePayload.scripts.map((s) => [s.id, s])\n    )\n\n    _setScripts(scriptsPayload)\n    ScriptCompiler.CompileScripts(localScenePayload.scripts)\n\n\n    _setEntities(localScenePayload.sceneConfig.entities)\n\n    const materialsPayload = Object.fromEntries(\n      localScenePayload.sceneConfig.materials.map((m) => [m.id, m])\n    )\n    _setMaterials(materialsPayload)\n\n    context.updateScenePayload(localScenePayload, true)\n  }, [_setEntities, _setMaterials, _setScripts, localScenePayload, rootHook])\n\n\n  const scenePayload: Engine.ScenePayload = useMemo(\n    () => ({ sceneConfig, scripts }),\n    [sceneConfig, scripts]\n  )\n  \n  useEffect(() => {\n    const init = () => {\n      if (!renderElement || !renderElement.current || !scenePayload || !rootHook)  {\n        return\n      }\n      context.init(renderElement.current, scenePayload)\n    }\n    init()\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [renderElement, rootHook])\n\n  const toggleRun = () => {\n    if (!renderElement || !renderElement.current) {\n      return\n    }\n    if (SceneManager.isPlaying()) {\n      setIsRunning(false)\n      context.runEditMode()\n      return\n    }\n    context.updateScenePayload(scenePayload)\n    context.runPlayMode()\n    setIsRunning(true)\n  }\n\n  const handleClickScene = (e: React.MouseEvent) => {\n    const canvas: HTMLCanvasElement = e.target as unknown as HTMLCanvasElement\n    canvas.focus()\n    const domRect: DOMRect = canvas.getBoundingClientRect()\n    const [mouseX, mouseY]: [number, number] = [\n      ((e.clientX - domRect.x) / domRect.width) * 2 - 1,\n      -((e.clientY - domRect.y) / domRect.height) * 2 + 1,\n    ]\n    context.handleClick(mouseX, mouseY)\n    selectEntity(context.getSelectedEntity() ?? \"\")\n  }\n\n  const saveScene = () => {\n    localStorage.setItem(\"scenePayload\", JSON.stringify(scenePayload))\n  }\n\n  return {\n    renderElement,\n    isRunning,\n    toggleRun,\n    handleClickScene,\n    saveScene,\n  }\n}\n\nexport default useEditor\n","interface Props {\n  field: Engine.ComponentPropType\n  updateField: (field: Engine.ComponentPropType) => void\n}\n\nconst ComponentFieldValue = ({ field, updateField }: Props): React.ReactElement => {\n  const handleUpdateField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (typeof field === \"number\") {\n      updateField(Number(e.target.value))\n      return\n    }\n\n    if (typeof field === \"string\") {\n      updateField(e.target.value)\n    }\n  }\n\n  if (typeof field === \"number\" || typeof field === \"string\")\n    return (\n      <div className=\"bg-gray-700 text-white px-1  w-max\">\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={typeof field === \"number\" ? field : field}\n          onChange={handleUpdateField}\n          className=\"bg-gray-700 w-16 font-mono text-xs\"\n        />\n      </div>\n    )\n\n  if (Array.isArray(field)) return <div>array field</div>\n\n  return (\n    <div className=\"bg-gray-700 text-white px-2 grid grid-cols-3 gap-1\">\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-0.5 text-xs text-gray-400\">x:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.x}\n          onChange={(e) =>\n            updateField({\n              x: Number(e.target.value),\n              y: field?.y ?? 0,\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">y:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.y}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: Number(e.target.value),\n              z: field?.z ?? 0,\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n      <pre className=\"text-xs p-0 m-0\">\n        <span className=\"pr-2 text-xs text-gray-400\">z:</span>\n        <input\n          type={typeof field === \"string\" ? \"string\" : \"number\"}\n          value={field.z}\n          onChange={(e) =>\n            updateField({\n              x: field?.x ?? 0,\n              y: field?.y ?? 0,\n              z: Number(e.target.value),\n            })\n          }\n          className=\"bg-gray-700 w-12 font-mono text-xs\"\n        />\n      </pre>\n    </div>\n  )\n}\n\nexport default ComponentFieldValue\n","import useScripts from \"../../../../state/scripts/useScripts\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  componentType: Engine.ComponentType\n  componentProps: Engine.ComponentProps\n  componentScriptID: Engine.ScriptID\n  updateComponent: (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => void\n}\n\nconst ComponentNode = ({\n  componentType,\n  componentProps,\n  updateComponent,\n}: Props): React.ReactElement => {\n  const { loadScript } = useScripts()\n  return (\n    <div className=\"bg-gray-800 text-white pb-4\">\n      <div className=\"flex w-full justify-between items-center mb-2\">\n        <h3>{componentType}</h3>\n        {componentType !== \"Transform\" && (\n          <small\n            className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n            onClick={() => {\n              loadScript(componentType)\n            }}\n          >\n            Open in editor\n          </small>\n        )}\n      </div>\n      <div className=\"space-y-2\">\n        {Object.entries(componentProps).map(([fieldName, fieldValue]) => (\n          <div key={fieldName} className=\"flex space-x-2\">\n            <p className=\"inspector-field-label\">{fieldName}</p>\n            <ComponentFieldValue\n              field={fieldValue}\n              updateField={(e) => updateComponent(componentType, fieldName, e)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ComponentNode\n","import { Color } from \"three\"\nimport { ReactElement } from \"react\"\nimport ComponentFieldValue from \"./ComponentFieldValue\"\n\ninterface Props {\n  lightProps: Engine.LightProps\n  updateLightProps: (updated: Engine.LightProps) => void\n}\n\nexport default function LightNode({ lightProps, updateLightProps }: Props): ReactElement {\n  const setLightProps = (value: any, fieldName: string) => {\n    const updatedLightProps = {\n      ...lightProps,\n    } as any\n    updatedLightProps[fieldName] = value\n    updateLightProps(updatedLightProps)\n  }\n\n  const colorToHexString = (color: string) => {\n    return `#${new Color(lightProps.color).getHexString()}`\n  }\n\n  return (\n    <>\n      <h3>Light</h3>\n      <div className=\"space-y-2 pt-2\">\n        <section className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Intensity</p>\n          <ComponentFieldValue\n            field={lightProps.intensity}\n            updateField={(e) => setLightProps(e, \"intensity\")}\n          />\n        </section>\n        <section className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Color</p>\n          <input\n            type=\"color\"\n            value={colorToHexString(lightProps.color as string)}\n            onChange={(e) => setLightProps(e.target.value, \"color\")}\n          />\n        </section>\n      </div>\n    </>\n  )\n}\n","import { ReactElement, useEffect, useState } from \"react\"\nimport ComponentManager from \"../../../engine/core/ComponentManager\"\nimport GeometryManager from \"../../../engine/core/GeometryManager\"\nimport MaterialManager from \"../../../engine/core/MaterialManager\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport ComponentNode from \"./entity/ComponentNode\"\nimport LightNode from \"./entity/LightNode\"\n\ninterface Props {\n  selectedEntity: Engine.EntityProps\n}\n\ninterface SelectOption {\n  label: string\n  value: string\n}\n\nexport default function EntityInspector({ selectedEntity }: Props): ReactElement {\n  const { updateEntity, sceneConfig } = useScene()\n  const { isRunning } = useEditor()\n\n  const [controls, setControls] = useState<\n    Record<Engine.ComponentType, Engine.ComponentProps>\n  >({})\n  const [materialType, setMaterialType] = useState<Engine.MaterialType>(\"normal\")\n  const [geometryType, setGeometryType] = useState<Engine.GeometryType>(\"box\")\n\n  useEffect(() => {\n    if (!selectedEntity) return\n    setMaterialType(selectedEntity.material ?? \"\")\n    setGeometryType(selectedEntity.geometry ?? \"\")\n  }, [selectedEntity])\n\n  // * Handles populating all correct value fields when selecting entity */\n  useEffect(() => {\n    const updateComponentFields = (entity: Engine.EntityProps) => {\n      const propFields: Record<Engine.ComponentType, Engine.ComponentProps> = {}\n      Object.entries(entity.components).forEach(([type, props]) => {\n        propFields[type] = props\n      })\n      setControls({ ...propFields } as any)\n    }\n    if (selectedEntity) updateComponentFields(selectedEntity)\n  }, [selectedEntity, sceneConfig, isRunning])\n\n  const handleChangeName = (newName: string) => {\n    if (!selectedEntity) return\n    updateEntity({ ...selectedEntity, name: newName })\n  }\n\n  const addComponent = (componentName: Engine.ComponentType) => {\n    if (!selectedEntity) return\n    const componentProps = ComponentManager.instance.getComponentProps(componentName)\n    if (!componentProps) return\n    selectedEntity.components[componentName] = componentProps\n    updateEntity(selectedEntity)\n  }\n\n  const updateComponent = (\n    type: Engine.ComponentType,\n    field: string,\n    value: Engine.ComponentPropType\n  ) => {\n    const newControls = { ...controls }\n    newControls[type][field] = value\n    setControls(newControls)\n    if (selectedEntity) {\n      selectedEntity.components = newControls\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getComponentOptions = (): SelectOption[] => {\n    const components = ComponentManager.instance.getComponents()\n    if (!selectedEntity) return []\n    const currentComponents = Object.keys(selectedEntity?.components)\n    return Object.keys(components)\n      .filter((c) => !currentComponents.includes(c))\n      .map((component) => ({\n        label: component,\n        value: component,\n      }))\n  }\n\n  const componentOptions = getComponentOptions()\n\n  const updateLightProps = (updatedProps: Engine.LightProps) => {\n    if (selectedEntity) {\n      selectedEntity.lightProps = updatedProps\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const showShadowOptions = (): boolean => {\n    return !(\n      selectedEntity.type === \"light\" &&\n      selectedEntity.lightProps &&\n      selectedEntity.lightProps.type === \"ambient\"\n    )\n  }\n\n  // #region -- mesh --\n  const updateMaterial = (newMaterial: Engine.MaterialType) => {\n    setMaterialType(newMaterial)\n    if (selectedEntity) {\n      selectedEntity.material = newMaterial\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const updateGeometry = (newGeometry: Engine.GeometryType) => {\n    setGeometryType(newGeometry)\n    if (selectedEntity) {\n      selectedEntity.geometry = newGeometry\n      updateEntity({ ...selectedEntity })\n    }\n  }\n\n  const getMaterialOptions = (): SelectOption[] => {\n    return Object.keys(MaterialManager.instance.materials).map((material) => ({\n      label: material,\n      value: material,\n    }))\n  }\n\n  const materialOptions: SelectOption[] = getMaterialOptions()\n\n  const getGeometryOptions = (): SelectOption[] => {\n    return Object.keys(GeometryManager.instance.geometries).map((geometry) => ({\n      label: geometry,\n      value: geometry,\n    }))\n  }\n\n  const geometryOptions: SelectOption[] = getGeometryOptions()\n  // #endregion\n\n  return (\n    <Panel label=\"Inspector\">\n      <h1>\n        <input\n          className=\"transition bg-gray-800 hover:bg-gray-700 focus:bg-gray-900\"\n          type=\"text\"\n          defaultValue={selectedEntity?.name}\n          key={selectedEntity?.id ?? \"\"}\n          onBlur={(e) => handleChangeName(e.target.value)}\n          // @ts-ignore\n          onKeyDown={(e) => e.key === \"Enter\" && e.target.blur()}\n        />\n      </h1>\n      <section className=\"space-y-2 py-2\">\n        <div className=\"flex space-x-2\">\n          <p className=\"inspector-field-label\">Visible</p>\n          <input\n            type=\"checkbox\"\n            checked={selectedEntity.visible}\n            onChange={(e) =>\n              updateEntity({ ...selectedEntity, visible: e.target.checked })\n            }\n          />\n        </div>\n        {showShadowOptions() && (\n          <>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Cast shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.castShadow}\n                onChange={(e) =>\n                  updateEntity({ ...selectedEntity, castShadow: e.target.checked })\n                }\n              />\n            </div>\n            <div className=\"flex space-x-2\">\n              <p className=\"inspector-field-label\">Receive shadow</p>\n              <input\n                type=\"checkbox\"\n                checked={selectedEntity.receiveShadow}\n                onChange={(e) =>\n                  updateEntity({\n                    ...selectedEntity,\n                    castShadow: e.target.checked,\n                  })\n                }\n              />\n            </div>\n          </>\n        )}\n      </section>\n\n      {/* Components */}\n      <section className=\"space-y-2\">\n        {Object.entries(controls).map(([type, props]) => (\n          <ComponentNode\n            componentType={type}\n            componentProps={props}\n            key={type}\n            componentScriptID={\"\"}\n            updateComponent={updateComponent}\n          />\n        ))}\n      </section>\n\n      {/* Add components */}\n      {componentOptions.length > 0 && (\n        <section>\n          <select onChange={(e) => console.log(e.target.value)}>\n            {componentOptions.map(({ label, value }) => (\n              <option key={value} value={value}>\n                {label}\n              </option>\n            ))}\n          </select>\n          <div className=\"grid place-items-center mt-2\">\n            <button onClick={() => addComponent(componentOptions[0].value)}>\n              Add Component\n            </button>\n          </div>\n        </section>\n      )}\n\n      {/* Mesh */}\n      {selectedEntity.type === \"basic\" && (\n        <section>\n          <div className=\"bg-gray-800 text-white\">\n            <h3>Mesh</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Material</p>\n                <select\n                  onChange={(e) => updateMaterial(e.target.value)}\n                  value={materialType}\n                >\n                  {materialOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"flex space-x-2 items-center\">\n                <p className=\"inspector-field-label\">Geometry</p>\n                <select\n                  onChange={(e) => updateGeometry(e.target.value)}\n                  value={geometryType}\n                >\n                  {geometryOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Light */}\n      {selectedEntity.type === \"light\" && selectedEntity.lightProps && (\n        <LightNode\n          lightProps={selectedEntity.lightProps}\n          updateLightProps={updateLightProps}\n        />\n      )}\n    </Panel>\n  )\n}\n","import { ReactElement } from 'react'\nimport useScripts from '../../../state/scripts/useScripts'\nimport Panel from '../Panel'\n\ninterface Props {\n  selectedMaterial: Engine.MaterialProps\n}\n\nexport default function MaterialInspector({ selectedMaterial }: Props): ReactElement {\n  const { loadScript } = useScripts()\n  return (\n    <Panel label=\"Inspector\">\n      <h1>{selectedMaterial.name}</h1>\n      <section>\n        Fragment shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.fragmentShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n      <section>\n        Vertex shader{\" \"}\n        <small\n          className=\"text-xs font-light underline text-gray-400 cursor-pointer hover:text-gray-300\"\n          onClick={() => {\n            loadScript(selectedMaterial.vertexShaderID, \"id\")\n          }}\n        >\n          Open in editor\n        </small>\n      </section>\n    </Panel>\n  )\n}\n","import useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport EntityInspector from \"./EntityInspector\"\nimport MaterialInspector from \"./MaterialInspector\"\n\nexport default function InspectorPanel() {\n  const { selectedEntity, selectedMaterial} = useScene()\n  \n  if (selectedMaterial) return (\n    <MaterialInspector selectedMaterial={selectedMaterial} />\n  )\n  else if (selectedEntity) return (\n    <EntityInspector selectedEntity={selectedEntity} />\n  )\n  else return <Panel label=\"Inspector\" />\n\n}\n","import { ReactElement } from \"react\"\nimport useEditor from \"../../../state/editor/useEditor\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport { generateNewEntity, generateNewLight } from \"../../../utils/entity.utils\"\n\nexport default function Nav(): ReactElement {\n  const { createEntity,  createMaterial } = useScene()\n  const { toggleRun, isRunning, saveScene } = useEditor(true)\n  const { createScript, selectedScript, loadScript, saveScript, scriptBody } =\n    useScripts()\n\n  const handleCreateComponent = () => {\n    const componentName = \"NewComponent\"\n    createScript([{ name: componentName, language: \"js\", type: \"component\" }])\n  }\n\n  const handleCreateMaterial = () => {\n    const materialName = \"NewMaterial\"\n    const [vShader, fShader] = createScript([\n      {\n        name: \"vertex\",\n        language: \"glsl\",\n        type: \"vertex\",\n      },\n      {\n        name: \"fragment\",\n        language: \"glsl\",\n        type: \"fragment\",\n      },\n    ])\n    createMaterial(materialName, vShader.id, fShader.id)\n  }\n\n  const handleCreateEntity = () => {\n    const newEntity: Engine.EntityProps = generateNewEntity()\n    createEntity(newEntity);\n  }\n\n  const handleCreateLight = () => {\n    const newLight: Engine.EntityProps = generateNewLight()\n    createEntity(newLight)\n  }\n\n  const handleSaveScene = () => {\n    saveScene();\n  }\n\n  const handleSaveScript = () => {\n    if (selectedScript) {\n      saveScript({ ...selectedScript, content: scriptBody })\n    }\n  }\n\n  const handleCloseScript = () => {\n    loadScript(\"\")\n  }\n  \n  return (\n    <div>\n      <header className={`h-0.5 transition bg-red-600 ${isRunning && \"bg-green-500\"}`} />\n      <nav className=\"bg-gray-900 p-2 flex w-full shadow-sm\">\n        <div className=\"space-x-2\">\n          <button onClick={toggleRun} className=\"primary\">\n            {isRunning ? \"Stop\" : \"Run\"} Scene\n          </button>\n          <button onClick={handleCreateEntity} className=\"secondary\">\n            Add Entity\n          </button>\n          <button onClick={handleCreateLight} className=\"secondary\">\n            Add Light\n          </button>\n          <button onClick={handleCreateComponent} className=\"secondary\">\n            Add Component\n          </button>\n          <button onClick={handleCreateMaterial} className=\"secondary\">\n            Add Material\n          </button>\n          {/* save scene button */}\n          <button onClick={handleSaveScene} className=\"secondary\">\n            Save Scene\n          </button>\n        </div>\n        {selectedScript && (\n          <div className=\"space-x-2 ml-auto\">\n            <button className=\"secondary\" onClick={handleCloseScript}>\n              Close Editor\n            </button>\n            <button onClick={handleSaveScript} className=\"submit\">\n              Save script\n            </button>\n          </div>\n        )}\n      </nav>\n    </div>\n  )\n}\n","import Editor from '@monaco-editor/react';\nimport { ReactElement, useEffect } from 'react'\nimport useScripts from '../../../state/scripts/useScripts';\n\nexport default function EditorPanel(): ReactElement {\n  const { selectedScript, scriptBody, setScriptBody } = useScripts();\n\n  useEffect(() => {\n    if (!scriptBody && selectedScript) {\n      setScriptBody(selectedScript.content)\n    }\n  }, [selectedScript])\n\n  const handleEditorChange = (newValue: string | undefined) => {\n    setScriptBody(newValue ?? \"\")\n  }\n\n  const getLanguage = () => {\n    if (!selectedScript) return 'javascript';\n    switch (selectedScript.language) {\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      case 'glsl':\n        return 'c';\n      default:\n        return 'cpp';\n    }\n  }\n\n  return (\n    <>\n      {selectedScript && (\n        <>\n          <div className=\"absolute h-full w-full\" key={selectedScript.id}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              defaultLanguage={getLanguage()}\n              defaultValue={selectedScript.content}\n              theme=\"vs-dark\"\n              onChange={handleEditorChange}\n              defaultPath=\"/src/modal\"\n            />\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { ReactElement } from 'react'\nimport useEditor from '../../../state/editor/useEditor'\n\nexport default function ScenePanel(): ReactElement {\n  const { renderElement, handleClickScene } = useEditor()\n  \n  return (\n    <>\n      {renderElement && (\n        <div\n          id=\"scene\"\n          ref={renderElement}\n          tabIndex={-1}\n          onClick={(e) => handleClickScene(e)}\n        />\n      )}\n    </>\n  )\n}\n","import { ReactElement, useMemo } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\n\ninterface Props {\n  entity: Engine.EntityProps\n}\n\nfunction HierarchyNode({ entity }: Props): ReactElement {\n  const { selectedEntity, selectEntity } = useScene()\n\n  const isSelected = useMemo(\n    () => selectedEntity?.id === entity.id,\n    [selectedEntity, entity.id]\n  )\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    selectEntity(entity.id)\n  }\n\n  const isHidden = useMemo(() => !entity.visible, [entity])\n\n  return (\n    <div\n      className={`\n          p-1\n          rounded-sm\n          transition\n          cursor-pointer\n          select-none\n        text-white\n          text-sm\n          ${isSelected && \"bg-gray-500\"}\n          ${isSelected ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"}\n          ${isHidden && \"opacity-50\"}\n\n    `}\n      onClick={handleClick}\n    >\n      {entity?.name ?? \"__ENTITY__\"}\n    </div>\n  )\n}\n\nexport default HierarchyNode\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport Panel from \"../Panel\"\nimport HierarchyNode from \"./HierarchyNode\"\n\nexport default function HierarchyPanel(): ReactElement {\n  const { sceneConfig } = useScene()\n  return (\n    <Panel label=\"Hierarchy\">\n      <div className=\"space-y-1\">\n        {sceneConfig.entities.map((entity) => (\n          <HierarchyNode key={entity.id} entity={entity} />\n        ))}\n      </div>\n    </Panel>\n  )\n}\n","import React, { ReactElement } from 'react'\n\ninterface Props {\n  title: string\n  children?: ReactElement | ReactElement[] | any\n}\n\nexport default function ProjectNode({title, children}: Props): ReactElement {\n  return (\n    <details>\n      <summary>{title}</summary>\n      {children ?? `No ${title}`}\n    </details>\n  )\n}\n","import { ReactElement } from \"react\"\nimport useScene from \"../../../state/scene/useScene\"\nimport useScripts from \"../../../state/scripts/useScripts\"\nimport Panel from \"../Panel\"\nimport ProjectNode from \"./ProjectNode\"\n\nexport default function ProjectPanel(): ReactElement {\n  const { sceneConfig, selectedMaterial, selectMaterial } = useScene()\n  const { scripts, loadScript, selectedScript } = useScripts()\n  return (\n    <Panel label=\"Project\" bodyClass=\"space-y-2\">\n      <ProjectNode title=\"Scripts\">\n        {scripts.map((s) => (\n          <div\n            className={`project-node\n          ${selectedScript?.id === s.id && \"bg-gray-500\"}\n          ${\n            selectedScript?.id === s.id ? \"hover:bg-gray-600\" : \"hover:bg-gray-500\"\n          }`}\n            onClick={() => loadScript(s.name)}\n            key={s.id}\n          >\n            {s.name}.{s.language}\n          </div>\n        ))}\n      </ProjectNode>\n\n      <ProjectNode title=\"Prefabs\"></ProjectNode>\n\n      <ProjectNode title=\"Materials\">\n        {sceneConfig.materials.map((material) => (\n          <div\n            key={material.id}\n            className={`project-node ${\n              selectedMaterial?.id === material.id && \"bg-gray-500\"\n            }\n          ${\n            selectedMaterial?.id === material.id\n              ? \"hover:bg-gray-600\"\n              : \"hover:bg-gray-500\"\n              }`}\n            onClick={() => selectMaterial(material.id)}\n          >\n            {material.name}\n          </div>\n        ))}\n      </ProjectNode>\n    </Panel>\n  )\n}\n","import  { ReactElement } from \"react\"\nimport InspectorPanel from \"../panels/inspector/InspectorPanel\"\nimport Nav from \"../panels/nav/Nav\"\nimport EditorPanel from \"../panels/editor/EditorPanel\"\nimport ScenePanel from \"../panels/scene/ScenePanel\"\nimport HierarchyPanel from \"../panels/hierarchy/HierarchyPanel\"\nimport ProjectPanel from \"../panels/project/ProjectPanel\"\n\nexport default function BrowserEngine(): ReactElement {\n\n  return (\n    <div className=\"w-screen h-screen overflow-hidden\">\n      <Nav />\n      <section\n        className=\"w-full h-full grid\"\n        style={{ gridTemplateColumns: \"70vw 1fr 1fr\" }}\n      >\n        <div className=\"h-full w-full grid relative\">\n          <ScenePanel />\n          <EditorPanel />\n          {/* <div className=\"absolute inset-0 bg-red-200 border-2 border-green-500\"></div> */}\n        </div>\n        <aside className=\"grid grid-rows-5\">\n          <div className=\"row-span-3\">\n            <HierarchyPanel />\n          </div>\n          <div className=\"row-span-2\">\n            <ProjectPanel />\n          </div>\n        </aside>\n        <aside className=\"grid\">\n          <InspectorPanel />\n        </aside>\n      </section>\n    </div>\n  )\n}\n","import { EditorProvider } from \"./state/editor/EditorContext\"\nimport { SceneProvider } from \"./state/scene/SceneContext\"\nimport { ScriptProvider } from \"./state/scripts/ScriptContext\"\nimport BrowserEngine from \"./ui/base/BrowserEngine\"\n\nfunction App() {\n  return (\n    <ScriptProvider>\n      <SceneProvider>\n        <EditorProvider>\n          <BrowserEngine />\n        </EditorProvider>\n      </SceneProvider>\n    </ScriptProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}